# Makefile.in generated by automake 1.14.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = giada$(EXEEXT)
@WITH_VST_TRUE@am__append_1 = \
@WITH_VST_TRUE@src/deps/juce/juce_audio_basics/juce_audio_basics.cpp         \
@WITH_VST_TRUE@src/deps/juce/juce_audio_processors/juce_audio_processors.cpp \
@WITH_VST_TRUE@src/deps/juce/juce_core/juce_core.cpp                         \
@WITH_VST_TRUE@src/deps/juce/juce_data_structures/juce_data_structures.cpp   \
@WITH_VST_TRUE@src/deps/juce/juce_events/juce_events.cpp                     \
@WITH_VST_TRUE@src/deps/juce/juce_graphics/juce_graphics.cpp                 \
@WITH_VST_TRUE@src/deps/juce/juce_gui_basics/juce_gui_basics.cpp             \
@WITH_VST_TRUE@src/deps/juce/juce_gui_extra/juce_gui_extra.cpp

@WINDOWS_TRUE@am__append_2 = resource.rc

# for 32 bit compilation:
# export CXXFLAGS="-m32"
# export LDFLAGS="-m32"
# -ObjC++: Juce requires to build some Objective C code
@OSX_TRUE@am__append_3 = src/utils/cocoa.mm src/utils/cocoa.h
@OSX_TRUE@am__append_4 = -ObjC++
TESTS = giada_tests$(EXEEXT)
check_PROGRAMS = giada_tests$(EXEEXT)
subdir = .
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/configure $(am__configure_deps) depcomp \
	test-driver AUTHORS COPYING ChangeLog INSTALL NEWS compile \
	install-sh missing
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__giada_SOURCES_DIST = src/main.cpp src/core/const.h \
	src/core/channel.h src/core/channel.cpp \
	src/core/sampleChannel.h src/core/sampleChannel.cpp \
	src/core/midiChannel.h src/core/midiChannel.cpp \
	src/core/midiMapConf.h src/core/midiMapConf.cpp \
	src/core/conf.h src/core/conf.cpp src/core/kernelAudio.h \
	src/core/kernelAudio.cpp src/core/pluginHost.h \
	src/core/pluginHost.cpp src/core/mixerHandler.h \
	src/core/mixerHandler.cpp src/core/init.h src/core/init.cpp \
	src/core/plugin.h src/core/plugin.cpp src/core/wave.h \
	src/core/wave.cpp src/core/waveFx.h src/core/waveFx.cpp \
	src/core/kernelMidi.h src/core/kernelMidi.cpp \
	src/core/graphics.h src/core/graphics.cpp \
	src/core/patch_DEPR_.h src/core/patch_DEPR_.cpp \
	src/core/patch.h src/core/patch.cpp src/core/recorder.h \
	src/core/recorder.cpp src/core/mixer.h src/core/mixer.cpp \
	src/core/dataStorageIni.h src/core/dataStorageIni.cpp \
	src/core/dataStorageJson.h src/core/dataStorageJson.cpp \
	src/glue/glue.h src/glue/glue.cpp src/glue/storage.h \
	src/glue/storage.cpp src/glue/channel.h src/glue/channel.cpp \
	src/gui/dialogs/gd_keyGrabber.h \
	src/gui/dialogs/gd_keyGrabber.cpp src/gui/dialogs/gd_about.h \
	src/gui/dialogs/gd_about.cpp src/gui/dialogs/gd_mainWindow.h \
	src/gui/dialogs/gd_mainWindow.cpp \
	src/gui/dialogs/gd_beatsInput.h \
	src/gui/dialogs/gd_beatsInput.cpp \
	src/gui/dialogs/gd_warnings.h src/gui/dialogs/gd_warnings.cpp \
	src/gui/dialogs/gd_bpmInput.h src/gui/dialogs/gd_bpmInput.cpp \
	src/gui/dialogs/gd_browser.h src/gui/dialogs/gd_browser.cpp \
	src/gui/dialogs/gd_config.h src/gui/dialogs/gd_config.cpp \
	src/gui/dialogs/gd_devInfo.h src/gui/dialogs/gd_devInfo.cpp \
	src/gui/dialogs/gd_pluginList.h \
	src/gui/dialogs/gd_pluginList.cpp \
	src/gui/dialogs/gd_pluginWindow.h \
	src/gui/dialogs/gd_pluginWindow.cpp \
	src/gui/dialogs/gd_editor.h src/gui/dialogs/gd_editor.cpp \
	src/gui/dialogs/gd_pluginWindowGUI.h \
	src/gui/dialogs/gd_pluginWindowGUI.cpp \
	src/gui/dialogs/gd_midiOutput.h \
	src/gui/dialogs/gd_midiOutput.cpp \
	src/gui/dialogs/gd_midiInput.h \
	src/gui/dialogs/gd_midiInput.cpp \
	src/gui/dialogs/gd_actionEditor.h \
	src/gui/dialogs/gd_actionEditor.cpp \
	src/gui/dialogs/gd_pluginChooser.h \
	src/gui/dialogs/gd_pluginChooser.cpp src/gui/elems/ge_column.h \
	src/gui/elems/ge_column.cpp src/gui/elems/ge_sampleChannel.h \
	src/gui/elems/ge_sampleChannel.cpp \
	src/gui/elems/ge_midiChannel.h \
	src/gui/elems/ge_midiChannel.cpp \
	src/gui/elems/ge_midiIoTools.h \
	src/gui/elems/ge_midiIoTools.cpp src/gui/elems/ge_mixed.h \
	src/gui/elems/ge_mixed.cpp src/gui/elems/ge_waveform.h \
	src/gui/elems/ge_waveform.cpp src/gui/elems/ge_browser.h \
	src/gui/elems/ge_browser.cpp src/gui/elems/ge_actionWidget.h \
	src/gui/elems/ge_actionWidget.cpp \
	src/gui/elems/ge_envelopeChannel.h \
	src/gui/elems/ge_envelopeChannel.cpp \
	src/gui/elems/ge_pianoRoll.h src/gui/elems/ge_pianoRoll.cpp \
	src/gui/elems/ge_channel.h src/gui/elems/ge_channel.cpp \
	src/gui/elems/ge_muteChannel.h \
	src/gui/elems/ge_muteChannel.cpp \
	src/gui/elems/ge_actionChannel.h \
	src/gui/elems/ge_actionChannel.cpp src/gui/elems/ge_window.h \
	src/gui/elems/ge_window.cpp src/gui/elems/ge_status.h \
	src/gui/elems/ge_status.cpp src/gui/elems/ge_keyboard.h \
	src/gui/elems/ge_keyboard.cpp src/gui/elems/ge_waveTools.h \
	src/gui/elems/ge_waveTools.cpp src/gui/elems/ge_modeBox.h \
	src/gui/elems/ge_modeBox.cpp src/gui/elems/ge_controller.h \
	src/gui/elems/ge_controller.cpp \
	src/gui/elems/ge_channelButton.h \
	src/gui/elems/ge_channelButton.cpp \
	src/gui/elems/ge_pluginBrowser.h \
	src/gui/elems/ge_pluginBrowser.cpp src/utils/log.h \
	src/utils/log.cpp src/utils/gui_utils.h \
	src/utils/gui_utils.cpp src/utils/gvector.h src/utils/utils.h \
	src/utils/utils.cpp \
	src/deps/juce/juce_audio_basics/juce_audio_basics.cpp \
	src/deps/juce/juce_audio_processors/juce_audio_processors.cpp \
	src/deps/juce/juce_core/juce_core.cpp \
	src/deps/juce/juce_data_structures/juce_data_structures.cpp \
	src/deps/juce/juce_events/juce_events.cpp \
	src/deps/juce/juce_graphics/juce_graphics.cpp \
	src/deps/juce/juce_gui_basics/juce_gui_basics.cpp \
	src/deps/juce/juce_gui_extra/juce_gui_extra.cpp resource.rc \
	src/utils/cocoa.mm src/utils/cocoa.h
am__dirstamp = $(am__leading_dot)dirstamp
@WITH_VST_TRUE@am__objects_1 = src/deps/juce/juce_audio_basics/giada-juce_audio_basics.$(OBJEXT) \
@WITH_VST_TRUE@	src/deps/juce/juce_audio_processors/giada-juce_audio_processors.$(OBJEXT) \
@WITH_VST_TRUE@	src/deps/juce/juce_core/giada-juce_core.$(OBJEXT) \
@WITH_VST_TRUE@	src/deps/juce/juce_data_structures/giada-juce_data_structures.$(OBJEXT) \
@WITH_VST_TRUE@	src/deps/juce/juce_events/giada-juce_events.$(OBJEXT) \
@WITH_VST_TRUE@	src/deps/juce/juce_graphics/giada-juce_graphics.$(OBJEXT) \
@WITH_VST_TRUE@	src/deps/juce/juce_gui_basics/giada-juce_gui_basics.$(OBJEXT) \
@WITH_VST_TRUE@	src/deps/juce/juce_gui_extra/giada-juce_gui_extra.$(OBJEXT)
am__objects_2 =
@OSX_TRUE@am__objects_3 = src/utils/giada-cocoa.$(OBJEXT)
am_giada_OBJECTS = src/giada-main.$(OBJEXT) \
	src/core/giada-channel.$(OBJEXT) \
	src/core/giada-sampleChannel.$(OBJEXT) \
	src/core/giada-midiChannel.$(OBJEXT) \
	src/core/giada-midiMapConf.$(OBJEXT) \
	src/core/giada-conf.$(OBJEXT) \
	src/core/giada-kernelAudio.$(OBJEXT) \
	src/core/giada-pluginHost.$(OBJEXT) \
	src/core/giada-mixerHandler.$(OBJEXT) \
	src/core/giada-init.$(OBJEXT) src/core/giada-plugin.$(OBJEXT) \
	src/core/giada-wave.$(OBJEXT) src/core/giada-waveFx.$(OBJEXT) \
	src/core/giada-kernelMidi.$(OBJEXT) \
	src/core/giada-graphics.$(OBJEXT) \
	src/core/giada-patch_DEPR_.$(OBJEXT) \
	src/core/giada-patch.$(OBJEXT) \
	src/core/giada-recorder.$(OBJEXT) \
	src/core/giada-mixer.$(OBJEXT) \
	src/core/giada-dataStorageIni.$(OBJEXT) \
	src/core/giada-dataStorageJson.$(OBJEXT) \
	src/glue/giada-glue.$(OBJEXT) src/glue/giada-storage.$(OBJEXT) \
	src/glue/giada-channel.$(OBJEXT) \
	src/gui/dialogs/giada-gd_keyGrabber.$(OBJEXT) \
	src/gui/dialogs/giada-gd_about.$(OBJEXT) \
	src/gui/dialogs/giada-gd_mainWindow.$(OBJEXT) \
	src/gui/dialogs/giada-gd_beatsInput.$(OBJEXT) \
	src/gui/dialogs/giada-gd_warnings.$(OBJEXT) \
	src/gui/dialogs/giada-gd_bpmInput.$(OBJEXT) \
	src/gui/dialogs/giada-gd_browser.$(OBJEXT) \
	src/gui/dialogs/giada-gd_config.$(OBJEXT) \
	src/gui/dialogs/giada-gd_devInfo.$(OBJEXT) \
	src/gui/dialogs/giada-gd_pluginList.$(OBJEXT) \
	src/gui/dialogs/giada-gd_pluginWindow.$(OBJEXT) \
	src/gui/dialogs/giada-gd_editor.$(OBJEXT) \
	src/gui/dialogs/giada-gd_pluginWindowGUI.$(OBJEXT) \
	src/gui/dialogs/giada-gd_midiOutput.$(OBJEXT) \
	src/gui/dialogs/giada-gd_midiInput.$(OBJEXT) \
	src/gui/dialogs/giada-gd_actionEditor.$(OBJEXT) \
	src/gui/dialogs/giada-gd_pluginChooser.$(OBJEXT) \
	src/gui/elems/giada-ge_column.$(OBJEXT) \
	src/gui/elems/giada-ge_sampleChannel.$(OBJEXT) \
	src/gui/elems/giada-ge_midiChannel.$(OBJEXT) \
	src/gui/elems/giada-ge_midiIoTools.$(OBJEXT) \
	src/gui/elems/giada-ge_mixed.$(OBJEXT) \
	src/gui/elems/giada-ge_waveform.$(OBJEXT) \
	src/gui/elems/giada-ge_browser.$(OBJEXT) \
	src/gui/elems/giada-ge_actionWidget.$(OBJEXT) \
	src/gui/elems/giada-ge_envelopeChannel.$(OBJEXT) \
	src/gui/elems/giada-ge_pianoRoll.$(OBJEXT) \
	src/gui/elems/giada-ge_channel.$(OBJEXT) \
	src/gui/elems/giada-ge_muteChannel.$(OBJEXT) \
	src/gui/elems/giada-ge_actionChannel.$(OBJEXT) \
	src/gui/elems/giada-ge_window.$(OBJEXT) \
	src/gui/elems/giada-ge_status.$(OBJEXT) \
	src/gui/elems/giada-ge_keyboard.$(OBJEXT) \
	src/gui/elems/giada-ge_waveTools.$(OBJEXT) \
	src/gui/elems/giada-ge_modeBox.$(OBJEXT) \
	src/gui/elems/giada-ge_controller.$(OBJEXT) \
	src/gui/elems/giada-ge_channelButton.$(OBJEXT) \
	src/gui/elems/giada-ge_pluginBrowser.$(OBJEXT) \
	src/utils/giada-log.$(OBJEXT) \
	src/utils/giada-gui_utils.$(OBJEXT) \
	src/utils/giada-utils.$(OBJEXT) $(am__objects_1) \
	$(am__objects_2) $(am__objects_3)
giada_OBJECTS = $(am_giada_OBJECTS)
@LINUX_TRUE@giada_DEPENDENCIES = src/deps/rtaudio-mod/librtaudio.a
giada_LINK = $(OBJCXXLD) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) \
	$(giada_LDFLAGS) $(LDFLAGS) -o $@
am_giada_tests_OBJECTS = tests/giada_tests-main.$(OBJEXT) \
	tests/giada_tests-conf.$(OBJEXT) \
	tests/giada_tests-wave.$(OBJEXT) \
	tests/giada_tests-patch.$(OBJEXT) \
	tests/giada_tests-midiMapConf.$(OBJEXT) \
	tests/giada_tests-pluginHost.$(OBJEXT) \
	tests/giada_tests-utils.$(OBJEXT) \
	src/core/giada_tests-conf.$(OBJEXT) \
	src/core/giada_tests-wave.$(OBJEXT) \
	src/core/giada_tests-midiMapConf.$(OBJEXT) \
	src/core/giada_tests-patch.$(OBJEXT) \
	src/core/giada_tests-plugin.$(OBJEXT) \
	src/core/giada_tests-dataStorageIni.$(OBJEXT) \
	src/core/giada_tests-dataStorageJson.$(OBJEXT) \
	src/utils/giada_tests-utils.$(OBJEXT) \
	src/utils/giada_tests-log.$(OBJEXT) \
	src/deps/juce/juce_audio_basics/giada_tests-juce_audio_basics.$(OBJEXT) \
	src/deps/juce/juce_audio_processors/giada_tests-juce_audio_processors.$(OBJEXT) \
	src/deps/juce/juce_core/giada_tests-juce_core.$(OBJEXT) \
	src/deps/juce/juce_data_structures/giada_tests-juce_data_structures.$(OBJEXT) \
	src/deps/juce/juce_events/giada_tests-juce_events.$(OBJEXT) \
	src/deps/juce/juce_graphics/giada_tests-juce_graphics.$(OBJEXT) \
	src/deps/juce/juce_gui_basics/giada_tests-juce_gui_basics.$(OBJEXT) \
	src/deps/juce/juce_gui_extra/giada_tests-juce_gui_extra.$(OBJEXT)
giada_tests_OBJECTS = $(am_giada_tests_OBJECTS)
giada_tests_DEPENDENCIES =
giada_tests_LINK = $(CXXLD) $(giada_tests_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
OBJCXXCOMPILE = $(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS)
AM_V_OBJCXX = $(am__v_OBJCXX_@AM_V@)
am__v_OBJCXX_ = $(am__v_OBJCXX_@AM_DEFAULT_V@)
am__v_OBJCXX_0 = @echo "  OBJCXX  " $@;
am__v_OBJCXX_1 = 
OBJCXXLD = $(OBJCXX)
OBJCXXLINK = $(OBJCXXLD) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_OBJCXXLD = $(am__v_OBJCXXLD_@AM_V@)
am__v_OBJCXXLD_ = $(am__v_OBJCXXLD_@AM_DEFAULT_V@)
am__v_OBJCXXLD_0 = @echo "  OBJCXXLD" $@;
am__v_OBJCXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(giada_SOURCES) $(giada_tests_SOURCES)
DIST_SOURCES = $(am__giada_SOURCES_DIST) $(giada_tests_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
AM_RECURSIVE_TARGETS = cscope check recheck
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJCXX = @OBJCXX@
OBJCXXDEPMODE = @OBJCXXDEPMODE@
OBJCXXFLAGS = @OBJCXXFLAGS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_OBJCXX = @ac_ct_OBJCXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AUTOMAKE_OPTIONS = foreign
giada_SOURCES = src/main.cpp src/core/const.h src/core/channel.h \
	src/core/channel.cpp src/core/sampleChannel.h \
	src/core/sampleChannel.cpp src/core/midiChannel.h \
	src/core/midiChannel.cpp src/core/midiMapConf.h \
	src/core/midiMapConf.cpp src/core/conf.h src/core/conf.cpp \
	src/core/kernelAudio.h src/core/kernelAudio.cpp \
	src/core/pluginHost.h src/core/pluginHost.cpp \
	src/core/mixerHandler.h src/core/mixerHandler.cpp \
	src/core/init.h src/core/init.cpp src/core/plugin.h \
	src/core/plugin.cpp src/core/wave.h src/core/wave.cpp \
	src/core/waveFx.h src/core/waveFx.cpp src/core/kernelMidi.h \
	src/core/kernelMidi.cpp src/core/graphics.h \
	src/core/graphics.cpp src/core/patch_DEPR_.h \
	src/core/patch_DEPR_.cpp src/core/patch.h src/core/patch.cpp \
	src/core/recorder.h src/core/recorder.cpp src/core/mixer.h \
	src/core/mixer.cpp src/core/dataStorageIni.h \
	src/core/dataStorageIni.cpp src/core/dataStorageJson.h \
	src/core/dataStorageJson.cpp src/glue/glue.h src/glue/glue.cpp \
	src/glue/storage.h src/glue/storage.cpp src/glue/channel.h \
	src/glue/channel.cpp src/gui/dialogs/gd_keyGrabber.h \
	src/gui/dialogs/gd_keyGrabber.cpp src/gui/dialogs/gd_about.h \
	src/gui/dialogs/gd_about.cpp src/gui/dialogs/gd_mainWindow.h \
	src/gui/dialogs/gd_mainWindow.cpp \
	src/gui/dialogs/gd_beatsInput.h \
	src/gui/dialogs/gd_beatsInput.cpp \
	src/gui/dialogs/gd_warnings.h src/gui/dialogs/gd_warnings.cpp \
	src/gui/dialogs/gd_bpmInput.h src/gui/dialogs/gd_bpmInput.cpp \
	src/gui/dialogs/gd_browser.h src/gui/dialogs/gd_browser.cpp \
	src/gui/dialogs/gd_config.h src/gui/dialogs/gd_config.cpp \
	src/gui/dialogs/gd_devInfo.h src/gui/dialogs/gd_devInfo.cpp \
	src/gui/dialogs/gd_pluginList.h \
	src/gui/dialogs/gd_pluginList.cpp \
	src/gui/dialogs/gd_pluginWindow.h \
	src/gui/dialogs/gd_pluginWindow.cpp \
	src/gui/dialogs/gd_editor.h src/gui/dialogs/gd_editor.cpp \
	src/gui/dialogs/gd_pluginWindowGUI.h \
	src/gui/dialogs/gd_pluginWindowGUI.cpp \
	src/gui/dialogs/gd_midiOutput.h \
	src/gui/dialogs/gd_midiOutput.cpp \
	src/gui/dialogs/gd_midiInput.h \
	src/gui/dialogs/gd_midiInput.cpp \
	src/gui/dialogs/gd_actionEditor.h \
	src/gui/dialogs/gd_actionEditor.cpp \
	src/gui/dialogs/gd_pluginChooser.h \
	src/gui/dialogs/gd_pluginChooser.cpp src/gui/elems/ge_column.h \
	src/gui/elems/ge_column.cpp src/gui/elems/ge_sampleChannel.h \
	src/gui/elems/ge_sampleChannel.cpp \
	src/gui/elems/ge_midiChannel.h \
	src/gui/elems/ge_midiChannel.cpp \
	src/gui/elems/ge_midiIoTools.h \
	src/gui/elems/ge_midiIoTools.cpp src/gui/elems/ge_mixed.h \
	src/gui/elems/ge_mixed.cpp src/gui/elems/ge_waveform.h \
	src/gui/elems/ge_waveform.cpp src/gui/elems/ge_browser.h \
	src/gui/elems/ge_browser.cpp src/gui/elems/ge_actionWidget.h \
	src/gui/elems/ge_actionWidget.cpp \
	src/gui/elems/ge_envelopeChannel.h \
	src/gui/elems/ge_envelopeChannel.cpp \
	src/gui/elems/ge_pianoRoll.h src/gui/elems/ge_pianoRoll.cpp \
	src/gui/elems/ge_channel.h src/gui/elems/ge_channel.cpp \
	src/gui/elems/ge_muteChannel.h \
	src/gui/elems/ge_muteChannel.cpp \
	src/gui/elems/ge_actionChannel.h \
	src/gui/elems/ge_actionChannel.cpp src/gui/elems/ge_window.h \
	src/gui/elems/ge_window.cpp src/gui/elems/ge_status.h \
	src/gui/elems/ge_status.cpp src/gui/elems/ge_keyboard.h \
	src/gui/elems/ge_keyboard.cpp src/gui/elems/ge_waveTools.h \
	src/gui/elems/ge_waveTools.cpp src/gui/elems/ge_modeBox.h \
	src/gui/elems/ge_modeBox.cpp src/gui/elems/ge_controller.h \
	src/gui/elems/ge_controller.cpp \
	src/gui/elems/ge_channelButton.h \
	src/gui/elems/ge_channelButton.cpp \
	src/gui/elems/ge_pluginBrowser.h \
	src/gui/elems/ge_pluginBrowser.cpp src/utils/log.h \
	src/utils/log.cpp src/utils/gui_utils.h \
	src/utils/gui_utils.cpp src/utils/gvector.h src/utils/utils.h \
	src/utils/utils.cpp $(am__append_1) $(am__append_2) \
	$(am__append_3)

# Check for environment: these vars are defined via AM_CONDITIONAL
# inside configure.ac
# Note: CPPFLAGS ---> C preprocessor, while CXXFLAGS ---> C++ compiler.
giada_CXXFLAGS = -std=c++11 -Wall -Werror $(am__append_4)

# TODO - these are flags for Linux only!
# Also, JUCE makes GCC complain if compiled with optimization set to -O2.
# Call configure script as follows:
#
# ./configure CXXFLAGS='-g -O1 -pedantic' --target=linux --enable-vst
#
@WITH_VST_TRUE@giada_CPPFLAGS = -I./src/deps/juce -I./src/deps/vst -I/usr/include \
@WITH_VST_TRUE@  -I/usr/include/freetype2

@LINUX_TRUE@giada_LDADD = -lsndfile -lfltk -lXext -lX11 -lXft -lXpm -lm \
@LINUX_TRUE@	src/deps/rtaudio-mod/librtaudio.a -ljack -lasound -lpthread -ldl \
@LINUX_TRUE@	-lsamplerate -lrtmidi -ljansson -lfreetype

@OSX_TRUE@giada_LDADD = -lsndfile -lm -lpthread -lfltk -lrtmidi -lrtaudio \
@OSX_TRUE@	-lsamplerate -ljansson

@WINDOWS_TRUE@giada_LDADD = -lrtaudio -ldsound -lwsock32 -lm -lfltk -lwininet -lgdi32 \
@WINDOWS_TRUE@  -lshell32 -lvfw32 -lrpcrt4 -luuid -lcomctl32 -lole32 -lws2_32 -lsndfile \
@WINDOWS_TRUE@  -lsamplerate -lrtmidi -lwinmm -lsetupapi -lksuser -lpthreadGC2 -ljansson \
@WINDOWS_TRUE@  -limm32 -lglu32 -lshell32 -lversion -lopengl32 -loleaut32 -lshlwapi

@OSX_TRUE@giada_LDFLAGS = -framework CoreAudio -framework Cocoa -framework Carbon \
@OSX_TRUE@  -framework CoreMIDI -framework CoreFoundation -framework Accelerate \
@OSX_TRUE@  -framework WebKit -framework QuartzCore -framework IOKit

@WINDOWS_TRUE@giada_LDFLAGS = -mwindows -static
giada_tests_SOURCES = \
tests/main.cpp               \
tests/conf.cpp               \
tests/wave.cpp               \
tests/patch.cpp              \
tests/midiMapConf.cpp        \
tests/pluginHost.cpp         \
tests/utils.cpp              \
src/core/conf.cpp            \
src/core/wave.cpp            \
src/core/midiMapConf.cpp     \
src/core/patch.cpp           \
src/core/plugin.cpp          \
src/core/dataStorageIni.cpp  \
src/core/dataStorageJson.cpp \
src/utils/utils.cpp          \
src/utils/log.cpp            \
src/deps/juce/juce_audio_basics/juce_audio_basics.cpp         \
src/deps/juce/juce_audio_processors/juce_audio_processors.cpp \
src/deps/juce/juce_core/juce_core.cpp                         \
src/deps/juce/juce_data_structures/juce_data_structures.cpp   \
src/deps/juce/juce_events/juce_events.cpp                     \
src/deps/juce/juce_graphics/juce_graphics.cpp                 \
src/deps/juce/juce_gui_basics/juce_gui_basics.cpp             \
src/deps/juce/juce_gui_extra/juce_gui_extra.cpp

giada_tests_LDADD = -ljansson -lsndfile -lsamplerate -lfltk -lXext -lX11 -lXft \
  -lXpm -lm -ljack -lasound -lpthread -ldl -lpulse-simple -lpulse -lrtmidi \
  -lfreetype

giada_tests_CXXFLAGS = -std=c++11
giada_tests_CPPFLAGS = -I./src/deps/juce -I./src/deps/vst -I/usr/include \
                       -I/usr/include/freetype2

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .log .mm .o .obj .test .test$(EXEEXT) .trs
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)
src/$(am__dirstamp):
	@$(MKDIR_P) src
	@: > src/$(am__dirstamp)
src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/$(DEPDIR)
	@: > src/$(DEPDIR)/$(am__dirstamp)
src/giada-main.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/core/$(am__dirstamp):
	@$(MKDIR_P) src/core
	@: > src/core/$(am__dirstamp)
src/core/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/core/$(DEPDIR)
	@: > src/core/$(DEPDIR)/$(am__dirstamp)
src/core/giada-channel.$(OBJEXT): src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/giada-sampleChannel.$(OBJEXT): src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/giada-midiChannel.$(OBJEXT): src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/giada-midiMapConf.$(OBJEXT): src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/giada-conf.$(OBJEXT): src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/giada-kernelAudio.$(OBJEXT): src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/giada-pluginHost.$(OBJEXT): src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/giada-mixerHandler.$(OBJEXT): src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/giada-init.$(OBJEXT): src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/giada-plugin.$(OBJEXT): src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/giada-wave.$(OBJEXT): src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/giada-waveFx.$(OBJEXT): src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/giada-kernelMidi.$(OBJEXT): src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/giada-graphics.$(OBJEXT): src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/giada-patch_DEPR_.$(OBJEXT): src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/giada-patch.$(OBJEXT): src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/giada-recorder.$(OBJEXT): src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/giada-mixer.$(OBJEXT): src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/giada-dataStorageIni.$(OBJEXT): src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/giada-dataStorageJson.$(OBJEXT): src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/glue/$(am__dirstamp):
	@$(MKDIR_P) src/glue
	@: > src/glue/$(am__dirstamp)
src/glue/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/glue/$(DEPDIR)
	@: > src/glue/$(DEPDIR)/$(am__dirstamp)
src/glue/giada-glue.$(OBJEXT): src/glue/$(am__dirstamp) \
	src/glue/$(DEPDIR)/$(am__dirstamp)
src/glue/giada-storage.$(OBJEXT): src/glue/$(am__dirstamp) \
	src/glue/$(DEPDIR)/$(am__dirstamp)
src/glue/giada-channel.$(OBJEXT): src/glue/$(am__dirstamp) \
	src/glue/$(DEPDIR)/$(am__dirstamp)
src/gui/dialogs/$(am__dirstamp):
	@$(MKDIR_P) src/gui/dialogs
	@: > src/gui/dialogs/$(am__dirstamp)
src/gui/dialogs/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/gui/dialogs/$(DEPDIR)
	@: > src/gui/dialogs/$(DEPDIR)/$(am__dirstamp)
src/gui/dialogs/giada-gd_keyGrabber.$(OBJEXT):  \
	src/gui/dialogs/$(am__dirstamp) \
	src/gui/dialogs/$(DEPDIR)/$(am__dirstamp)
src/gui/dialogs/giada-gd_about.$(OBJEXT):  \
	src/gui/dialogs/$(am__dirstamp) \
	src/gui/dialogs/$(DEPDIR)/$(am__dirstamp)
src/gui/dialogs/giada-gd_mainWindow.$(OBJEXT):  \
	src/gui/dialogs/$(am__dirstamp) \
	src/gui/dialogs/$(DEPDIR)/$(am__dirstamp)
src/gui/dialogs/giada-gd_beatsInput.$(OBJEXT):  \
	src/gui/dialogs/$(am__dirstamp) \
	src/gui/dialogs/$(DEPDIR)/$(am__dirstamp)
src/gui/dialogs/giada-gd_warnings.$(OBJEXT):  \
	src/gui/dialogs/$(am__dirstamp) \
	src/gui/dialogs/$(DEPDIR)/$(am__dirstamp)
src/gui/dialogs/giada-gd_bpmInput.$(OBJEXT):  \
	src/gui/dialogs/$(am__dirstamp) \
	src/gui/dialogs/$(DEPDIR)/$(am__dirstamp)
src/gui/dialogs/giada-gd_browser.$(OBJEXT):  \
	src/gui/dialogs/$(am__dirstamp) \
	src/gui/dialogs/$(DEPDIR)/$(am__dirstamp)
src/gui/dialogs/giada-gd_config.$(OBJEXT):  \
	src/gui/dialogs/$(am__dirstamp) \
	src/gui/dialogs/$(DEPDIR)/$(am__dirstamp)
src/gui/dialogs/giada-gd_devInfo.$(OBJEXT):  \
	src/gui/dialogs/$(am__dirstamp) \
	src/gui/dialogs/$(DEPDIR)/$(am__dirstamp)
src/gui/dialogs/giada-gd_pluginList.$(OBJEXT):  \
	src/gui/dialogs/$(am__dirstamp) \
	src/gui/dialogs/$(DEPDIR)/$(am__dirstamp)
src/gui/dialogs/giada-gd_pluginWindow.$(OBJEXT):  \
	src/gui/dialogs/$(am__dirstamp) \
	src/gui/dialogs/$(DEPDIR)/$(am__dirstamp)
src/gui/dialogs/giada-gd_editor.$(OBJEXT):  \
	src/gui/dialogs/$(am__dirstamp) \
	src/gui/dialogs/$(DEPDIR)/$(am__dirstamp)
src/gui/dialogs/giada-gd_pluginWindowGUI.$(OBJEXT):  \
	src/gui/dialogs/$(am__dirstamp) \
	src/gui/dialogs/$(DEPDIR)/$(am__dirstamp)
src/gui/dialogs/giada-gd_midiOutput.$(OBJEXT):  \
	src/gui/dialogs/$(am__dirstamp) \
	src/gui/dialogs/$(DEPDIR)/$(am__dirstamp)
src/gui/dialogs/giada-gd_midiInput.$(OBJEXT):  \
	src/gui/dialogs/$(am__dirstamp) \
	src/gui/dialogs/$(DEPDIR)/$(am__dirstamp)
src/gui/dialogs/giada-gd_actionEditor.$(OBJEXT):  \
	src/gui/dialogs/$(am__dirstamp) \
	src/gui/dialogs/$(DEPDIR)/$(am__dirstamp)
src/gui/dialogs/giada-gd_pluginChooser.$(OBJEXT):  \
	src/gui/dialogs/$(am__dirstamp) \
	src/gui/dialogs/$(DEPDIR)/$(am__dirstamp)
src/gui/elems/$(am__dirstamp):
	@$(MKDIR_P) src/gui/elems
	@: > src/gui/elems/$(am__dirstamp)
src/gui/elems/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/gui/elems/$(DEPDIR)
	@: > src/gui/elems/$(DEPDIR)/$(am__dirstamp)
src/gui/elems/giada-ge_column.$(OBJEXT):  \
	src/gui/elems/$(am__dirstamp) \
	src/gui/elems/$(DEPDIR)/$(am__dirstamp)
src/gui/elems/giada-ge_sampleChannel.$(OBJEXT):  \
	src/gui/elems/$(am__dirstamp) \
	src/gui/elems/$(DEPDIR)/$(am__dirstamp)
src/gui/elems/giada-ge_midiChannel.$(OBJEXT):  \
	src/gui/elems/$(am__dirstamp) \
	src/gui/elems/$(DEPDIR)/$(am__dirstamp)
src/gui/elems/giada-ge_midiIoTools.$(OBJEXT):  \
	src/gui/elems/$(am__dirstamp) \
	src/gui/elems/$(DEPDIR)/$(am__dirstamp)
src/gui/elems/giada-ge_mixed.$(OBJEXT): src/gui/elems/$(am__dirstamp) \
	src/gui/elems/$(DEPDIR)/$(am__dirstamp)
src/gui/elems/giada-ge_waveform.$(OBJEXT):  \
	src/gui/elems/$(am__dirstamp) \
	src/gui/elems/$(DEPDIR)/$(am__dirstamp)
src/gui/elems/giada-ge_browser.$(OBJEXT):  \
	src/gui/elems/$(am__dirstamp) \
	src/gui/elems/$(DEPDIR)/$(am__dirstamp)
src/gui/elems/giada-ge_actionWidget.$(OBJEXT):  \
	src/gui/elems/$(am__dirstamp) \
	src/gui/elems/$(DEPDIR)/$(am__dirstamp)
src/gui/elems/giada-ge_envelopeChannel.$(OBJEXT):  \
	src/gui/elems/$(am__dirstamp) \
	src/gui/elems/$(DEPDIR)/$(am__dirstamp)
src/gui/elems/giada-ge_pianoRoll.$(OBJEXT):  \
	src/gui/elems/$(am__dirstamp) \
	src/gui/elems/$(DEPDIR)/$(am__dirstamp)
src/gui/elems/giada-ge_channel.$(OBJEXT):  \
	src/gui/elems/$(am__dirstamp) \
	src/gui/elems/$(DEPDIR)/$(am__dirstamp)
src/gui/elems/giada-ge_muteChannel.$(OBJEXT):  \
	src/gui/elems/$(am__dirstamp) \
	src/gui/elems/$(DEPDIR)/$(am__dirstamp)
src/gui/elems/giada-ge_actionChannel.$(OBJEXT):  \
	src/gui/elems/$(am__dirstamp) \
	src/gui/elems/$(DEPDIR)/$(am__dirstamp)
src/gui/elems/giada-ge_window.$(OBJEXT):  \
	src/gui/elems/$(am__dirstamp) \
	src/gui/elems/$(DEPDIR)/$(am__dirstamp)
src/gui/elems/giada-ge_status.$(OBJEXT):  \
	src/gui/elems/$(am__dirstamp) \
	src/gui/elems/$(DEPDIR)/$(am__dirstamp)
src/gui/elems/giada-ge_keyboard.$(OBJEXT):  \
	src/gui/elems/$(am__dirstamp) \
	src/gui/elems/$(DEPDIR)/$(am__dirstamp)
src/gui/elems/giada-ge_waveTools.$(OBJEXT):  \
	src/gui/elems/$(am__dirstamp) \
	src/gui/elems/$(DEPDIR)/$(am__dirstamp)
src/gui/elems/giada-ge_modeBox.$(OBJEXT):  \
	src/gui/elems/$(am__dirstamp) \
	src/gui/elems/$(DEPDIR)/$(am__dirstamp)
src/gui/elems/giada-ge_controller.$(OBJEXT):  \
	src/gui/elems/$(am__dirstamp) \
	src/gui/elems/$(DEPDIR)/$(am__dirstamp)
src/gui/elems/giada-ge_channelButton.$(OBJEXT):  \
	src/gui/elems/$(am__dirstamp) \
	src/gui/elems/$(DEPDIR)/$(am__dirstamp)
src/gui/elems/giada-ge_pluginBrowser.$(OBJEXT):  \
	src/gui/elems/$(am__dirstamp) \
	src/gui/elems/$(DEPDIR)/$(am__dirstamp)
src/utils/$(am__dirstamp):
	@$(MKDIR_P) src/utils
	@: > src/utils/$(am__dirstamp)
src/utils/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/utils/$(DEPDIR)
	@: > src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/giada-log.$(OBJEXT): src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/giada-gui_utils.$(OBJEXT): src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/giada-utils.$(OBJEXT): src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/deps/juce/juce_audio_basics/$(am__dirstamp):
	@$(MKDIR_P) src/deps/juce/juce_audio_basics
	@: > src/deps/juce/juce_audio_basics/$(am__dirstamp)
src/deps/juce/juce_audio_basics/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/deps/juce/juce_audio_basics/$(DEPDIR)
	@: > src/deps/juce/juce_audio_basics/$(DEPDIR)/$(am__dirstamp)
src/deps/juce/juce_audio_basics/giada-juce_audio_basics.$(OBJEXT):  \
	src/deps/juce/juce_audio_basics/$(am__dirstamp) \
	src/deps/juce/juce_audio_basics/$(DEPDIR)/$(am__dirstamp)
src/deps/juce/juce_audio_processors/$(am__dirstamp):
	@$(MKDIR_P) src/deps/juce/juce_audio_processors
	@: > src/deps/juce/juce_audio_processors/$(am__dirstamp)
src/deps/juce/juce_audio_processors/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/deps/juce/juce_audio_processors/$(DEPDIR)
	@: > src/deps/juce/juce_audio_processors/$(DEPDIR)/$(am__dirstamp)
src/deps/juce/juce_audio_processors/giada-juce_audio_processors.$(OBJEXT):  \
	src/deps/juce/juce_audio_processors/$(am__dirstamp) \
	src/deps/juce/juce_audio_processors/$(DEPDIR)/$(am__dirstamp)
src/deps/juce/juce_core/$(am__dirstamp):
	@$(MKDIR_P) src/deps/juce/juce_core
	@: > src/deps/juce/juce_core/$(am__dirstamp)
src/deps/juce/juce_core/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/deps/juce/juce_core/$(DEPDIR)
	@: > src/deps/juce/juce_core/$(DEPDIR)/$(am__dirstamp)
src/deps/juce/juce_core/giada-juce_core.$(OBJEXT):  \
	src/deps/juce/juce_core/$(am__dirstamp) \
	src/deps/juce/juce_core/$(DEPDIR)/$(am__dirstamp)
src/deps/juce/juce_data_structures/$(am__dirstamp):
	@$(MKDIR_P) src/deps/juce/juce_data_structures
	@: > src/deps/juce/juce_data_structures/$(am__dirstamp)
src/deps/juce/juce_data_structures/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/deps/juce/juce_data_structures/$(DEPDIR)
	@: > src/deps/juce/juce_data_structures/$(DEPDIR)/$(am__dirstamp)
src/deps/juce/juce_data_structures/giada-juce_data_structures.$(OBJEXT):  \
	src/deps/juce/juce_data_structures/$(am__dirstamp) \
	src/deps/juce/juce_data_structures/$(DEPDIR)/$(am__dirstamp)
src/deps/juce/juce_events/$(am__dirstamp):
	@$(MKDIR_P) src/deps/juce/juce_events
	@: > src/deps/juce/juce_events/$(am__dirstamp)
src/deps/juce/juce_events/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/deps/juce/juce_events/$(DEPDIR)
	@: > src/deps/juce/juce_events/$(DEPDIR)/$(am__dirstamp)
src/deps/juce/juce_events/giada-juce_events.$(OBJEXT):  \
	src/deps/juce/juce_events/$(am__dirstamp) \
	src/deps/juce/juce_events/$(DEPDIR)/$(am__dirstamp)
src/deps/juce/juce_graphics/$(am__dirstamp):
	@$(MKDIR_P) src/deps/juce/juce_graphics
	@: > src/deps/juce/juce_graphics/$(am__dirstamp)
src/deps/juce/juce_graphics/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/deps/juce/juce_graphics/$(DEPDIR)
	@: > src/deps/juce/juce_graphics/$(DEPDIR)/$(am__dirstamp)
src/deps/juce/juce_graphics/giada-juce_graphics.$(OBJEXT):  \
	src/deps/juce/juce_graphics/$(am__dirstamp) \
	src/deps/juce/juce_graphics/$(DEPDIR)/$(am__dirstamp)
src/deps/juce/juce_gui_basics/$(am__dirstamp):
	@$(MKDIR_P) src/deps/juce/juce_gui_basics
	@: > src/deps/juce/juce_gui_basics/$(am__dirstamp)
src/deps/juce/juce_gui_basics/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/deps/juce/juce_gui_basics/$(DEPDIR)
	@: > src/deps/juce/juce_gui_basics/$(DEPDIR)/$(am__dirstamp)
src/deps/juce/juce_gui_basics/giada-juce_gui_basics.$(OBJEXT):  \
	src/deps/juce/juce_gui_basics/$(am__dirstamp) \
	src/deps/juce/juce_gui_basics/$(DEPDIR)/$(am__dirstamp)
src/deps/juce/juce_gui_extra/$(am__dirstamp):
	@$(MKDIR_P) src/deps/juce/juce_gui_extra
	@: > src/deps/juce/juce_gui_extra/$(am__dirstamp)
src/deps/juce/juce_gui_extra/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/deps/juce/juce_gui_extra/$(DEPDIR)
	@: > src/deps/juce/juce_gui_extra/$(DEPDIR)/$(am__dirstamp)
src/deps/juce/juce_gui_extra/giada-juce_gui_extra.$(OBJEXT):  \
	src/deps/juce/juce_gui_extra/$(am__dirstamp) \
	src/deps/juce/juce_gui_extra/$(DEPDIR)/$(am__dirstamp)
src/utils/giada-cocoa.$(OBJEXT): src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)

giada$(EXEEXT): $(giada_OBJECTS) $(giada_DEPENDENCIES) $(EXTRA_giada_DEPENDENCIES) 
	@rm -f giada$(EXEEXT)
	$(AM_V_OBJCXXLD)$(giada_LINK) $(giada_OBJECTS) $(giada_LDADD) $(LIBS)
tests/$(am__dirstamp):
	@$(MKDIR_P) tests
	@: > tests/$(am__dirstamp)
tests/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) tests/$(DEPDIR)
	@: > tests/$(DEPDIR)/$(am__dirstamp)
tests/giada_tests-main.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
tests/giada_tests-conf.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
tests/giada_tests-wave.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
tests/giada_tests-patch.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
tests/giada_tests-midiMapConf.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
tests/giada_tests-pluginHost.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
tests/giada_tests-utils.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
src/core/giada_tests-conf.$(OBJEXT): src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/giada_tests-wave.$(OBJEXT): src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/giada_tests-midiMapConf.$(OBJEXT): src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/giada_tests-patch.$(OBJEXT): src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/giada_tests-plugin.$(OBJEXT): src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/giada_tests-dataStorageIni.$(OBJEXT):  \
	src/core/$(am__dirstamp) src/core/$(DEPDIR)/$(am__dirstamp)
src/core/giada_tests-dataStorageJson.$(OBJEXT):  \
	src/core/$(am__dirstamp) src/core/$(DEPDIR)/$(am__dirstamp)
src/utils/giada_tests-utils.$(OBJEXT): src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/giada_tests-log.$(OBJEXT): src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/deps/juce/juce_audio_basics/giada_tests-juce_audio_basics.$(OBJEXT):  \
	src/deps/juce/juce_audio_basics/$(am__dirstamp) \
	src/deps/juce/juce_audio_basics/$(DEPDIR)/$(am__dirstamp)
src/deps/juce/juce_audio_processors/giada_tests-juce_audio_processors.$(OBJEXT):  \
	src/deps/juce/juce_audio_processors/$(am__dirstamp) \
	src/deps/juce/juce_audio_processors/$(DEPDIR)/$(am__dirstamp)
src/deps/juce/juce_core/giada_tests-juce_core.$(OBJEXT):  \
	src/deps/juce/juce_core/$(am__dirstamp) \
	src/deps/juce/juce_core/$(DEPDIR)/$(am__dirstamp)
src/deps/juce/juce_data_structures/giada_tests-juce_data_structures.$(OBJEXT):  \
	src/deps/juce/juce_data_structures/$(am__dirstamp) \
	src/deps/juce/juce_data_structures/$(DEPDIR)/$(am__dirstamp)
src/deps/juce/juce_events/giada_tests-juce_events.$(OBJEXT):  \
	src/deps/juce/juce_events/$(am__dirstamp) \
	src/deps/juce/juce_events/$(DEPDIR)/$(am__dirstamp)
src/deps/juce/juce_graphics/giada_tests-juce_graphics.$(OBJEXT):  \
	src/deps/juce/juce_graphics/$(am__dirstamp) \
	src/deps/juce/juce_graphics/$(DEPDIR)/$(am__dirstamp)
src/deps/juce/juce_gui_basics/giada_tests-juce_gui_basics.$(OBJEXT):  \
	src/deps/juce/juce_gui_basics/$(am__dirstamp) \
	src/deps/juce/juce_gui_basics/$(DEPDIR)/$(am__dirstamp)
src/deps/juce/juce_gui_extra/giada_tests-juce_gui_extra.$(OBJEXT):  \
	src/deps/juce/juce_gui_extra/$(am__dirstamp) \
	src/deps/juce/juce_gui_extra/$(DEPDIR)/$(am__dirstamp)

giada_tests$(EXEEXT): $(giada_tests_OBJECTS) $(giada_tests_DEPENDENCIES) $(EXTRA_giada_tests_DEPENDENCIES) 
	@rm -f giada_tests$(EXEEXT)
	$(AM_V_CXXLD)$(giada_tests_LINK) $(giada_tests_OBJECTS) $(giada_tests_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f src/*.$(OBJEXT)
	-rm -f src/core/*.$(OBJEXT)
	-rm -f src/deps/juce/juce_audio_basics/*.$(OBJEXT)
	-rm -f src/deps/juce/juce_audio_processors/*.$(OBJEXT)
	-rm -f src/deps/juce/juce_core/*.$(OBJEXT)
	-rm -f src/deps/juce/juce_data_structures/*.$(OBJEXT)
	-rm -f src/deps/juce/juce_events/*.$(OBJEXT)
	-rm -f src/deps/juce/juce_graphics/*.$(OBJEXT)
	-rm -f src/deps/juce/juce_gui_basics/*.$(OBJEXT)
	-rm -f src/deps/juce/juce_gui_extra/*.$(OBJEXT)
	-rm -f src/glue/*.$(OBJEXT)
	-rm -f src/gui/dialogs/*.$(OBJEXT)
	-rm -f src/gui/elems/*.$(OBJEXT)
	-rm -f src/utils/*.$(OBJEXT)
	-rm -f tests/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/giada-main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/giada-channel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/giada-conf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/giada-dataStorageIni.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/giada-dataStorageJson.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/giada-graphics.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/giada-init.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/giada-kernelAudio.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/giada-kernelMidi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/giada-midiChannel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/giada-midiMapConf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/giada-mixer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/giada-mixerHandler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/giada-patch.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/giada-patch_DEPR_.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/giada-plugin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/giada-pluginHost.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/giada-recorder.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/giada-sampleChannel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/giada-wave.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/giada-waveFx.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/giada_tests-conf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/giada_tests-dataStorageIni.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/giada_tests-dataStorageJson.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/giada_tests-midiMapConf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/giada_tests-patch.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/giada_tests-plugin.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/giada_tests-wave.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/deps/juce/juce_audio_basics/$(DEPDIR)/giada-juce_audio_basics.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/deps/juce/juce_audio_basics/$(DEPDIR)/giada_tests-juce_audio_basics.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/deps/juce/juce_audio_processors/$(DEPDIR)/giada-juce_audio_processors.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/deps/juce/juce_audio_processors/$(DEPDIR)/giada_tests-juce_audio_processors.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/deps/juce/juce_core/$(DEPDIR)/giada-juce_core.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/deps/juce/juce_core/$(DEPDIR)/giada_tests-juce_core.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/deps/juce/juce_data_structures/$(DEPDIR)/giada-juce_data_structures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/deps/juce/juce_data_structures/$(DEPDIR)/giada_tests-juce_data_structures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/deps/juce/juce_events/$(DEPDIR)/giada-juce_events.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/deps/juce/juce_events/$(DEPDIR)/giada_tests-juce_events.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/deps/juce/juce_graphics/$(DEPDIR)/giada-juce_graphics.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/deps/juce/juce_graphics/$(DEPDIR)/giada_tests-juce_graphics.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/deps/juce/juce_gui_basics/$(DEPDIR)/giada-juce_gui_basics.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/deps/juce/juce_gui_basics/$(DEPDIR)/giada_tests-juce_gui_basics.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/deps/juce/juce_gui_extra/$(DEPDIR)/giada-juce_gui_extra.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/deps/juce/juce_gui_extra/$(DEPDIR)/giada_tests-juce_gui_extra.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/glue/$(DEPDIR)/giada-channel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/glue/$(DEPDIR)/giada-glue.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/glue/$(DEPDIR)/giada-storage.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/gui/dialogs/$(DEPDIR)/giada-gd_about.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/gui/dialogs/$(DEPDIR)/giada-gd_actionEditor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/gui/dialogs/$(DEPDIR)/giada-gd_beatsInput.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/gui/dialogs/$(DEPDIR)/giada-gd_bpmInput.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/gui/dialogs/$(DEPDIR)/giada-gd_browser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/gui/dialogs/$(DEPDIR)/giada-gd_config.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/gui/dialogs/$(DEPDIR)/giada-gd_devInfo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/gui/dialogs/$(DEPDIR)/giada-gd_editor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/gui/dialogs/$(DEPDIR)/giada-gd_keyGrabber.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/gui/dialogs/$(DEPDIR)/giada-gd_mainWindow.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/gui/dialogs/$(DEPDIR)/giada-gd_midiInput.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/gui/dialogs/$(DEPDIR)/giada-gd_midiOutput.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/gui/dialogs/$(DEPDIR)/giada-gd_pluginChooser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/gui/dialogs/$(DEPDIR)/giada-gd_pluginList.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/gui/dialogs/$(DEPDIR)/giada-gd_pluginWindow.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/gui/dialogs/$(DEPDIR)/giada-gd_pluginWindowGUI.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/gui/dialogs/$(DEPDIR)/giada-gd_warnings.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/gui/elems/$(DEPDIR)/giada-ge_actionChannel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/gui/elems/$(DEPDIR)/giada-ge_actionWidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/gui/elems/$(DEPDIR)/giada-ge_browser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/gui/elems/$(DEPDIR)/giada-ge_channel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/gui/elems/$(DEPDIR)/giada-ge_channelButton.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/gui/elems/$(DEPDIR)/giada-ge_column.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/gui/elems/$(DEPDIR)/giada-ge_controller.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/gui/elems/$(DEPDIR)/giada-ge_envelopeChannel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/gui/elems/$(DEPDIR)/giada-ge_keyboard.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/gui/elems/$(DEPDIR)/giada-ge_midiChannel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/gui/elems/$(DEPDIR)/giada-ge_midiIoTools.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/gui/elems/$(DEPDIR)/giada-ge_mixed.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/gui/elems/$(DEPDIR)/giada-ge_modeBox.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/gui/elems/$(DEPDIR)/giada-ge_muteChannel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/gui/elems/$(DEPDIR)/giada-ge_pianoRoll.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/gui/elems/$(DEPDIR)/giada-ge_pluginBrowser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/gui/elems/$(DEPDIR)/giada-ge_sampleChannel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/gui/elems/$(DEPDIR)/giada-ge_status.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/gui/elems/$(DEPDIR)/giada-ge_waveTools.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/gui/elems/$(DEPDIR)/giada-ge_waveform.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/gui/elems/$(DEPDIR)/giada-ge_window.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/giada-cocoa.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/giada-gui_utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/giada-log.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/giada-utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/giada_tests-log.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/giada_tests-utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/giada_tests-conf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/giada_tests-main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/giada_tests-midiMapConf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/giada_tests-patch.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/giada_tests-pluginHost.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/giada_tests-utils.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/giada_tests-wave.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

src/giada-main.o: src/main.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/giada-main.o -MD -MP -MF src/$(DEPDIR)/giada-main.Tpo -c -o src/giada-main.o `test -f 'src/main.cpp' || echo '$(srcdir)/'`src/main.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/giada-main.Tpo src/$(DEPDIR)/giada-main.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/main.cpp' object='src/giada-main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/giada-main.o `test -f 'src/main.cpp' || echo '$(srcdir)/'`src/main.cpp

src/giada-main.obj: src/main.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/giada-main.obj -MD -MP -MF src/$(DEPDIR)/giada-main.Tpo -c -o src/giada-main.obj `if test -f 'src/main.cpp'; then $(CYGPATH_W) 'src/main.cpp'; else $(CYGPATH_W) '$(srcdir)/src/main.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/giada-main.Tpo src/$(DEPDIR)/giada-main.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/main.cpp' object='src/giada-main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/giada-main.obj `if test -f 'src/main.cpp'; then $(CYGPATH_W) 'src/main.cpp'; else $(CYGPATH_W) '$(srcdir)/src/main.cpp'; fi`

src/core/giada-channel.o: src/core/channel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada-channel.o -MD -MP -MF src/core/$(DEPDIR)/giada-channel.Tpo -c -o src/core/giada-channel.o `test -f 'src/core/channel.cpp' || echo '$(srcdir)/'`src/core/channel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada-channel.Tpo src/core/$(DEPDIR)/giada-channel.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/channel.cpp' object='src/core/giada-channel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada-channel.o `test -f 'src/core/channel.cpp' || echo '$(srcdir)/'`src/core/channel.cpp

src/core/giada-channel.obj: src/core/channel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada-channel.obj -MD -MP -MF src/core/$(DEPDIR)/giada-channel.Tpo -c -o src/core/giada-channel.obj `if test -f 'src/core/channel.cpp'; then $(CYGPATH_W) 'src/core/channel.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/channel.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada-channel.Tpo src/core/$(DEPDIR)/giada-channel.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/channel.cpp' object='src/core/giada-channel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada-channel.obj `if test -f 'src/core/channel.cpp'; then $(CYGPATH_W) 'src/core/channel.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/channel.cpp'; fi`

src/core/giada-sampleChannel.o: src/core/sampleChannel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada-sampleChannel.o -MD -MP -MF src/core/$(DEPDIR)/giada-sampleChannel.Tpo -c -o src/core/giada-sampleChannel.o `test -f 'src/core/sampleChannel.cpp' || echo '$(srcdir)/'`src/core/sampleChannel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada-sampleChannel.Tpo src/core/$(DEPDIR)/giada-sampleChannel.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/sampleChannel.cpp' object='src/core/giada-sampleChannel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada-sampleChannel.o `test -f 'src/core/sampleChannel.cpp' || echo '$(srcdir)/'`src/core/sampleChannel.cpp

src/core/giada-sampleChannel.obj: src/core/sampleChannel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada-sampleChannel.obj -MD -MP -MF src/core/$(DEPDIR)/giada-sampleChannel.Tpo -c -o src/core/giada-sampleChannel.obj `if test -f 'src/core/sampleChannel.cpp'; then $(CYGPATH_W) 'src/core/sampleChannel.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/sampleChannel.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada-sampleChannel.Tpo src/core/$(DEPDIR)/giada-sampleChannel.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/sampleChannel.cpp' object='src/core/giada-sampleChannel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada-sampleChannel.obj `if test -f 'src/core/sampleChannel.cpp'; then $(CYGPATH_W) 'src/core/sampleChannel.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/sampleChannel.cpp'; fi`

src/core/giada-midiChannel.o: src/core/midiChannel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada-midiChannel.o -MD -MP -MF src/core/$(DEPDIR)/giada-midiChannel.Tpo -c -o src/core/giada-midiChannel.o `test -f 'src/core/midiChannel.cpp' || echo '$(srcdir)/'`src/core/midiChannel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada-midiChannel.Tpo src/core/$(DEPDIR)/giada-midiChannel.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/midiChannel.cpp' object='src/core/giada-midiChannel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada-midiChannel.o `test -f 'src/core/midiChannel.cpp' || echo '$(srcdir)/'`src/core/midiChannel.cpp

src/core/giada-midiChannel.obj: src/core/midiChannel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada-midiChannel.obj -MD -MP -MF src/core/$(DEPDIR)/giada-midiChannel.Tpo -c -o src/core/giada-midiChannel.obj `if test -f 'src/core/midiChannel.cpp'; then $(CYGPATH_W) 'src/core/midiChannel.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/midiChannel.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada-midiChannel.Tpo src/core/$(DEPDIR)/giada-midiChannel.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/midiChannel.cpp' object='src/core/giada-midiChannel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada-midiChannel.obj `if test -f 'src/core/midiChannel.cpp'; then $(CYGPATH_W) 'src/core/midiChannel.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/midiChannel.cpp'; fi`

src/core/giada-midiMapConf.o: src/core/midiMapConf.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada-midiMapConf.o -MD -MP -MF src/core/$(DEPDIR)/giada-midiMapConf.Tpo -c -o src/core/giada-midiMapConf.o `test -f 'src/core/midiMapConf.cpp' || echo '$(srcdir)/'`src/core/midiMapConf.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada-midiMapConf.Tpo src/core/$(DEPDIR)/giada-midiMapConf.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/midiMapConf.cpp' object='src/core/giada-midiMapConf.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada-midiMapConf.o `test -f 'src/core/midiMapConf.cpp' || echo '$(srcdir)/'`src/core/midiMapConf.cpp

src/core/giada-midiMapConf.obj: src/core/midiMapConf.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada-midiMapConf.obj -MD -MP -MF src/core/$(DEPDIR)/giada-midiMapConf.Tpo -c -o src/core/giada-midiMapConf.obj `if test -f 'src/core/midiMapConf.cpp'; then $(CYGPATH_W) 'src/core/midiMapConf.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/midiMapConf.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada-midiMapConf.Tpo src/core/$(DEPDIR)/giada-midiMapConf.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/midiMapConf.cpp' object='src/core/giada-midiMapConf.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada-midiMapConf.obj `if test -f 'src/core/midiMapConf.cpp'; then $(CYGPATH_W) 'src/core/midiMapConf.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/midiMapConf.cpp'; fi`

src/core/giada-conf.o: src/core/conf.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada-conf.o -MD -MP -MF src/core/$(DEPDIR)/giada-conf.Tpo -c -o src/core/giada-conf.o `test -f 'src/core/conf.cpp' || echo '$(srcdir)/'`src/core/conf.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada-conf.Tpo src/core/$(DEPDIR)/giada-conf.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/conf.cpp' object='src/core/giada-conf.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada-conf.o `test -f 'src/core/conf.cpp' || echo '$(srcdir)/'`src/core/conf.cpp

src/core/giada-conf.obj: src/core/conf.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada-conf.obj -MD -MP -MF src/core/$(DEPDIR)/giada-conf.Tpo -c -o src/core/giada-conf.obj `if test -f 'src/core/conf.cpp'; then $(CYGPATH_W) 'src/core/conf.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/conf.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada-conf.Tpo src/core/$(DEPDIR)/giada-conf.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/conf.cpp' object='src/core/giada-conf.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada-conf.obj `if test -f 'src/core/conf.cpp'; then $(CYGPATH_W) 'src/core/conf.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/conf.cpp'; fi`

src/core/giada-kernelAudio.o: src/core/kernelAudio.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada-kernelAudio.o -MD -MP -MF src/core/$(DEPDIR)/giada-kernelAudio.Tpo -c -o src/core/giada-kernelAudio.o `test -f 'src/core/kernelAudio.cpp' || echo '$(srcdir)/'`src/core/kernelAudio.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada-kernelAudio.Tpo src/core/$(DEPDIR)/giada-kernelAudio.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/kernelAudio.cpp' object='src/core/giada-kernelAudio.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada-kernelAudio.o `test -f 'src/core/kernelAudio.cpp' || echo '$(srcdir)/'`src/core/kernelAudio.cpp

src/core/giada-kernelAudio.obj: src/core/kernelAudio.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada-kernelAudio.obj -MD -MP -MF src/core/$(DEPDIR)/giada-kernelAudio.Tpo -c -o src/core/giada-kernelAudio.obj `if test -f 'src/core/kernelAudio.cpp'; then $(CYGPATH_W) 'src/core/kernelAudio.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/kernelAudio.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada-kernelAudio.Tpo src/core/$(DEPDIR)/giada-kernelAudio.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/kernelAudio.cpp' object='src/core/giada-kernelAudio.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada-kernelAudio.obj `if test -f 'src/core/kernelAudio.cpp'; then $(CYGPATH_W) 'src/core/kernelAudio.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/kernelAudio.cpp'; fi`

src/core/giada-pluginHost.o: src/core/pluginHost.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada-pluginHost.o -MD -MP -MF src/core/$(DEPDIR)/giada-pluginHost.Tpo -c -o src/core/giada-pluginHost.o `test -f 'src/core/pluginHost.cpp' || echo '$(srcdir)/'`src/core/pluginHost.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada-pluginHost.Tpo src/core/$(DEPDIR)/giada-pluginHost.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/pluginHost.cpp' object='src/core/giada-pluginHost.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada-pluginHost.o `test -f 'src/core/pluginHost.cpp' || echo '$(srcdir)/'`src/core/pluginHost.cpp

src/core/giada-pluginHost.obj: src/core/pluginHost.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada-pluginHost.obj -MD -MP -MF src/core/$(DEPDIR)/giada-pluginHost.Tpo -c -o src/core/giada-pluginHost.obj `if test -f 'src/core/pluginHost.cpp'; then $(CYGPATH_W) 'src/core/pluginHost.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/pluginHost.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada-pluginHost.Tpo src/core/$(DEPDIR)/giada-pluginHost.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/pluginHost.cpp' object='src/core/giada-pluginHost.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada-pluginHost.obj `if test -f 'src/core/pluginHost.cpp'; then $(CYGPATH_W) 'src/core/pluginHost.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/pluginHost.cpp'; fi`

src/core/giada-mixerHandler.o: src/core/mixerHandler.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada-mixerHandler.o -MD -MP -MF src/core/$(DEPDIR)/giada-mixerHandler.Tpo -c -o src/core/giada-mixerHandler.o `test -f 'src/core/mixerHandler.cpp' || echo '$(srcdir)/'`src/core/mixerHandler.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada-mixerHandler.Tpo src/core/$(DEPDIR)/giada-mixerHandler.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/mixerHandler.cpp' object='src/core/giada-mixerHandler.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada-mixerHandler.o `test -f 'src/core/mixerHandler.cpp' || echo '$(srcdir)/'`src/core/mixerHandler.cpp

src/core/giada-mixerHandler.obj: src/core/mixerHandler.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada-mixerHandler.obj -MD -MP -MF src/core/$(DEPDIR)/giada-mixerHandler.Tpo -c -o src/core/giada-mixerHandler.obj `if test -f 'src/core/mixerHandler.cpp'; then $(CYGPATH_W) 'src/core/mixerHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/mixerHandler.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada-mixerHandler.Tpo src/core/$(DEPDIR)/giada-mixerHandler.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/mixerHandler.cpp' object='src/core/giada-mixerHandler.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada-mixerHandler.obj `if test -f 'src/core/mixerHandler.cpp'; then $(CYGPATH_W) 'src/core/mixerHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/mixerHandler.cpp'; fi`

src/core/giada-init.o: src/core/init.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada-init.o -MD -MP -MF src/core/$(DEPDIR)/giada-init.Tpo -c -o src/core/giada-init.o `test -f 'src/core/init.cpp' || echo '$(srcdir)/'`src/core/init.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada-init.Tpo src/core/$(DEPDIR)/giada-init.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/init.cpp' object='src/core/giada-init.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada-init.o `test -f 'src/core/init.cpp' || echo '$(srcdir)/'`src/core/init.cpp

src/core/giada-init.obj: src/core/init.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada-init.obj -MD -MP -MF src/core/$(DEPDIR)/giada-init.Tpo -c -o src/core/giada-init.obj `if test -f 'src/core/init.cpp'; then $(CYGPATH_W) 'src/core/init.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/init.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada-init.Tpo src/core/$(DEPDIR)/giada-init.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/init.cpp' object='src/core/giada-init.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada-init.obj `if test -f 'src/core/init.cpp'; then $(CYGPATH_W) 'src/core/init.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/init.cpp'; fi`

src/core/giada-plugin.o: src/core/plugin.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada-plugin.o -MD -MP -MF src/core/$(DEPDIR)/giada-plugin.Tpo -c -o src/core/giada-plugin.o `test -f 'src/core/plugin.cpp' || echo '$(srcdir)/'`src/core/plugin.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada-plugin.Tpo src/core/$(DEPDIR)/giada-plugin.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/plugin.cpp' object='src/core/giada-plugin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada-plugin.o `test -f 'src/core/plugin.cpp' || echo '$(srcdir)/'`src/core/plugin.cpp

src/core/giada-plugin.obj: src/core/plugin.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada-plugin.obj -MD -MP -MF src/core/$(DEPDIR)/giada-plugin.Tpo -c -o src/core/giada-plugin.obj `if test -f 'src/core/plugin.cpp'; then $(CYGPATH_W) 'src/core/plugin.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/plugin.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada-plugin.Tpo src/core/$(DEPDIR)/giada-plugin.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/plugin.cpp' object='src/core/giada-plugin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada-plugin.obj `if test -f 'src/core/plugin.cpp'; then $(CYGPATH_W) 'src/core/plugin.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/plugin.cpp'; fi`

src/core/giada-wave.o: src/core/wave.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada-wave.o -MD -MP -MF src/core/$(DEPDIR)/giada-wave.Tpo -c -o src/core/giada-wave.o `test -f 'src/core/wave.cpp' || echo '$(srcdir)/'`src/core/wave.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada-wave.Tpo src/core/$(DEPDIR)/giada-wave.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/wave.cpp' object='src/core/giada-wave.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada-wave.o `test -f 'src/core/wave.cpp' || echo '$(srcdir)/'`src/core/wave.cpp

src/core/giada-wave.obj: src/core/wave.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada-wave.obj -MD -MP -MF src/core/$(DEPDIR)/giada-wave.Tpo -c -o src/core/giada-wave.obj `if test -f 'src/core/wave.cpp'; then $(CYGPATH_W) 'src/core/wave.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/wave.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada-wave.Tpo src/core/$(DEPDIR)/giada-wave.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/wave.cpp' object='src/core/giada-wave.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada-wave.obj `if test -f 'src/core/wave.cpp'; then $(CYGPATH_W) 'src/core/wave.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/wave.cpp'; fi`

src/core/giada-waveFx.o: src/core/waveFx.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada-waveFx.o -MD -MP -MF src/core/$(DEPDIR)/giada-waveFx.Tpo -c -o src/core/giada-waveFx.o `test -f 'src/core/waveFx.cpp' || echo '$(srcdir)/'`src/core/waveFx.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada-waveFx.Tpo src/core/$(DEPDIR)/giada-waveFx.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/waveFx.cpp' object='src/core/giada-waveFx.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada-waveFx.o `test -f 'src/core/waveFx.cpp' || echo '$(srcdir)/'`src/core/waveFx.cpp

src/core/giada-waveFx.obj: src/core/waveFx.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada-waveFx.obj -MD -MP -MF src/core/$(DEPDIR)/giada-waveFx.Tpo -c -o src/core/giada-waveFx.obj `if test -f 'src/core/waveFx.cpp'; then $(CYGPATH_W) 'src/core/waveFx.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/waveFx.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada-waveFx.Tpo src/core/$(DEPDIR)/giada-waveFx.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/waveFx.cpp' object='src/core/giada-waveFx.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada-waveFx.obj `if test -f 'src/core/waveFx.cpp'; then $(CYGPATH_W) 'src/core/waveFx.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/waveFx.cpp'; fi`

src/core/giada-kernelMidi.o: src/core/kernelMidi.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada-kernelMidi.o -MD -MP -MF src/core/$(DEPDIR)/giada-kernelMidi.Tpo -c -o src/core/giada-kernelMidi.o `test -f 'src/core/kernelMidi.cpp' || echo '$(srcdir)/'`src/core/kernelMidi.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada-kernelMidi.Tpo src/core/$(DEPDIR)/giada-kernelMidi.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/kernelMidi.cpp' object='src/core/giada-kernelMidi.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada-kernelMidi.o `test -f 'src/core/kernelMidi.cpp' || echo '$(srcdir)/'`src/core/kernelMidi.cpp

src/core/giada-kernelMidi.obj: src/core/kernelMidi.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada-kernelMidi.obj -MD -MP -MF src/core/$(DEPDIR)/giada-kernelMidi.Tpo -c -o src/core/giada-kernelMidi.obj `if test -f 'src/core/kernelMidi.cpp'; then $(CYGPATH_W) 'src/core/kernelMidi.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/kernelMidi.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada-kernelMidi.Tpo src/core/$(DEPDIR)/giada-kernelMidi.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/kernelMidi.cpp' object='src/core/giada-kernelMidi.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada-kernelMidi.obj `if test -f 'src/core/kernelMidi.cpp'; then $(CYGPATH_W) 'src/core/kernelMidi.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/kernelMidi.cpp'; fi`

src/core/giada-graphics.o: src/core/graphics.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada-graphics.o -MD -MP -MF src/core/$(DEPDIR)/giada-graphics.Tpo -c -o src/core/giada-graphics.o `test -f 'src/core/graphics.cpp' || echo '$(srcdir)/'`src/core/graphics.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada-graphics.Tpo src/core/$(DEPDIR)/giada-graphics.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/graphics.cpp' object='src/core/giada-graphics.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada-graphics.o `test -f 'src/core/graphics.cpp' || echo '$(srcdir)/'`src/core/graphics.cpp

src/core/giada-graphics.obj: src/core/graphics.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada-graphics.obj -MD -MP -MF src/core/$(DEPDIR)/giada-graphics.Tpo -c -o src/core/giada-graphics.obj `if test -f 'src/core/graphics.cpp'; then $(CYGPATH_W) 'src/core/graphics.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/graphics.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada-graphics.Tpo src/core/$(DEPDIR)/giada-graphics.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/graphics.cpp' object='src/core/giada-graphics.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada-graphics.obj `if test -f 'src/core/graphics.cpp'; then $(CYGPATH_W) 'src/core/graphics.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/graphics.cpp'; fi`

src/core/giada-patch_DEPR_.o: src/core/patch_DEPR_.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada-patch_DEPR_.o -MD -MP -MF src/core/$(DEPDIR)/giada-patch_DEPR_.Tpo -c -o src/core/giada-patch_DEPR_.o `test -f 'src/core/patch_DEPR_.cpp' || echo '$(srcdir)/'`src/core/patch_DEPR_.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada-patch_DEPR_.Tpo src/core/$(DEPDIR)/giada-patch_DEPR_.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/patch_DEPR_.cpp' object='src/core/giada-patch_DEPR_.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada-patch_DEPR_.o `test -f 'src/core/patch_DEPR_.cpp' || echo '$(srcdir)/'`src/core/patch_DEPR_.cpp

src/core/giada-patch_DEPR_.obj: src/core/patch_DEPR_.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada-patch_DEPR_.obj -MD -MP -MF src/core/$(DEPDIR)/giada-patch_DEPR_.Tpo -c -o src/core/giada-patch_DEPR_.obj `if test -f 'src/core/patch_DEPR_.cpp'; then $(CYGPATH_W) 'src/core/patch_DEPR_.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/patch_DEPR_.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada-patch_DEPR_.Tpo src/core/$(DEPDIR)/giada-patch_DEPR_.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/patch_DEPR_.cpp' object='src/core/giada-patch_DEPR_.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada-patch_DEPR_.obj `if test -f 'src/core/patch_DEPR_.cpp'; then $(CYGPATH_W) 'src/core/patch_DEPR_.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/patch_DEPR_.cpp'; fi`

src/core/giada-patch.o: src/core/patch.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada-patch.o -MD -MP -MF src/core/$(DEPDIR)/giada-patch.Tpo -c -o src/core/giada-patch.o `test -f 'src/core/patch.cpp' || echo '$(srcdir)/'`src/core/patch.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada-patch.Tpo src/core/$(DEPDIR)/giada-patch.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/patch.cpp' object='src/core/giada-patch.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada-patch.o `test -f 'src/core/patch.cpp' || echo '$(srcdir)/'`src/core/patch.cpp

src/core/giada-patch.obj: src/core/patch.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada-patch.obj -MD -MP -MF src/core/$(DEPDIR)/giada-patch.Tpo -c -o src/core/giada-patch.obj `if test -f 'src/core/patch.cpp'; then $(CYGPATH_W) 'src/core/patch.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/patch.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada-patch.Tpo src/core/$(DEPDIR)/giada-patch.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/patch.cpp' object='src/core/giada-patch.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada-patch.obj `if test -f 'src/core/patch.cpp'; then $(CYGPATH_W) 'src/core/patch.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/patch.cpp'; fi`

src/core/giada-recorder.o: src/core/recorder.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada-recorder.o -MD -MP -MF src/core/$(DEPDIR)/giada-recorder.Tpo -c -o src/core/giada-recorder.o `test -f 'src/core/recorder.cpp' || echo '$(srcdir)/'`src/core/recorder.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada-recorder.Tpo src/core/$(DEPDIR)/giada-recorder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/recorder.cpp' object='src/core/giada-recorder.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada-recorder.o `test -f 'src/core/recorder.cpp' || echo '$(srcdir)/'`src/core/recorder.cpp

src/core/giada-recorder.obj: src/core/recorder.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada-recorder.obj -MD -MP -MF src/core/$(DEPDIR)/giada-recorder.Tpo -c -o src/core/giada-recorder.obj `if test -f 'src/core/recorder.cpp'; then $(CYGPATH_W) 'src/core/recorder.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/recorder.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada-recorder.Tpo src/core/$(DEPDIR)/giada-recorder.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/recorder.cpp' object='src/core/giada-recorder.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada-recorder.obj `if test -f 'src/core/recorder.cpp'; then $(CYGPATH_W) 'src/core/recorder.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/recorder.cpp'; fi`

src/core/giada-mixer.o: src/core/mixer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada-mixer.o -MD -MP -MF src/core/$(DEPDIR)/giada-mixer.Tpo -c -o src/core/giada-mixer.o `test -f 'src/core/mixer.cpp' || echo '$(srcdir)/'`src/core/mixer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada-mixer.Tpo src/core/$(DEPDIR)/giada-mixer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/mixer.cpp' object='src/core/giada-mixer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada-mixer.o `test -f 'src/core/mixer.cpp' || echo '$(srcdir)/'`src/core/mixer.cpp

src/core/giada-mixer.obj: src/core/mixer.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada-mixer.obj -MD -MP -MF src/core/$(DEPDIR)/giada-mixer.Tpo -c -o src/core/giada-mixer.obj `if test -f 'src/core/mixer.cpp'; then $(CYGPATH_W) 'src/core/mixer.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/mixer.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada-mixer.Tpo src/core/$(DEPDIR)/giada-mixer.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/mixer.cpp' object='src/core/giada-mixer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada-mixer.obj `if test -f 'src/core/mixer.cpp'; then $(CYGPATH_W) 'src/core/mixer.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/mixer.cpp'; fi`

src/core/giada-dataStorageIni.o: src/core/dataStorageIni.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada-dataStorageIni.o -MD -MP -MF src/core/$(DEPDIR)/giada-dataStorageIni.Tpo -c -o src/core/giada-dataStorageIni.o `test -f 'src/core/dataStorageIni.cpp' || echo '$(srcdir)/'`src/core/dataStorageIni.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada-dataStorageIni.Tpo src/core/$(DEPDIR)/giada-dataStorageIni.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/dataStorageIni.cpp' object='src/core/giada-dataStorageIni.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada-dataStorageIni.o `test -f 'src/core/dataStorageIni.cpp' || echo '$(srcdir)/'`src/core/dataStorageIni.cpp

src/core/giada-dataStorageIni.obj: src/core/dataStorageIni.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada-dataStorageIni.obj -MD -MP -MF src/core/$(DEPDIR)/giada-dataStorageIni.Tpo -c -o src/core/giada-dataStorageIni.obj `if test -f 'src/core/dataStorageIni.cpp'; then $(CYGPATH_W) 'src/core/dataStorageIni.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/dataStorageIni.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada-dataStorageIni.Tpo src/core/$(DEPDIR)/giada-dataStorageIni.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/dataStorageIni.cpp' object='src/core/giada-dataStorageIni.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada-dataStorageIni.obj `if test -f 'src/core/dataStorageIni.cpp'; then $(CYGPATH_W) 'src/core/dataStorageIni.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/dataStorageIni.cpp'; fi`

src/core/giada-dataStorageJson.o: src/core/dataStorageJson.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada-dataStorageJson.o -MD -MP -MF src/core/$(DEPDIR)/giada-dataStorageJson.Tpo -c -o src/core/giada-dataStorageJson.o `test -f 'src/core/dataStorageJson.cpp' || echo '$(srcdir)/'`src/core/dataStorageJson.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada-dataStorageJson.Tpo src/core/$(DEPDIR)/giada-dataStorageJson.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/dataStorageJson.cpp' object='src/core/giada-dataStorageJson.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada-dataStorageJson.o `test -f 'src/core/dataStorageJson.cpp' || echo '$(srcdir)/'`src/core/dataStorageJson.cpp

src/core/giada-dataStorageJson.obj: src/core/dataStorageJson.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada-dataStorageJson.obj -MD -MP -MF src/core/$(DEPDIR)/giada-dataStorageJson.Tpo -c -o src/core/giada-dataStorageJson.obj `if test -f 'src/core/dataStorageJson.cpp'; then $(CYGPATH_W) 'src/core/dataStorageJson.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/dataStorageJson.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada-dataStorageJson.Tpo src/core/$(DEPDIR)/giada-dataStorageJson.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/dataStorageJson.cpp' object='src/core/giada-dataStorageJson.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada-dataStorageJson.obj `if test -f 'src/core/dataStorageJson.cpp'; then $(CYGPATH_W) 'src/core/dataStorageJson.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/dataStorageJson.cpp'; fi`

src/glue/giada-glue.o: src/glue/glue.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/glue/giada-glue.o -MD -MP -MF src/glue/$(DEPDIR)/giada-glue.Tpo -c -o src/glue/giada-glue.o `test -f 'src/glue/glue.cpp' || echo '$(srcdir)/'`src/glue/glue.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/glue/$(DEPDIR)/giada-glue.Tpo src/glue/$(DEPDIR)/giada-glue.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/glue/glue.cpp' object='src/glue/giada-glue.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/glue/giada-glue.o `test -f 'src/glue/glue.cpp' || echo '$(srcdir)/'`src/glue/glue.cpp

src/glue/giada-glue.obj: src/glue/glue.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/glue/giada-glue.obj -MD -MP -MF src/glue/$(DEPDIR)/giada-glue.Tpo -c -o src/glue/giada-glue.obj `if test -f 'src/glue/glue.cpp'; then $(CYGPATH_W) 'src/glue/glue.cpp'; else $(CYGPATH_W) '$(srcdir)/src/glue/glue.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/glue/$(DEPDIR)/giada-glue.Tpo src/glue/$(DEPDIR)/giada-glue.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/glue/glue.cpp' object='src/glue/giada-glue.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/glue/giada-glue.obj `if test -f 'src/glue/glue.cpp'; then $(CYGPATH_W) 'src/glue/glue.cpp'; else $(CYGPATH_W) '$(srcdir)/src/glue/glue.cpp'; fi`

src/glue/giada-storage.o: src/glue/storage.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/glue/giada-storage.o -MD -MP -MF src/glue/$(DEPDIR)/giada-storage.Tpo -c -o src/glue/giada-storage.o `test -f 'src/glue/storage.cpp' || echo '$(srcdir)/'`src/glue/storage.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/glue/$(DEPDIR)/giada-storage.Tpo src/glue/$(DEPDIR)/giada-storage.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/glue/storage.cpp' object='src/glue/giada-storage.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/glue/giada-storage.o `test -f 'src/glue/storage.cpp' || echo '$(srcdir)/'`src/glue/storage.cpp

src/glue/giada-storage.obj: src/glue/storage.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/glue/giada-storage.obj -MD -MP -MF src/glue/$(DEPDIR)/giada-storage.Tpo -c -o src/glue/giada-storage.obj `if test -f 'src/glue/storage.cpp'; then $(CYGPATH_W) 'src/glue/storage.cpp'; else $(CYGPATH_W) '$(srcdir)/src/glue/storage.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/glue/$(DEPDIR)/giada-storage.Tpo src/glue/$(DEPDIR)/giada-storage.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/glue/storage.cpp' object='src/glue/giada-storage.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/glue/giada-storage.obj `if test -f 'src/glue/storage.cpp'; then $(CYGPATH_W) 'src/glue/storage.cpp'; else $(CYGPATH_W) '$(srcdir)/src/glue/storage.cpp'; fi`

src/glue/giada-channel.o: src/glue/channel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/glue/giada-channel.o -MD -MP -MF src/glue/$(DEPDIR)/giada-channel.Tpo -c -o src/glue/giada-channel.o `test -f 'src/glue/channel.cpp' || echo '$(srcdir)/'`src/glue/channel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/glue/$(DEPDIR)/giada-channel.Tpo src/glue/$(DEPDIR)/giada-channel.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/glue/channel.cpp' object='src/glue/giada-channel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/glue/giada-channel.o `test -f 'src/glue/channel.cpp' || echo '$(srcdir)/'`src/glue/channel.cpp

src/glue/giada-channel.obj: src/glue/channel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/glue/giada-channel.obj -MD -MP -MF src/glue/$(DEPDIR)/giada-channel.Tpo -c -o src/glue/giada-channel.obj `if test -f 'src/glue/channel.cpp'; then $(CYGPATH_W) 'src/glue/channel.cpp'; else $(CYGPATH_W) '$(srcdir)/src/glue/channel.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/glue/$(DEPDIR)/giada-channel.Tpo src/glue/$(DEPDIR)/giada-channel.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/glue/channel.cpp' object='src/glue/giada-channel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/glue/giada-channel.obj `if test -f 'src/glue/channel.cpp'; then $(CYGPATH_W) 'src/glue/channel.cpp'; else $(CYGPATH_W) '$(srcdir)/src/glue/channel.cpp'; fi`

src/gui/dialogs/giada-gd_keyGrabber.o: src/gui/dialogs/gd_keyGrabber.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/dialogs/giada-gd_keyGrabber.o -MD -MP -MF src/gui/dialogs/$(DEPDIR)/giada-gd_keyGrabber.Tpo -c -o src/gui/dialogs/giada-gd_keyGrabber.o `test -f 'src/gui/dialogs/gd_keyGrabber.cpp' || echo '$(srcdir)/'`src/gui/dialogs/gd_keyGrabber.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/dialogs/$(DEPDIR)/giada-gd_keyGrabber.Tpo src/gui/dialogs/$(DEPDIR)/giada-gd_keyGrabber.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/dialogs/gd_keyGrabber.cpp' object='src/gui/dialogs/giada-gd_keyGrabber.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/dialogs/giada-gd_keyGrabber.o `test -f 'src/gui/dialogs/gd_keyGrabber.cpp' || echo '$(srcdir)/'`src/gui/dialogs/gd_keyGrabber.cpp

src/gui/dialogs/giada-gd_keyGrabber.obj: src/gui/dialogs/gd_keyGrabber.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/dialogs/giada-gd_keyGrabber.obj -MD -MP -MF src/gui/dialogs/$(DEPDIR)/giada-gd_keyGrabber.Tpo -c -o src/gui/dialogs/giada-gd_keyGrabber.obj `if test -f 'src/gui/dialogs/gd_keyGrabber.cpp'; then $(CYGPATH_W) 'src/gui/dialogs/gd_keyGrabber.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/dialogs/gd_keyGrabber.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/dialogs/$(DEPDIR)/giada-gd_keyGrabber.Tpo src/gui/dialogs/$(DEPDIR)/giada-gd_keyGrabber.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/dialogs/gd_keyGrabber.cpp' object='src/gui/dialogs/giada-gd_keyGrabber.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/dialogs/giada-gd_keyGrabber.obj `if test -f 'src/gui/dialogs/gd_keyGrabber.cpp'; then $(CYGPATH_W) 'src/gui/dialogs/gd_keyGrabber.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/dialogs/gd_keyGrabber.cpp'; fi`

src/gui/dialogs/giada-gd_about.o: src/gui/dialogs/gd_about.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/dialogs/giada-gd_about.o -MD -MP -MF src/gui/dialogs/$(DEPDIR)/giada-gd_about.Tpo -c -o src/gui/dialogs/giada-gd_about.o `test -f 'src/gui/dialogs/gd_about.cpp' || echo '$(srcdir)/'`src/gui/dialogs/gd_about.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/dialogs/$(DEPDIR)/giada-gd_about.Tpo src/gui/dialogs/$(DEPDIR)/giada-gd_about.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/dialogs/gd_about.cpp' object='src/gui/dialogs/giada-gd_about.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/dialogs/giada-gd_about.o `test -f 'src/gui/dialogs/gd_about.cpp' || echo '$(srcdir)/'`src/gui/dialogs/gd_about.cpp

src/gui/dialogs/giada-gd_about.obj: src/gui/dialogs/gd_about.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/dialogs/giada-gd_about.obj -MD -MP -MF src/gui/dialogs/$(DEPDIR)/giada-gd_about.Tpo -c -o src/gui/dialogs/giada-gd_about.obj `if test -f 'src/gui/dialogs/gd_about.cpp'; then $(CYGPATH_W) 'src/gui/dialogs/gd_about.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/dialogs/gd_about.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/dialogs/$(DEPDIR)/giada-gd_about.Tpo src/gui/dialogs/$(DEPDIR)/giada-gd_about.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/dialogs/gd_about.cpp' object='src/gui/dialogs/giada-gd_about.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/dialogs/giada-gd_about.obj `if test -f 'src/gui/dialogs/gd_about.cpp'; then $(CYGPATH_W) 'src/gui/dialogs/gd_about.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/dialogs/gd_about.cpp'; fi`

src/gui/dialogs/giada-gd_mainWindow.o: src/gui/dialogs/gd_mainWindow.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/dialogs/giada-gd_mainWindow.o -MD -MP -MF src/gui/dialogs/$(DEPDIR)/giada-gd_mainWindow.Tpo -c -o src/gui/dialogs/giada-gd_mainWindow.o `test -f 'src/gui/dialogs/gd_mainWindow.cpp' || echo '$(srcdir)/'`src/gui/dialogs/gd_mainWindow.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/dialogs/$(DEPDIR)/giada-gd_mainWindow.Tpo src/gui/dialogs/$(DEPDIR)/giada-gd_mainWindow.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/dialogs/gd_mainWindow.cpp' object='src/gui/dialogs/giada-gd_mainWindow.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/dialogs/giada-gd_mainWindow.o `test -f 'src/gui/dialogs/gd_mainWindow.cpp' || echo '$(srcdir)/'`src/gui/dialogs/gd_mainWindow.cpp

src/gui/dialogs/giada-gd_mainWindow.obj: src/gui/dialogs/gd_mainWindow.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/dialogs/giada-gd_mainWindow.obj -MD -MP -MF src/gui/dialogs/$(DEPDIR)/giada-gd_mainWindow.Tpo -c -o src/gui/dialogs/giada-gd_mainWindow.obj `if test -f 'src/gui/dialogs/gd_mainWindow.cpp'; then $(CYGPATH_W) 'src/gui/dialogs/gd_mainWindow.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/dialogs/gd_mainWindow.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/dialogs/$(DEPDIR)/giada-gd_mainWindow.Tpo src/gui/dialogs/$(DEPDIR)/giada-gd_mainWindow.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/dialogs/gd_mainWindow.cpp' object='src/gui/dialogs/giada-gd_mainWindow.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/dialogs/giada-gd_mainWindow.obj `if test -f 'src/gui/dialogs/gd_mainWindow.cpp'; then $(CYGPATH_W) 'src/gui/dialogs/gd_mainWindow.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/dialogs/gd_mainWindow.cpp'; fi`

src/gui/dialogs/giada-gd_beatsInput.o: src/gui/dialogs/gd_beatsInput.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/dialogs/giada-gd_beatsInput.o -MD -MP -MF src/gui/dialogs/$(DEPDIR)/giada-gd_beatsInput.Tpo -c -o src/gui/dialogs/giada-gd_beatsInput.o `test -f 'src/gui/dialogs/gd_beatsInput.cpp' || echo '$(srcdir)/'`src/gui/dialogs/gd_beatsInput.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/dialogs/$(DEPDIR)/giada-gd_beatsInput.Tpo src/gui/dialogs/$(DEPDIR)/giada-gd_beatsInput.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/dialogs/gd_beatsInput.cpp' object='src/gui/dialogs/giada-gd_beatsInput.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/dialogs/giada-gd_beatsInput.o `test -f 'src/gui/dialogs/gd_beatsInput.cpp' || echo '$(srcdir)/'`src/gui/dialogs/gd_beatsInput.cpp

src/gui/dialogs/giada-gd_beatsInput.obj: src/gui/dialogs/gd_beatsInput.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/dialogs/giada-gd_beatsInput.obj -MD -MP -MF src/gui/dialogs/$(DEPDIR)/giada-gd_beatsInput.Tpo -c -o src/gui/dialogs/giada-gd_beatsInput.obj `if test -f 'src/gui/dialogs/gd_beatsInput.cpp'; then $(CYGPATH_W) 'src/gui/dialogs/gd_beatsInput.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/dialogs/gd_beatsInput.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/dialogs/$(DEPDIR)/giada-gd_beatsInput.Tpo src/gui/dialogs/$(DEPDIR)/giada-gd_beatsInput.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/dialogs/gd_beatsInput.cpp' object='src/gui/dialogs/giada-gd_beatsInput.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/dialogs/giada-gd_beatsInput.obj `if test -f 'src/gui/dialogs/gd_beatsInput.cpp'; then $(CYGPATH_W) 'src/gui/dialogs/gd_beatsInput.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/dialogs/gd_beatsInput.cpp'; fi`

src/gui/dialogs/giada-gd_warnings.o: src/gui/dialogs/gd_warnings.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/dialogs/giada-gd_warnings.o -MD -MP -MF src/gui/dialogs/$(DEPDIR)/giada-gd_warnings.Tpo -c -o src/gui/dialogs/giada-gd_warnings.o `test -f 'src/gui/dialogs/gd_warnings.cpp' || echo '$(srcdir)/'`src/gui/dialogs/gd_warnings.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/dialogs/$(DEPDIR)/giada-gd_warnings.Tpo src/gui/dialogs/$(DEPDIR)/giada-gd_warnings.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/dialogs/gd_warnings.cpp' object='src/gui/dialogs/giada-gd_warnings.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/dialogs/giada-gd_warnings.o `test -f 'src/gui/dialogs/gd_warnings.cpp' || echo '$(srcdir)/'`src/gui/dialogs/gd_warnings.cpp

src/gui/dialogs/giada-gd_warnings.obj: src/gui/dialogs/gd_warnings.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/dialogs/giada-gd_warnings.obj -MD -MP -MF src/gui/dialogs/$(DEPDIR)/giada-gd_warnings.Tpo -c -o src/gui/dialogs/giada-gd_warnings.obj `if test -f 'src/gui/dialogs/gd_warnings.cpp'; then $(CYGPATH_W) 'src/gui/dialogs/gd_warnings.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/dialogs/gd_warnings.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/dialogs/$(DEPDIR)/giada-gd_warnings.Tpo src/gui/dialogs/$(DEPDIR)/giada-gd_warnings.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/dialogs/gd_warnings.cpp' object='src/gui/dialogs/giada-gd_warnings.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/dialogs/giada-gd_warnings.obj `if test -f 'src/gui/dialogs/gd_warnings.cpp'; then $(CYGPATH_W) 'src/gui/dialogs/gd_warnings.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/dialogs/gd_warnings.cpp'; fi`

src/gui/dialogs/giada-gd_bpmInput.o: src/gui/dialogs/gd_bpmInput.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/dialogs/giada-gd_bpmInput.o -MD -MP -MF src/gui/dialogs/$(DEPDIR)/giada-gd_bpmInput.Tpo -c -o src/gui/dialogs/giada-gd_bpmInput.o `test -f 'src/gui/dialogs/gd_bpmInput.cpp' || echo '$(srcdir)/'`src/gui/dialogs/gd_bpmInput.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/dialogs/$(DEPDIR)/giada-gd_bpmInput.Tpo src/gui/dialogs/$(DEPDIR)/giada-gd_bpmInput.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/dialogs/gd_bpmInput.cpp' object='src/gui/dialogs/giada-gd_bpmInput.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/dialogs/giada-gd_bpmInput.o `test -f 'src/gui/dialogs/gd_bpmInput.cpp' || echo '$(srcdir)/'`src/gui/dialogs/gd_bpmInput.cpp

src/gui/dialogs/giada-gd_bpmInput.obj: src/gui/dialogs/gd_bpmInput.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/dialogs/giada-gd_bpmInput.obj -MD -MP -MF src/gui/dialogs/$(DEPDIR)/giada-gd_bpmInput.Tpo -c -o src/gui/dialogs/giada-gd_bpmInput.obj `if test -f 'src/gui/dialogs/gd_bpmInput.cpp'; then $(CYGPATH_W) 'src/gui/dialogs/gd_bpmInput.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/dialogs/gd_bpmInput.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/dialogs/$(DEPDIR)/giada-gd_bpmInput.Tpo src/gui/dialogs/$(DEPDIR)/giada-gd_bpmInput.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/dialogs/gd_bpmInput.cpp' object='src/gui/dialogs/giada-gd_bpmInput.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/dialogs/giada-gd_bpmInput.obj `if test -f 'src/gui/dialogs/gd_bpmInput.cpp'; then $(CYGPATH_W) 'src/gui/dialogs/gd_bpmInput.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/dialogs/gd_bpmInput.cpp'; fi`

src/gui/dialogs/giada-gd_browser.o: src/gui/dialogs/gd_browser.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/dialogs/giada-gd_browser.o -MD -MP -MF src/gui/dialogs/$(DEPDIR)/giada-gd_browser.Tpo -c -o src/gui/dialogs/giada-gd_browser.o `test -f 'src/gui/dialogs/gd_browser.cpp' || echo '$(srcdir)/'`src/gui/dialogs/gd_browser.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/dialogs/$(DEPDIR)/giada-gd_browser.Tpo src/gui/dialogs/$(DEPDIR)/giada-gd_browser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/dialogs/gd_browser.cpp' object='src/gui/dialogs/giada-gd_browser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/dialogs/giada-gd_browser.o `test -f 'src/gui/dialogs/gd_browser.cpp' || echo '$(srcdir)/'`src/gui/dialogs/gd_browser.cpp

src/gui/dialogs/giada-gd_browser.obj: src/gui/dialogs/gd_browser.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/dialogs/giada-gd_browser.obj -MD -MP -MF src/gui/dialogs/$(DEPDIR)/giada-gd_browser.Tpo -c -o src/gui/dialogs/giada-gd_browser.obj `if test -f 'src/gui/dialogs/gd_browser.cpp'; then $(CYGPATH_W) 'src/gui/dialogs/gd_browser.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/dialogs/gd_browser.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/dialogs/$(DEPDIR)/giada-gd_browser.Tpo src/gui/dialogs/$(DEPDIR)/giada-gd_browser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/dialogs/gd_browser.cpp' object='src/gui/dialogs/giada-gd_browser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/dialogs/giada-gd_browser.obj `if test -f 'src/gui/dialogs/gd_browser.cpp'; then $(CYGPATH_W) 'src/gui/dialogs/gd_browser.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/dialogs/gd_browser.cpp'; fi`

src/gui/dialogs/giada-gd_config.o: src/gui/dialogs/gd_config.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/dialogs/giada-gd_config.o -MD -MP -MF src/gui/dialogs/$(DEPDIR)/giada-gd_config.Tpo -c -o src/gui/dialogs/giada-gd_config.o `test -f 'src/gui/dialogs/gd_config.cpp' || echo '$(srcdir)/'`src/gui/dialogs/gd_config.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/dialogs/$(DEPDIR)/giada-gd_config.Tpo src/gui/dialogs/$(DEPDIR)/giada-gd_config.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/dialogs/gd_config.cpp' object='src/gui/dialogs/giada-gd_config.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/dialogs/giada-gd_config.o `test -f 'src/gui/dialogs/gd_config.cpp' || echo '$(srcdir)/'`src/gui/dialogs/gd_config.cpp

src/gui/dialogs/giada-gd_config.obj: src/gui/dialogs/gd_config.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/dialogs/giada-gd_config.obj -MD -MP -MF src/gui/dialogs/$(DEPDIR)/giada-gd_config.Tpo -c -o src/gui/dialogs/giada-gd_config.obj `if test -f 'src/gui/dialogs/gd_config.cpp'; then $(CYGPATH_W) 'src/gui/dialogs/gd_config.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/dialogs/gd_config.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/dialogs/$(DEPDIR)/giada-gd_config.Tpo src/gui/dialogs/$(DEPDIR)/giada-gd_config.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/dialogs/gd_config.cpp' object='src/gui/dialogs/giada-gd_config.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/dialogs/giada-gd_config.obj `if test -f 'src/gui/dialogs/gd_config.cpp'; then $(CYGPATH_W) 'src/gui/dialogs/gd_config.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/dialogs/gd_config.cpp'; fi`

src/gui/dialogs/giada-gd_devInfo.o: src/gui/dialogs/gd_devInfo.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/dialogs/giada-gd_devInfo.o -MD -MP -MF src/gui/dialogs/$(DEPDIR)/giada-gd_devInfo.Tpo -c -o src/gui/dialogs/giada-gd_devInfo.o `test -f 'src/gui/dialogs/gd_devInfo.cpp' || echo '$(srcdir)/'`src/gui/dialogs/gd_devInfo.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/dialogs/$(DEPDIR)/giada-gd_devInfo.Tpo src/gui/dialogs/$(DEPDIR)/giada-gd_devInfo.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/dialogs/gd_devInfo.cpp' object='src/gui/dialogs/giada-gd_devInfo.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/dialogs/giada-gd_devInfo.o `test -f 'src/gui/dialogs/gd_devInfo.cpp' || echo '$(srcdir)/'`src/gui/dialogs/gd_devInfo.cpp

src/gui/dialogs/giada-gd_devInfo.obj: src/gui/dialogs/gd_devInfo.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/dialogs/giada-gd_devInfo.obj -MD -MP -MF src/gui/dialogs/$(DEPDIR)/giada-gd_devInfo.Tpo -c -o src/gui/dialogs/giada-gd_devInfo.obj `if test -f 'src/gui/dialogs/gd_devInfo.cpp'; then $(CYGPATH_W) 'src/gui/dialogs/gd_devInfo.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/dialogs/gd_devInfo.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/dialogs/$(DEPDIR)/giada-gd_devInfo.Tpo src/gui/dialogs/$(DEPDIR)/giada-gd_devInfo.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/dialogs/gd_devInfo.cpp' object='src/gui/dialogs/giada-gd_devInfo.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/dialogs/giada-gd_devInfo.obj `if test -f 'src/gui/dialogs/gd_devInfo.cpp'; then $(CYGPATH_W) 'src/gui/dialogs/gd_devInfo.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/dialogs/gd_devInfo.cpp'; fi`

src/gui/dialogs/giada-gd_pluginList.o: src/gui/dialogs/gd_pluginList.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/dialogs/giada-gd_pluginList.o -MD -MP -MF src/gui/dialogs/$(DEPDIR)/giada-gd_pluginList.Tpo -c -o src/gui/dialogs/giada-gd_pluginList.o `test -f 'src/gui/dialogs/gd_pluginList.cpp' || echo '$(srcdir)/'`src/gui/dialogs/gd_pluginList.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/dialogs/$(DEPDIR)/giada-gd_pluginList.Tpo src/gui/dialogs/$(DEPDIR)/giada-gd_pluginList.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/dialogs/gd_pluginList.cpp' object='src/gui/dialogs/giada-gd_pluginList.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/dialogs/giada-gd_pluginList.o `test -f 'src/gui/dialogs/gd_pluginList.cpp' || echo '$(srcdir)/'`src/gui/dialogs/gd_pluginList.cpp

src/gui/dialogs/giada-gd_pluginList.obj: src/gui/dialogs/gd_pluginList.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/dialogs/giada-gd_pluginList.obj -MD -MP -MF src/gui/dialogs/$(DEPDIR)/giada-gd_pluginList.Tpo -c -o src/gui/dialogs/giada-gd_pluginList.obj `if test -f 'src/gui/dialogs/gd_pluginList.cpp'; then $(CYGPATH_W) 'src/gui/dialogs/gd_pluginList.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/dialogs/gd_pluginList.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/dialogs/$(DEPDIR)/giada-gd_pluginList.Tpo src/gui/dialogs/$(DEPDIR)/giada-gd_pluginList.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/dialogs/gd_pluginList.cpp' object='src/gui/dialogs/giada-gd_pluginList.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/dialogs/giada-gd_pluginList.obj `if test -f 'src/gui/dialogs/gd_pluginList.cpp'; then $(CYGPATH_W) 'src/gui/dialogs/gd_pluginList.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/dialogs/gd_pluginList.cpp'; fi`

src/gui/dialogs/giada-gd_pluginWindow.o: src/gui/dialogs/gd_pluginWindow.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/dialogs/giada-gd_pluginWindow.o -MD -MP -MF src/gui/dialogs/$(DEPDIR)/giada-gd_pluginWindow.Tpo -c -o src/gui/dialogs/giada-gd_pluginWindow.o `test -f 'src/gui/dialogs/gd_pluginWindow.cpp' || echo '$(srcdir)/'`src/gui/dialogs/gd_pluginWindow.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/dialogs/$(DEPDIR)/giada-gd_pluginWindow.Tpo src/gui/dialogs/$(DEPDIR)/giada-gd_pluginWindow.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/dialogs/gd_pluginWindow.cpp' object='src/gui/dialogs/giada-gd_pluginWindow.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/dialogs/giada-gd_pluginWindow.o `test -f 'src/gui/dialogs/gd_pluginWindow.cpp' || echo '$(srcdir)/'`src/gui/dialogs/gd_pluginWindow.cpp

src/gui/dialogs/giada-gd_pluginWindow.obj: src/gui/dialogs/gd_pluginWindow.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/dialogs/giada-gd_pluginWindow.obj -MD -MP -MF src/gui/dialogs/$(DEPDIR)/giada-gd_pluginWindow.Tpo -c -o src/gui/dialogs/giada-gd_pluginWindow.obj `if test -f 'src/gui/dialogs/gd_pluginWindow.cpp'; then $(CYGPATH_W) 'src/gui/dialogs/gd_pluginWindow.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/dialogs/gd_pluginWindow.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/dialogs/$(DEPDIR)/giada-gd_pluginWindow.Tpo src/gui/dialogs/$(DEPDIR)/giada-gd_pluginWindow.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/dialogs/gd_pluginWindow.cpp' object='src/gui/dialogs/giada-gd_pluginWindow.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/dialogs/giada-gd_pluginWindow.obj `if test -f 'src/gui/dialogs/gd_pluginWindow.cpp'; then $(CYGPATH_W) 'src/gui/dialogs/gd_pluginWindow.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/dialogs/gd_pluginWindow.cpp'; fi`

src/gui/dialogs/giada-gd_editor.o: src/gui/dialogs/gd_editor.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/dialogs/giada-gd_editor.o -MD -MP -MF src/gui/dialogs/$(DEPDIR)/giada-gd_editor.Tpo -c -o src/gui/dialogs/giada-gd_editor.o `test -f 'src/gui/dialogs/gd_editor.cpp' || echo '$(srcdir)/'`src/gui/dialogs/gd_editor.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/dialogs/$(DEPDIR)/giada-gd_editor.Tpo src/gui/dialogs/$(DEPDIR)/giada-gd_editor.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/dialogs/gd_editor.cpp' object='src/gui/dialogs/giada-gd_editor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/dialogs/giada-gd_editor.o `test -f 'src/gui/dialogs/gd_editor.cpp' || echo '$(srcdir)/'`src/gui/dialogs/gd_editor.cpp

src/gui/dialogs/giada-gd_editor.obj: src/gui/dialogs/gd_editor.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/dialogs/giada-gd_editor.obj -MD -MP -MF src/gui/dialogs/$(DEPDIR)/giada-gd_editor.Tpo -c -o src/gui/dialogs/giada-gd_editor.obj `if test -f 'src/gui/dialogs/gd_editor.cpp'; then $(CYGPATH_W) 'src/gui/dialogs/gd_editor.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/dialogs/gd_editor.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/dialogs/$(DEPDIR)/giada-gd_editor.Tpo src/gui/dialogs/$(DEPDIR)/giada-gd_editor.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/dialogs/gd_editor.cpp' object='src/gui/dialogs/giada-gd_editor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/dialogs/giada-gd_editor.obj `if test -f 'src/gui/dialogs/gd_editor.cpp'; then $(CYGPATH_W) 'src/gui/dialogs/gd_editor.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/dialogs/gd_editor.cpp'; fi`

src/gui/dialogs/giada-gd_pluginWindowGUI.o: src/gui/dialogs/gd_pluginWindowGUI.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/dialogs/giada-gd_pluginWindowGUI.o -MD -MP -MF src/gui/dialogs/$(DEPDIR)/giada-gd_pluginWindowGUI.Tpo -c -o src/gui/dialogs/giada-gd_pluginWindowGUI.o `test -f 'src/gui/dialogs/gd_pluginWindowGUI.cpp' || echo '$(srcdir)/'`src/gui/dialogs/gd_pluginWindowGUI.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/dialogs/$(DEPDIR)/giada-gd_pluginWindowGUI.Tpo src/gui/dialogs/$(DEPDIR)/giada-gd_pluginWindowGUI.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/dialogs/gd_pluginWindowGUI.cpp' object='src/gui/dialogs/giada-gd_pluginWindowGUI.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/dialogs/giada-gd_pluginWindowGUI.o `test -f 'src/gui/dialogs/gd_pluginWindowGUI.cpp' || echo '$(srcdir)/'`src/gui/dialogs/gd_pluginWindowGUI.cpp

src/gui/dialogs/giada-gd_pluginWindowGUI.obj: src/gui/dialogs/gd_pluginWindowGUI.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/dialogs/giada-gd_pluginWindowGUI.obj -MD -MP -MF src/gui/dialogs/$(DEPDIR)/giada-gd_pluginWindowGUI.Tpo -c -o src/gui/dialogs/giada-gd_pluginWindowGUI.obj `if test -f 'src/gui/dialogs/gd_pluginWindowGUI.cpp'; then $(CYGPATH_W) 'src/gui/dialogs/gd_pluginWindowGUI.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/dialogs/gd_pluginWindowGUI.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/dialogs/$(DEPDIR)/giada-gd_pluginWindowGUI.Tpo src/gui/dialogs/$(DEPDIR)/giada-gd_pluginWindowGUI.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/dialogs/gd_pluginWindowGUI.cpp' object='src/gui/dialogs/giada-gd_pluginWindowGUI.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/dialogs/giada-gd_pluginWindowGUI.obj `if test -f 'src/gui/dialogs/gd_pluginWindowGUI.cpp'; then $(CYGPATH_W) 'src/gui/dialogs/gd_pluginWindowGUI.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/dialogs/gd_pluginWindowGUI.cpp'; fi`

src/gui/dialogs/giada-gd_midiOutput.o: src/gui/dialogs/gd_midiOutput.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/dialogs/giada-gd_midiOutput.o -MD -MP -MF src/gui/dialogs/$(DEPDIR)/giada-gd_midiOutput.Tpo -c -o src/gui/dialogs/giada-gd_midiOutput.o `test -f 'src/gui/dialogs/gd_midiOutput.cpp' || echo '$(srcdir)/'`src/gui/dialogs/gd_midiOutput.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/dialogs/$(DEPDIR)/giada-gd_midiOutput.Tpo src/gui/dialogs/$(DEPDIR)/giada-gd_midiOutput.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/dialogs/gd_midiOutput.cpp' object='src/gui/dialogs/giada-gd_midiOutput.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/dialogs/giada-gd_midiOutput.o `test -f 'src/gui/dialogs/gd_midiOutput.cpp' || echo '$(srcdir)/'`src/gui/dialogs/gd_midiOutput.cpp

src/gui/dialogs/giada-gd_midiOutput.obj: src/gui/dialogs/gd_midiOutput.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/dialogs/giada-gd_midiOutput.obj -MD -MP -MF src/gui/dialogs/$(DEPDIR)/giada-gd_midiOutput.Tpo -c -o src/gui/dialogs/giada-gd_midiOutput.obj `if test -f 'src/gui/dialogs/gd_midiOutput.cpp'; then $(CYGPATH_W) 'src/gui/dialogs/gd_midiOutput.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/dialogs/gd_midiOutput.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/dialogs/$(DEPDIR)/giada-gd_midiOutput.Tpo src/gui/dialogs/$(DEPDIR)/giada-gd_midiOutput.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/dialogs/gd_midiOutput.cpp' object='src/gui/dialogs/giada-gd_midiOutput.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/dialogs/giada-gd_midiOutput.obj `if test -f 'src/gui/dialogs/gd_midiOutput.cpp'; then $(CYGPATH_W) 'src/gui/dialogs/gd_midiOutput.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/dialogs/gd_midiOutput.cpp'; fi`

src/gui/dialogs/giada-gd_midiInput.o: src/gui/dialogs/gd_midiInput.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/dialogs/giada-gd_midiInput.o -MD -MP -MF src/gui/dialogs/$(DEPDIR)/giada-gd_midiInput.Tpo -c -o src/gui/dialogs/giada-gd_midiInput.o `test -f 'src/gui/dialogs/gd_midiInput.cpp' || echo '$(srcdir)/'`src/gui/dialogs/gd_midiInput.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/dialogs/$(DEPDIR)/giada-gd_midiInput.Tpo src/gui/dialogs/$(DEPDIR)/giada-gd_midiInput.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/dialogs/gd_midiInput.cpp' object='src/gui/dialogs/giada-gd_midiInput.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/dialogs/giada-gd_midiInput.o `test -f 'src/gui/dialogs/gd_midiInput.cpp' || echo '$(srcdir)/'`src/gui/dialogs/gd_midiInput.cpp

src/gui/dialogs/giada-gd_midiInput.obj: src/gui/dialogs/gd_midiInput.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/dialogs/giada-gd_midiInput.obj -MD -MP -MF src/gui/dialogs/$(DEPDIR)/giada-gd_midiInput.Tpo -c -o src/gui/dialogs/giada-gd_midiInput.obj `if test -f 'src/gui/dialogs/gd_midiInput.cpp'; then $(CYGPATH_W) 'src/gui/dialogs/gd_midiInput.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/dialogs/gd_midiInput.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/dialogs/$(DEPDIR)/giada-gd_midiInput.Tpo src/gui/dialogs/$(DEPDIR)/giada-gd_midiInput.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/dialogs/gd_midiInput.cpp' object='src/gui/dialogs/giada-gd_midiInput.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/dialogs/giada-gd_midiInput.obj `if test -f 'src/gui/dialogs/gd_midiInput.cpp'; then $(CYGPATH_W) 'src/gui/dialogs/gd_midiInput.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/dialogs/gd_midiInput.cpp'; fi`

src/gui/dialogs/giada-gd_actionEditor.o: src/gui/dialogs/gd_actionEditor.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/dialogs/giada-gd_actionEditor.o -MD -MP -MF src/gui/dialogs/$(DEPDIR)/giada-gd_actionEditor.Tpo -c -o src/gui/dialogs/giada-gd_actionEditor.o `test -f 'src/gui/dialogs/gd_actionEditor.cpp' || echo '$(srcdir)/'`src/gui/dialogs/gd_actionEditor.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/dialogs/$(DEPDIR)/giada-gd_actionEditor.Tpo src/gui/dialogs/$(DEPDIR)/giada-gd_actionEditor.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/dialogs/gd_actionEditor.cpp' object='src/gui/dialogs/giada-gd_actionEditor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/dialogs/giada-gd_actionEditor.o `test -f 'src/gui/dialogs/gd_actionEditor.cpp' || echo '$(srcdir)/'`src/gui/dialogs/gd_actionEditor.cpp

src/gui/dialogs/giada-gd_actionEditor.obj: src/gui/dialogs/gd_actionEditor.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/dialogs/giada-gd_actionEditor.obj -MD -MP -MF src/gui/dialogs/$(DEPDIR)/giada-gd_actionEditor.Tpo -c -o src/gui/dialogs/giada-gd_actionEditor.obj `if test -f 'src/gui/dialogs/gd_actionEditor.cpp'; then $(CYGPATH_W) 'src/gui/dialogs/gd_actionEditor.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/dialogs/gd_actionEditor.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/dialogs/$(DEPDIR)/giada-gd_actionEditor.Tpo src/gui/dialogs/$(DEPDIR)/giada-gd_actionEditor.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/dialogs/gd_actionEditor.cpp' object='src/gui/dialogs/giada-gd_actionEditor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/dialogs/giada-gd_actionEditor.obj `if test -f 'src/gui/dialogs/gd_actionEditor.cpp'; then $(CYGPATH_W) 'src/gui/dialogs/gd_actionEditor.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/dialogs/gd_actionEditor.cpp'; fi`

src/gui/dialogs/giada-gd_pluginChooser.o: src/gui/dialogs/gd_pluginChooser.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/dialogs/giada-gd_pluginChooser.o -MD -MP -MF src/gui/dialogs/$(DEPDIR)/giada-gd_pluginChooser.Tpo -c -o src/gui/dialogs/giada-gd_pluginChooser.o `test -f 'src/gui/dialogs/gd_pluginChooser.cpp' || echo '$(srcdir)/'`src/gui/dialogs/gd_pluginChooser.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/dialogs/$(DEPDIR)/giada-gd_pluginChooser.Tpo src/gui/dialogs/$(DEPDIR)/giada-gd_pluginChooser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/dialogs/gd_pluginChooser.cpp' object='src/gui/dialogs/giada-gd_pluginChooser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/dialogs/giada-gd_pluginChooser.o `test -f 'src/gui/dialogs/gd_pluginChooser.cpp' || echo '$(srcdir)/'`src/gui/dialogs/gd_pluginChooser.cpp

src/gui/dialogs/giada-gd_pluginChooser.obj: src/gui/dialogs/gd_pluginChooser.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/dialogs/giada-gd_pluginChooser.obj -MD -MP -MF src/gui/dialogs/$(DEPDIR)/giada-gd_pluginChooser.Tpo -c -o src/gui/dialogs/giada-gd_pluginChooser.obj `if test -f 'src/gui/dialogs/gd_pluginChooser.cpp'; then $(CYGPATH_W) 'src/gui/dialogs/gd_pluginChooser.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/dialogs/gd_pluginChooser.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/dialogs/$(DEPDIR)/giada-gd_pluginChooser.Tpo src/gui/dialogs/$(DEPDIR)/giada-gd_pluginChooser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/dialogs/gd_pluginChooser.cpp' object='src/gui/dialogs/giada-gd_pluginChooser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/dialogs/giada-gd_pluginChooser.obj `if test -f 'src/gui/dialogs/gd_pluginChooser.cpp'; then $(CYGPATH_W) 'src/gui/dialogs/gd_pluginChooser.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/dialogs/gd_pluginChooser.cpp'; fi`

src/gui/elems/giada-ge_column.o: src/gui/elems/ge_column.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/elems/giada-ge_column.o -MD -MP -MF src/gui/elems/$(DEPDIR)/giada-ge_column.Tpo -c -o src/gui/elems/giada-ge_column.o `test -f 'src/gui/elems/ge_column.cpp' || echo '$(srcdir)/'`src/gui/elems/ge_column.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/elems/$(DEPDIR)/giada-ge_column.Tpo src/gui/elems/$(DEPDIR)/giada-ge_column.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/elems/ge_column.cpp' object='src/gui/elems/giada-ge_column.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/elems/giada-ge_column.o `test -f 'src/gui/elems/ge_column.cpp' || echo '$(srcdir)/'`src/gui/elems/ge_column.cpp

src/gui/elems/giada-ge_column.obj: src/gui/elems/ge_column.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/elems/giada-ge_column.obj -MD -MP -MF src/gui/elems/$(DEPDIR)/giada-ge_column.Tpo -c -o src/gui/elems/giada-ge_column.obj `if test -f 'src/gui/elems/ge_column.cpp'; then $(CYGPATH_W) 'src/gui/elems/ge_column.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/elems/ge_column.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/elems/$(DEPDIR)/giada-ge_column.Tpo src/gui/elems/$(DEPDIR)/giada-ge_column.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/elems/ge_column.cpp' object='src/gui/elems/giada-ge_column.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/elems/giada-ge_column.obj `if test -f 'src/gui/elems/ge_column.cpp'; then $(CYGPATH_W) 'src/gui/elems/ge_column.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/elems/ge_column.cpp'; fi`

src/gui/elems/giada-ge_sampleChannel.o: src/gui/elems/ge_sampleChannel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/elems/giada-ge_sampleChannel.o -MD -MP -MF src/gui/elems/$(DEPDIR)/giada-ge_sampleChannel.Tpo -c -o src/gui/elems/giada-ge_sampleChannel.o `test -f 'src/gui/elems/ge_sampleChannel.cpp' || echo '$(srcdir)/'`src/gui/elems/ge_sampleChannel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/elems/$(DEPDIR)/giada-ge_sampleChannel.Tpo src/gui/elems/$(DEPDIR)/giada-ge_sampleChannel.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/elems/ge_sampleChannel.cpp' object='src/gui/elems/giada-ge_sampleChannel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/elems/giada-ge_sampleChannel.o `test -f 'src/gui/elems/ge_sampleChannel.cpp' || echo '$(srcdir)/'`src/gui/elems/ge_sampleChannel.cpp

src/gui/elems/giada-ge_sampleChannel.obj: src/gui/elems/ge_sampleChannel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/elems/giada-ge_sampleChannel.obj -MD -MP -MF src/gui/elems/$(DEPDIR)/giada-ge_sampleChannel.Tpo -c -o src/gui/elems/giada-ge_sampleChannel.obj `if test -f 'src/gui/elems/ge_sampleChannel.cpp'; then $(CYGPATH_W) 'src/gui/elems/ge_sampleChannel.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/elems/ge_sampleChannel.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/elems/$(DEPDIR)/giada-ge_sampleChannel.Tpo src/gui/elems/$(DEPDIR)/giada-ge_sampleChannel.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/elems/ge_sampleChannel.cpp' object='src/gui/elems/giada-ge_sampleChannel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/elems/giada-ge_sampleChannel.obj `if test -f 'src/gui/elems/ge_sampleChannel.cpp'; then $(CYGPATH_W) 'src/gui/elems/ge_sampleChannel.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/elems/ge_sampleChannel.cpp'; fi`

src/gui/elems/giada-ge_midiChannel.o: src/gui/elems/ge_midiChannel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/elems/giada-ge_midiChannel.o -MD -MP -MF src/gui/elems/$(DEPDIR)/giada-ge_midiChannel.Tpo -c -o src/gui/elems/giada-ge_midiChannel.o `test -f 'src/gui/elems/ge_midiChannel.cpp' || echo '$(srcdir)/'`src/gui/elems/ge_midiChannel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/elems/$(DEPDIR)/giada-ge_midiChannel.Tpo src/gui/elems/$(DEPDIR)/giada-ge_midiChannel.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/elems/ge_midiChannel.cpp' object='src/gui/elems/giada-ge_midiChannel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/elems/giada-ge_midiChannel.o `test -f 'src/gui/elems/ge_midiChannel.cpp' || echo '$(srcdir)/'`src/gui/elems/ge_midiChannel.cpp

src/gui/elems/giada-ge_midiChannel.obj: src/gui/elems/ge_midiChannel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/elems/giada-ge_midiChannel.obj -MD -MP -MF src/gui/elems/$(DEPDIR)/giada-ge_midiChannel.Tpo -c -o src/gui/elems/giada-ge_midiChannel.obj `if test -f 'src/gui/elems/ge_midiChannel.cpp'; then $(CYGPATH_W) 'src/gui/elems/ge_midiChannel.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/elems/ge_midiChannel.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/elems/$(DEPDIR)/giada-ge_midiChannel.Tpo src/gui/elems/$(DEPDIR)/giada-ge_midiChannel.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/elems/ge_midiChannel.cpp' object='src/gui/elems/giada-ge_midiChannel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/elems/giada-ge_midiChannel.obj `if test -f 'src/gui/elems/ge_midiChannel.cpp'; then $(CYGPATH_W) 'src/gui/elems/ge_midiChannel.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/elems/ge_midiChannel.cpp'; fi`

src/gui/elems/giada-ge_midiIoTools.o: src/gui/elems/ge_midiIoTools.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/elems/giada-ge_midiIoTools.o -MD -MP -MF src/gui/elems/$(DEPDIR)/giada-ge_midiIoTools.Tpo -c -o src/gui/elems/giada-ge_midiIoTools.o `test -f 'src/gui/elems/ge_midiIoTools.cpp' || echo '$(srcdir)/'`src/gui/elems/ge_midiIoTools.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/elems/$(DEPDIR)/giada-ge_midiIoTools.Tpo src/gui/elems/$(DEPDIR)/giada-ge_midiIoTools.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/elems/ge_midiIoTools.cpp' object='src/gui/elems/giada-ge_midiIoTools.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/elems/giada-ge_midiIoTools.o `test -f 'src/gui/elems/ge_midiIoTools.cpp' || echo '$(srcdir)/'`src/gui/elems/ge_midiIoTools.cpp

src/gui/elems/giada-ge_midiIoTools.obj: src/gui/elems/ge_midiIoTools.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/elems/giada-ge_midiIoTools.obj -MD -MP -MF src/gui/elems/$(DEPDIR)/giada-ge_midiIoTools.Tpo -c -o src/gui/elems/giada-ge_midiIoTools.obj `if test -f 'src/gui/elems/ge_midiIoTools.cpp'; then $(CYGPATH_W) 'src/gui/elems/ge_midiIoTools.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/elems/ge_midiIoTools.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/elems/$(DEPDIR)/giada-ge_midiIoTools.Tpo src/gui/elems/$(DEPDIR)/giada-ge_midiIoTools.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/elems/ge_midiIoTools.cpp' object='src/gui/elems/giada-ge_midiIoTools.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/elems/giada-ge_midiIoTools.obj `if test -f 'src/gui/elems/ge_midiIoTools.cpp'; then $(CYGPATH_W) 'src/gui/elems/ge_midiIoTools.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/elems/ge_midiIoTools.cpp'; fi`

src/gui/elems/giada-ge_mixed.o: src/gui/elems/ge_mixed.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/elems/giada-ge_mixed.o -MD -MP -MF src/gui/elems/$(DEPDIR)/giada-ge_mixed.Tpo -c -o src/gui/elems/giada-ge_mixed.o `test -f 'src/gui/elems/ge_mixed.cpp' || echo '$(srcdir)/'`src/gui/elems/ge_mixed.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/elems/$(DEPDIR)/giada-ge_mixed.Tpo src/gui/elems/$(DEPDIR)/giada-ge_mixed.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/elems/ge_mixed.cpp' object='src/gui/elems/giada-ge_mixed.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/elems/giada-ge_mixed.o `test -f 'src/gui/elems/ge_mixed.cpp' || echo '$(srcdir)/'`src/gui/elems/ge_mixed.cpp

src/gui/elems/giada-ge_mixed.obj: src/gui/elems/ge_mixed.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/elems/giada-ge_mixed.obj -MD -MP -MF src/gui/elems/$(DEPDIR)/giada-ge_mixed.Tpo -c -o src/gui/elems/giada-ge_mixed.obj `if test -f 'src/gui/elems/ge_mixed.cpp'; then $(CYGPATH_W) 'src/gui/elems/ge_mixed.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/elems/ge_mixed.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/elems/$(DEPDIR)/giada-ge_mixed.Tpo src/gui/elems/$(DEPDIR)/giada-ge_mixed.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/elems/ge_mixed.cpp' object='src/gui/elems/giada-ge_mixed.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/elems/giada-ge_mixed.obj `if test -f 'src/gui/elems/ge_mixed.cpp'; then $(CYGPATH_W) 'src/gui/elems/ge_mixed.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/elems/ge_mixed.cpp'; fi`

src/gui/elems/giada-ge_waveform.o: src/gui/elems/ge_waveform.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/elems/giada-ge_waveform.o -MD -MP -MF src/gui/elems/$(DEPDIR)/giada-ge_waveform.Tpo -c -o src/gui/elems/giada-ge_waveform.o `test -f 'src/gui/elems/ge_waveform.cpp' || echo '$(srcdir)/'`src/gui/elems/ge_waveform.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/elems/$(DEPDIR)/giada-ge_waveform.Tpo src/gui/elems/$(DEPDIR)/giada-ge_waveform.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/elems/ge_waveform.cpp' object='src/gui/elems/giada-ge_waveform.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/elems/giada-ge_waveform.o `test -f 'src/gui/elems/ge_waveform.cpp' || echo '$(srcdir)/'`src/gui/elems/ge_waveform.cpp

src/gui/elems/giada-ge_waveform.obj: src/gui/elems/ge_waveform.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/elems/giada-ge_waveform.obj -MD -MP -MF src/gui/elems/$(DEPDIR)/giada-ge_waveform.Tpo -c -o src/gui/elems/giada-ge_waveform.obj `if test -f 'src/gui/elems/ge_waveform.cpp'; then $(CYGPATH_W) 'src/gui/elems/ge_waveform.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/elems/ge_waveform.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/elems/$(DEPDIR)/giada-ge_waveform.Tpo src/gui/elems/$(DEPDIR)/giada-ge_waveform.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/elems/ge_waveform.cpp' object='src/gui/elems/giada-ge_waveform.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/elems/giada-ge_waveform.obj `if test -f 'src/gui/elems/ge_waveform.cpp'; then $(CYGPATH_W) 'src/gui/elems/ge_waveform.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/elems/ge_waveform.cpp'; fi`

src/gui/elems/giada-ge_browser.o: src/gui/elems/ge_browser.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/elems/giada-ge_browser.o -MD -MP -MF src/gui/elems/$(DEPDIR)/giada-ge_browser.Tpo -c -o src/gui/elems/giada-ge_browser.o `test -f 'src/gui/elems/ge_browser.cpp' || echo '$(srcdir)/'`src/gui/elems/ge_browser.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/elems/$(DEPDIR)/giada-ge_browser.Tpo src/gui/elems/$(DEPDIR)/giada-ge_browser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/elems/ge_browser.cpp' object='src/gui/elems/giada-ge_browser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/elems/giada-ge_browser.o `test -f 'src/gui/elems/ge_browser.cpp' || echo '$(srcdir)/'`src/gui/elems/ge_browser.cpp

src/gui/elems/giada-ge_browser.obj: src/gui/elems/ge_browser.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/elems/giada-ge_browser.obj -MD -MP -MF src/gui/elems/$(DEPDIR)/giada-ge_browser.Tpo -c -o src/gui/elems/giada-ge_browser.obj `if test -f 'src/gui/elems/ge_browser.cpp'; then $(CYGPATH_W) 'src/gui/elems/ge_browser.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/elems/ge_browser.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/elems/$(DEPDIR)/giada-ge_browser.Tpo src/gui/elems/$(DEPDIR)/giada-ge_browser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/elems/ge_browser.cpp' object='src/gui/elems/giada-ge_browser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/elems/giada-ge_browser.obj `if test -f 'src/gui/elems/ge_browser.cpp'; then $(CYGPATH_W) 'src/gui/elems/ge_browser.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/elems/ge_browser.cpp'; fi`

src/gui/elems/giada-ge_actionWidget.o: src/gui/elems/ge_actionWidget.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/elems/giada-ge_actionWidget.o -MD -MP -MF src/gui/elems/$(DEPDIR)/giada-ge_actionWidget.Tpo -c -o src/gui/elems/giada-ge_actionWidget.o `test -f 'src/gui/elems/ge_actionWidget.cpp' || echo '$(srcdir)/'`src/gui/elems/ge_actionWidget.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/elems/$(DEPDIR)/giada-ge_actionWidget.Tpo src/gui/elems/$(DEPDIR)/giada-ge_actionWidget.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/elems/ge_actionWidget.cpp' object='src/gui/elems/giada-ge_actionWidget.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/elems/giada-ge_actionWidget.o `test -f 'src/gui/elems/ge_actionWidget.cpp' || echo '$(srcdir)/'`src/gui/elems/ge_actionWidget.cpp

src/gui/elems/giada-ge_actionWidget.obj: src/gui/elems/ge_actionWidget.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/elems/giada-ge_actionWidget.obj -MD -MP -MF src/gui/elems/$(DEPDIR)/giada-ge_actionWidget.Tpo -c -o src/gui/elems/giada-ge_actionWidget.obj `if test -f 'src/gui/elems/ge_actionWidget.cpp'; then $(CYGPATH_W) 'src/gui/elems/ge_actionWidget.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/elems/ge_actionWidget.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/elems/$(DEPDIR)/giada-ge_actionWidget.Tpo src/gui/elems/$(DEPDIR)/giada-ge_actionWidget.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/elems/ge_actionWidget.cpp' object='src/gui/elems/giada-ge_actionWidget.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/elems/giada-ge_actionWidget.obj `if test -f 'src/gui/elems/ge_actionWidget.cpp'; then $(CYGPATH_W) 'src/gui/elems/ge_actionWidget.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/elems/ge_actionWidget.cpp'; fi`

src/gui/elems/giada-ge_envelopeChannel.o: src/gui/elems/ge_envelopeChannel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/elems/giada-ge_envelopeChannel.o -MD -MP -MF src/gui/elems/$(DEPDIR)/giada-ge_envelopeChannel.Tpo -c -o src/gui/elems/giada-ge_envelopeChannel.o `test -f 'src/gui/elems/ge_envelopeChannel.cpp' || echo '$(srcdir)/'`src/gui/elems/ge_envelopeChannel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/elems/$(DEPDIR)/giada-ge_envelopeChannel.Tpo src/gui/elems/$(DEPDIR)/giada-ge_envelopeChannel.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/elems/ge_envelopeChannel.cpp' object='src/gui/elems/giada-ge_envelopeChannel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/elems/giada-ge_envelopeChannel.o `test -f 'src/gui/elems/ge_envelopeChannel.cpp' || echo '$(srcdir)/'`src/gui/elems/ge_envelopeChannel.cpp

src/gui/elems/giada-ge_envelopeChannel.obj: src/gui/elems/ge_envelopeChannel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/elems/giada-ge_envelopeChannel.obj -MD -MP -MF src/gui/elems/$(DEPDIR)/giada-ge_envelopeChannel.Tpo -c -o src/gui/elems/giada-ge_envelopeChannel.obj `if test -f 'src/gui/elems/ge_envelopeChannel.cpp'; then $(CYGPATH_W) 'src/gui/elems/ge_envelopeChannel.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/elems/ge_envelopeChannel.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/elems/$(DEPDIR)/giada-ge_envelopeChannel.Tpo src/gui/elems/$(DEPDIR)/giada-ge_envelopeChannel.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/elems/ge_envelopeChannel.cpp' object='src/gui/elems/giada-ge_envelopeChannel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/elems/giada-ge_envelopeChannel.obj `if test -f 'src/gui/elems/ge_envelopeChannel.cpp'; then $(CYGPATH_W) 'src/gui/elems/ge_envelopeChannel.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/elems/ge_envelopeChannel.cpp'; fi`

src/gui/elems/giada-ge_pianoRoll.o: src/gui/elems/ge_pianoRoll.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/elems/giada-ge_pianoRoll.o -MD -MP -MF src/gui/elems/$(DEPDIR)/giada-ge_pianoRoll.Tpo -c -o src/gui/elems/giada-ge_pianoRoll.o `test -f 'src/gui/elems/ge_pianoRoll.cpp' || echo '$(srcdir)/'`src/gui/elems/ge_pianoRoll.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/elems/$(DEPDIR)/giada-ge_pianoRoll.Tpo src/gui/elems/$(DEPDIR)/giada-ge_pianoRoll.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/elems/ge_pianoRoll.cpp' object='src/gui/elems/giada-ge_pianoRoll.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/elems/giada-ge_pianoRoll.o `test -f 'src/gui/elems/ge_pianoRoll.cpp' || echo '$(srcdir)/'`src/gui/elems/ge_pianoRoll.cpp

src/gui/elems/giada-ge_pianoRoll.obj: src/gui/elems/ge_pianoRoll.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/elems/giada-ge_pianoRoll.obj -MD -MP -MF src/gui/elems/$(DEPDIR)/giada-ge_pianoRoll.Tpo -c -o src/gui/elems/giada-ge_pianoRoll.obj `if test -f 'src/gui/elems/ge_pianoRoll.cpp'; then $(CYGPATH_W) 'src/gui/elems/ge_pianoRoll.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/elems/ge_pianoRoll.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/elems/$(DEPDIR)/giada-ge_pianoRoll.Tpo src/gui/elems/$(DEPDIR)/giada-ge_pianoRoll.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/elems/ge_pianoRoll.cpp' object='src/gui/elems/giada-ge_pianoRoll.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/elems/giada-ge_pianoRoll.obj `if test -f 'src/gui/elems/ge_pianoRoll.cpp'; then $(CYGPATH_W) 'src/gui/elems/ge_pianoRoll.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/elems/ge_pianoRoll.cpp'; fi`

src/gui/elems/giada-ge_channel.o: src/gui/elems/ge_channel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/elems/giada-ge_channel.o -MD -MP -MF src/gui/elems/$(DEPDIR)/giada-ge_channel.Tpo -c -o src/gui/elems/giada-ge_channel.o `test -f 'src/gui/elems/ge_channel.cpp' || echo '$(srcdir)/'`src/gui/elems/ge_channel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/elems/$(DEPDIR)/giada-ge_channel.Tpo src/gui/elems/$(DEPDIR)/giada-ge_channel.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/elems/ge_channel.cpp' object='src/gui/elems/giada-ge_channel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/elems/giada-ge_channel.o `test -f 'src/gui/elems/ge_channel.cpp' || echo '$(srcdir)/'`src/gui/elems/ge_channel.cpp

src/gui/elems/giada-ge_channel.obj: src/gui/elems/ge_channel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/elems/giada-ge_channel.obj -MD -MP -MF src/gui/elems/$(DEPDIR)/giada-ge_channel.Tpo -c -o src/gui/elems/giada-ge_channel.obj `if test -f 'src/gui/elems/ge_channel.cpp'; then $(CYGPATH_W) 'src/gui/elems/ge_channel.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/elems/ge_channel.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/elems/$(DEPDIR)/giada-ge_channel.Tpo src/gui/elems/$(DEPDIR)/giada-ge_channel.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/elems/ge_channel.cpp' object='src/gui/elems/giada-ge_channel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/elems/giada-ge_channel.obj `if test -f 'src/gui/elems/ge_channel.cpp'; then $(CYGPATH_W) 'src/gui/elems/ge_channel.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/elems/ge_channel.cpp'; fi`

src/gui/elems/giada-ge_muteChannel.o: src/gui/elems/ge_muteChannel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/elems/giada-ge_muteChannel.o -MD -MP -MF src/gui/elems/$(DEPDIR)/giada-ge_muteChannel.Tpo -c -o src/gui/elems/giada-ge_muteChannel.o `test -f 'src/gui/elems/ge_muteChannel.cpp' || echo '$(srcdir)/'`src/gui/elems/ge_muteChannel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/elems/$(DEPDIR)/giada-ge_muteChannel.Tpo src/gui/elems/$(DEPDIR)/giada-ge_muteChannel.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/elems/ge_muteChannel.cpp' object='src/gui/elems/giada-ge_muteChannel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/elems/giada-ge_muteChannel.o `test -f 'src/gui/elems/ge_muteChannel.cpp' || echo '$(srcdir)/'`src/gui/elems/ge_muteChannel.cpp

src/gui/elems/giada-ge_muteChannel.obj: src/gui/elems/ge_muteChannel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/elems/giada-ge_muteChannel.obj -MD -MP -MF src/gui/elems/$(DEPDIR)/giada-ge_muteChannel.Tpo -c -o src/gui/elems/giada-ge_muteChannel.obj `if test -f 'src/gui/elems/ge_muteChannel.cpp'; then $(CYGPATH_W) 'src/gui/elems/ge_muteChannel.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/elems/ge_muteChannel.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/elems/$(DEPDIR)/giada-ge_muteChannel.Tpo src/gui/elems/$(DEPDIR)/giada-ge_muteChannel.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/elems/ge_muteChannel.cpp' object='src/gui/elems/giada-ge_muteChannel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/elems/giada-ge_muteChannel.obj `if test -f 'src/gui/elems/ge_muteChannel.cpp'; then $(CYGPATH_W) 'src/gui/elems/ge_muteChannel.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/elems/ge_muteChannel.cpp'; fi`

src/gui/elems/giada-ge_actionChannel.o: src/gui/elems/ge_actionChannel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/elems/giada-ge_actionChannel.o -MD -MP -MF src/gui/elems/$(DEPDIR)/giada-ge_actionChannel.Tpo -c -o src/gui/elems/giada-ge_actionChannel.o `test -f 'src/gui/elems/ge_actionChannel.cpp' || echo '$(srcdir)/'`src/gui/elems/ge_actionChannel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/elems/$(DEPDIR)/giada-ge_actionChannel.Tpo src/gui/elems/$(DEPDIR)/giada-ge_actionChannel.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/elems/ge_actionChannel.cpp' object='src/gui/elems/giada-ge_actionChannel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/elems/giada-ge_actionChannel.o `test -f 'src/gui/elems/ge_actionChannel.cpp' || echo '$(srcdir)/'`src/gui/elems/ge_actionChannel.cpp

src/gui/elems/giada-ge_actionChannel.obj: src/gui/elems/ge_actionChannel.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/elems/giada-ge_actionChannel.obj -MD -MP -MF src/gui/elems/$(DEPDIR)/giada-ge_actionChannel.Tpo -c -o src/gui/elems/giada-ge_actionChannel.obj `if test -f 'src/gui/elems/ge_actionChannel.cpp'; then $(CYGPATH_W) 'src/gui/elems/ge_actionChannel.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/elems/ge_actionChannel.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/elems/$(DEPDIR)/giada-ge_actionChannel.Tpo src/gui/elems/$(DEPDIR)/giada-ge_actionChannel.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/elems/ge_actionChannel.cpp' object='src/gui/elems/giada-ge_actionChannel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/elems/giada-ge_actionChannel.obj `if test -f 'src/gui/elems/ge_actionChannel.cpp'; then $(CYGPATH_W) 'src/gui/elems/ge_actionChannel.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/elems/ge_actionChannel.cpp'; fi`

src/gui/elems/giada-ge_window.o: src/gui/elems/ge_window.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/elems/giada-ge_window.o -MD -MP -MF src/gui/elems/$(DEPDIR)/giada-ge_window.Tpo -c -o src/gui/elems/giada-ge_window.o `test -f 'src/gui/elems/ge_window.cpp' || echo '$(srcdir)/'`src/gui/elems/ge_window.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/elems/$(DEPDIR)/giada-ge_window.Tpo src/gui/elems/$(DEPDIR)/giada-ge_window.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/elems/ge_window.cpp' object='src/gui/elems/giada-ge_window.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/elems/giada-ge_window.o `test -f 'src/gui/elems/ge_window.cpp' || echo '$(srcdir)/'`src/gui/elems/ge_window.cpp

src/gui/elems/giada-ge_window.obj: src/gui/elems/ge_window.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/elems/giada-ge_window.obj -MD -MP -MF src/gui/elems/$(DEPDIR)/giada-ge_window.Tpo -c -o src/gui/elems/giada-ge_window.obj `if test -f 'src/gui/elems/ge_window.cpp'; then $(CYGPATH_W) 'src/gui/elems/ge_window.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/elems/ge_window.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/elems/$(DEPDIR)/giada-ge_window.Tpo src/gui/elems/$(DEPDIR)/giada-ge_window.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/elems/ge_window.cpp' object='src/gui/elems/giada-ge_window.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/elems/giada-ge_window.obj `if test -f 'src/gui/elems/ge_window.cpp'; then $(CYGPATH_W) 'src/gui/elems/ge_window.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/elems/ge_window.cpp'; fi`

src/gui/elems/giada-ge_status.o: src/gui/elems/ge_status.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/elems/giada-ge_status.o -MD -MP -MF src/gui/elems/$(DEPDIR)/giada-ge_status.Tpo -c -o src/gui/elems/giada-ge_status.o `test -f 'src/gui/elems/ge_status.cpp' || echo '$(srcdir)/'`src/gui/elems/ge_status.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/elems/$(DEPDIR)/giada-ge_status.Tpo src/gui/elems/$(DEPDIR)/giada-ge_status.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/elems/ge_status.cpp' object='src/gui/elems/giada-ge_status.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/elems/giada-ge_status.o `test -f 'src/gui/elems/ge_status.cpp' || echo '$(srcdir)/'`src/gui/elems/ge_status.cpp

src/gui/elems/giada-ge_status.obj: src/gui/elems/ge_status.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/elems/giada-ge_status.obj -MD -MP -MF src/gui/elems/$(DEPDIR)/giada-ge_status.Tpo -c -o src/gui/elems/giada-ge_status.obj `if test -f 'src/gui/elems/ge_status.cpp'; then $(CYGPATH_W) 'src/gui/elems/ge_status.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/elems/ge_status.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/elems/$(DEPDIR)/giada-ge_status.Tpo src/gui/elems/$(DEPDIR)/giada-ge_status.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/elems/ge_status.cpp' object='src/gui/elems/giada-ge_status.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/elems/giada-ge_status.obj `if test -f 'src/gui/elems/ge_status.cpp'; then $(CYGPATH_W) 'src/gui/elems/ge_status.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/elems/ge_status.cpp'; fi`

src/gui/elems/giada-ge_keyboard.o: src/gui/elems/ge_keyboard.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/elems/giada-ge_keyboard.o -MD -MP -MF src/gui/elems/$(DEPDIR)/giada-ge_keyboard.Tpo -c -o src/gui/elems/giada-ge_keyboard.o `test -f 'src/gui/elems/ge_keyboard.cpp' || echo '$(srcdir)/'`src/gui/elems/ge_keyboard.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/elems/$(DEPDIR)/giada-ge_keyboard.Tpo src/gui/elems/$(DEPDIR)/giada-ge_keyboard.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/elems/ge_keyboard.cpp' object='src/gui/elems/giada-ge_keyboard.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/elems/giada-ge_keyboard.o `test -f 'src/gui/elems/ge_keyboard.cpp' || echo '$(srcdir)/'`src/gui/elems/ge_keyboard.cpp

src/gui/elems/giada-ge_keyboard.obj: src/gui/elems/ge_keyboard.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/elems/giada-ge_keyboard.obj -MD -MP -MF src/gui/elems/$(DEPDIR)/giada-ge_keyboard.Tpo -c -o src/gui/elems/giada-ge_keyboard.obj `if test -f 'src/gui/elems/ge_keyboard.cpp'; then $(CYGPATH_W) 'src/gui/elems/ge_keyboard.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/elems/ge_keyboard.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/elems/$(DEPDIR)/giada-ge_keyboard.Tpo src/gui/elems/$(DEPDIR)/giada-ge_keyboard.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/elems/ge_keyboard.cpp' object='src/gui/elems/giada-ge_keyboard.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/elems/giada-ge_keyboard.obj `if test -f 'src/gui/elems/ge_keyboard.cpp'; then $(CYGPATH_W) 'src/gui/elems/ge_keyboard.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/elems/ge_keyboard.cpp'; fi`

src/gui/elems/giada-ge_waveTools.o: src/gui/elems/ge_waveTools.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/elems/giada-ge_waveTools.o -MD -MP -MF src/gui/elems/$(DEPDIR)/giada-ge_waveTools.Tpo -c -o src/gui/elems/giada-ge_waveTools.o `test -f 'src/gui/elems/ge_waveTools.cpp' || echo '$(srcdir)/'`src/gui/elems/ge_waveTools.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/elems/$(DEPDIR)/giada-ge_waveTools.Tpo src/gui/elems/$(DEPDIR)/giada-ge_waveTools.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/elems/ge_waveTools.cpp' object='src/gui/elems/giada-ge_waveTools.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/elems/giada-ge_waveTools.o `test -f 'src/gui/elems/ge_waveTools.cpp' || echo '$(srcdir)/'`src/gui/elems/ge_waveTools.cpp

src/gui/elems/giada-ge_waveTools.obj: src/gui/elems/ge_waveTools.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/elems/giada-ge_waveTools.obj -MD -MP -MF src/gui/elems/$(DEPDIR)/giada-ge_waveTools.Tpo -c -o src/gui/elems/giada-ge_waveTools.obj `if test -f 'src/gui/elems/ge_waveTools.cpp'; then $(CYGPATH_W) 'src/gui/elems/ge_waveTools.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/elems/ge_waveTools.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/elems/$(DEPDIR)/giada-ge_waveTools.Tpo src/gui/elems/$(DEPDIR)/giada-ge_waveTools.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/elems/ge_waveTools.cpp' object='src/gui/elems/giada-ge_waveTools.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/elems/giada-ge_waveTools.obj `if test -f 'src/gui/elems/ge_waveTools.cpp'; then $(CYGPATH_W) 'src/gui/elems/ge_waveTools.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/elems/ge_waveTools.cpp'; fi`

src/gui/elems/giada-ge_modeBox.o: src/gui/elems/ge_modeBox.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/elems/giada-ge_modeBox.o -MD -MP -MF src/gui/elems/$(DEPDIR)/giada-ge_modeBox.Tpo -c -o src/gui/elems/giada-ge_modeBox.o `test -f 'src/gui/elems/ge_modeBox.cpp' || echo '$(srcdir)/'`src/gui/elems/ge_modeBox.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/elems/$(DEPDIR)/giada-ge_modeBox.Tpo src/gui/elems/$(DEPDIR)/giada-ge_modeBox.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/elems/ge_modeBox.cpp' object='src/gui/elems/giada-ge_modeBox.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/elems/giada-ge_modeBox.o `test -f 'src/gui/elems/ge_modeBox.cpp' || echo '$(srcdir)/'`src/gui/elems/ge_modeBox.cpp

src/gui/elems/giada-ge_modeBox.obj: src/gui/elems/ge_modeBox.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/elems/giada-ge_modeBox.obj -MD -MP -MF src/gui/elems/$(DEPDIR)/giada-ge_modeBox.Tpo -c -o src/gui/elems/giada-ge_modeBox.obj `if test -f 'src/gui/elems/ge_modeBox.cpp'; then $(CYGPATH_W) 'src/gui/elems/ge_modeBox.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/elems/ge_modeBox.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/elems/$(DEPDIR)/giada-ge_modeBox.Tpo src/gui/elems/$(DEPDIR)/giada-ge_modeBox.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/elems/ge_modeBox.cpp' object='src/gui/elems/giada-ge_modeBox.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/elems/giada-ge_modeBox.obj `if test -f 'src/gui/elems/ge_modeBox.cpp'; then $(CYGPATH_W) 'src/gui/elems/ge_modeBox.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/elems/ge_modeBox.cpp'; fi`

src/gui/elems/giada-ge_controller.o: src/gui/elems/ge_controller.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/elems/giada-ge_controller.o -MD -MP -MF src/gui/elems/$(DEPDIR)/giada-ge_controller.Tpo -c -o src/gui/elems/giada-ge_controller.o `test -f 'src/gui/elems/ge_controller.cpp' || echo '$(srcdir)/'`src/gui/elems/ge_controller.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/elems/$(DEPDIR)/giada-ge_controller.Tpo src/gui/elems/$(DEPDIR)/giada-ge_controller.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/elems/ge_controller.cpp' object='src/gui/elems/giada-ge_controller.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/elems/giada-ge_controller.o `test -f 'src/gui/elems/ge_controller.cpp' || echo '$(srcdir)/'`src/gui/elems/ge_controller.cpp

src/gui/elems/giada-ge_controller.obj: src/gui/elems/ge_controller.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/elems/giada-ge_controller.obj -MD -MP -MF src/gui/elems/$(DEPDIR)/giada-ge_controller.Tpo -c -o src/gui/elems/giada-ge_controller.obj `if test -f 'src/gui/elems/ge_controller.cpp'; then $(CYGPATH_W) 'src/gui/elems/ge_controller.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/elems/ge_controller.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/elems/$(DEPDIR)/giada-ge_controller.Tpo src/gui/elems/$(DEPDIR)/giada-ge_controller.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/elems/ge_controller.cpp' object='src/gui/elems/giada-ge_controller.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/elems/giada-ge_controller.obj `if test -f 'src/gui/elems/ge_controller.cpp'; then $(CYGPATH_W) 'src/gui/elems/ge_controller.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/elems/ge_controller.cpp'; fi`

src/gui/elems/giada-ge_channelButton.o: src/gui/elems/ge_channelButton.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/elems/giada-ge_channelButton.o -MD -MP -MF src/gui/elems/$(DEPDIR)/giada-ge_channelButton.Tpo -c -o src/gui/elems/giada-ge_channelButton.o `test -f 'src/gui/elems/ge_channelButton.cpp' || echo '$(srcdir)/'`src/gui/elems/ge_channelButton.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/elems/$(DEPDIR)/giada-ge_channelButton.Tpo src/gui/elems/$(DEPDIR)/giada-ge_channelButton.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/elems/ge_channelButton.cpp' object='src/gui/elems/giada-ge_channelButton.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/elems/giada-ge_channelButton.o `test -f 'src/gui/elems/ge_channelButton.cpp' || echo '$(srcdir)/'`src/gui/elems/ge_channelButton.cpp

src/gui/elems/giada-ge_channelButton.obj: src/gui/elems/ge_channelButton.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/elems/giada-ge_channelButton.obj -MD -MP -MF src/gui/elems/$(DEPDIR)/giada-ge_channelButton.Tpo -c -o src/gui/elems/giada-ge_channelButton.obj `if test -f 'src/gui/elems/ge_channelButton.cpp'; then $(CYGPATH_W) 'src/gui/elems/ge_channelButton.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/elems/ge_channelButton.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/elems/$(DEPDIR)/giada-ge_channelButton.Tpo src/gui/elems/$(DEPDIR)/giada-ge_channelButton.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/elems/ge_channelButton.cpp' object='src/gui/elems/giada-ge_channelButton.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/elems/giada-ge_channelButton.obj `if test -f 'src/gui/elems/ge_channelButton.cpp'; then $(CYGPATH_W) 'src/gui/elems/ge_channelButton.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/elems/ge_channelButton.cpp'; fi`

src/gui/elems/giada-ge_pluginBrowser.o: src/gui/elems/ge_pluginBrowser.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/elems/giada-ge_pluginBrowser.o -MD -MP -MF src/gui/elems/$(DEPDIR)/giada-ge_pluginBrowser.Tpo -c -o src/gui/elems/giada-ge_pluginBrowser.o `test -f 'src/gui/elems/ge_pluginBrowser.cpp' || echo '$(srcdir)/'`src/gui/elems/ge_pluginBrowser.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/elems/$(DEPDIR)/giada-ge_pluginBrowser.Tpo src/gui/elems/$(DEPDIR)/giada-ge_pluginBrowser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/elems/ge_pluginBrowser.cpp' object='src/gui/elems/giada-ge_pluginBrowser.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/elems/giada-ge_pluginBrowser.o `test -f 'src/gui/elems/ge_pluginBrowser.cpp' || echo '$(srcdir)/'`src/gui/elems/ge_pluginBrowser.cpp

src/gui/elems/giada-ge_pluginBrowser.obj: src/gui/elems/ge_pluginBrowser.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/gui/elems/giada-ge_pluginBrowser.obj -MD -MP -MF src/gui/elems/$(DEPDIR)/giada-ge_pluginBrowser.Tpo -c -o src/gui/elems/giada-ge_pluginBrowser.obj `if test -f 'src/gui/elems/ge_pluginBrowser.cpp'; then $(CYGPATH_W) 'src/gui/elems/ge_pluginBrowser.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/elems/ge_pluginBrowser.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/gui/elems/$(DEPDIR)/giada-ge_pluginBrowser.Tpo src/gui/elems/$(DEPDIR)/giada-ge_pluginBrowser.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/gui/elems/ge_pluginBrowser.cpp' object='src/gui/elems/giada-ge_pluginBrowser.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/gui/elems/giada-ge_pluginBrowser.obj `if test -f 'src/gui/elems/ge_pluginBrowser.cpp'; then $(CYGPATH_W) 'src/gui/elems/ge_pluginBrowser.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gui/elems/ge_pluginBrowser.cpp'; fi`

src/utils/giada-log.o: src/utils/log.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/utils/giada-log.o -MD -MP -MF src/utils/$(DEPDIR)/giada-log.Tpo -c -o src/utils/giada-log.o `test -f 'src/utils/log.cpp' || echo '$(srcdir)/'`src/utils/log.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/utils/$(DEPDIR)/giada-log.Tpo src/utils/$(DEPDIR)/giada-log.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/utils/log.cpp' object='src/utils/giada-log.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/utils/giada-log.o `test -f 'src/utils/log.cpp' || echo '$(srcdir)/'`src/utils/log.cpp

src/utils/giada-log.obj: src/utils/log.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/utils/giada-log.obj -MD -MP -MF src/utils/$(DEPDIR)/giada-log.Tpo -c -o src/utils/giada-log.obj `if test -f 'src/utils/log.cpp'; then $(CYGPATH_W) 'src/utils/log.cpp'; else $(CYGPATH_W) '$(srcdir)/src/utils/log.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/utils/$(DEPDIR)/giada-log.Tpo src/utils/$(DEPDIR)/giada-log.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/utils/log.cpp' object='src/utils/giada-log.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/utils/giada-log.obj `if test -f 'src/utils/log.cpp'; then $(CYGPATH_W) 'src/utils/log.cpp'; else $(CYGPATH_W) '$(srcdir)/src/utils/log.cpp'; fi`

src/utils/giada-gui_utils.o: src/utils/gui_utils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/utils/giada-gui_utils.o -MD -MP -MF src/utils/$(DEPDIR)/giada-gui_utils.Tpo -c -o src/utils/giada-gui_utils.o `test -f 'src/utils/gui_utils.cpp' || echo '$(srcdir)/'`src/utils/gui_utils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/utils/$(DEPDIR)/giada-gui_utils.Tpo src/utils/$(DEPDIR)/giada-gui_utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/utils/gui_utils.cpp' object='src/utils/giada-gui_utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/utils/giada-gui_utils.o `test -f 'src/utils/gui_utils.cpp' || echo '$(srcdir)/'`src/utils/gui_utils.cpp

src/utils/giada-gui_utils.obj: src/utils/gui_utils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/utils/giada-gui_utils.obj -MD -MP -MF src/utils/$(DEPDIR)/giada-gui_utils.Tpo -c -o src/utils/giada-gui_utils.obj `if test -f 'src/utils/gui_utils.cpp'; then $(CYGPATH_W) 'src/utils/gui_utils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/utils/gui_utils.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/utils/$(DEPDIR)/giada-gui_utils.Tpo src/utils/$(DEPDIR)/giada-gui_utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/utils/gui_utils.cpp' object='src/utils/giada-gui_utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/utils/giada-gui_utils.obj `if test -f 'src/utils/gui_utils.cpp'; then $(CYGPATH_W) 'src/utils/gui_utils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/utils/gui_utils.cpp'; fi`

src/utils/giada-utils.o: src/utils/utils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/utils/giada-utils.o -MD -MP -MF src/utils/$(DEPDIR)/giada-utils.Tpo -c -o src/utils/giada-utils.o `test -f 'src/utils/utils.cpp' || echo '$(srcdir)/'`src/utils/utils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/utils/$(DEPDIR)/giada-utils.Tpo src/utils/$(DEPDIR)/giada-utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/utils/utils.cpp' object='src/utils/giada-utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/utils/giada-utils.o `test -f 'src/utils/utils.cpp' || echo '$(srcdir)/'`src/utils/utils.cpp

src/utils/giada-utils.obj: src/utils/utils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/utils/giada-utils.obj -MD -MP -MF src/utils/$(DEPDIR)/giada-utils.Tpo -c -o src/utils/giada-utils.obj `if test -f 'src/utils/utils.cpp'; then $(CYGPATH_W) 'src/utils/utils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/utils/utils.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/utils/$(DEPDIR)/giada-utils.Tpo src/utils/$(DEPDIR)/giada-utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/utils/utils.cpp' object='src/utils/giada-utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/utils/giada-utils.obj `if test -f 'src/utils/utils.cpp'; then $(CYGPATH_W) 'src/utils/utils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/utils/utils.cpp'; fi`

src/deps/juce/juce_audio_basics/giada-juce_audio_basics.o: src/deps/juce/juce_audio_basics/juce_audio_basics.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/deps/juce/juce_audio_basics/giada-juce_audio_basics.o -MD -MP -MF src/deps/juce/juce_audio_basics/$(DEPDIR)/giada-juce_audio_basics.Tpo -c -o src/deps/juce/juce_audio_basics/giada-juce_audio_basics.o `test -f 'src/deps/juce/juce_audio_basics/juce_audio_basics.cpp' || echo '$(srcdir)/'`src/deps/juce/juce_audio_basics/juce_audio_basics.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/deps/juce/juce_audio_basics/$(DEPDIR)/giada-juce_audio_basics.Tpo src/deps/juce/juce_audio_basics/$(DEPDIR)/giada-juce_audio_basics.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/deps/juce/juce_audio_basics/juce_audio_basics.cpp' object='src/deps/juce/juce_audio_basics/giada-juce_audio_basics.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/deps/juce/juce_audio_basics/giada-juce_audio_basics.o `test -f 'src/deps/juce/juce_audio_basics/juce_audio_basics.cpp' || echo '$(srcdir)/'`src/deps/juce/juce_audio_basics/juce_audio_basics.cpp

src/deps/juce/juce_audio_basics/giada-juce_audio_basics.obj: src/deps/juce/juce_audio_basics/juce_audio_basics.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/deps/juce/juce_audio_basics/giada-juce_audio_basics.obj -MD -MP -MF src/deps/juce/juce_audio_basics/$(DEPDIR)/giada-juce_audio_basics.Tpo -c -o src/deps/juce/juce_audio_basics/giada-juce_audio_basics.obj `if test -f 'src/deps/juce/juce_audio_basics/juce_audio_basics.cpp'; then $(CYGPATH_W) 'src/deps/juce/juce_audio_basics/juce_audio_basics.cpp'; else $(CYGPATH_W) '$(srcdir)/src/deps/juce/juce_audio_basics/juce_audio_basics.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/deps/juce/juce_audio_basics/$(DEPDIR)/giada-juce_audio_basics.Tpo src/deps/juce/juce_audio_basics/$(DEPDIR)/giada-juce_audio_basics.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/deps/juce/juce_audio_basics/juce_audio_basics.cpp' object='src/deps/juce/juce_audio_basics/giada-juce_audio_basics.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/deps/juce/juce_audio_basics/giada-juce_audio_basics.obj `if test -f 'src/deps/juce/juce_audio_basics/juce_audio_basics.cpp'; then $(CYGPATH_W) 'src/deps/juce/juce_audio_basics/juce_audio_basics.cpp'; else $(CYGPATH_W) '$(srcdir)/src/deps/juce/juce_audio_basics/juce_audio_basics.cpp'; fi`

src/deps/juce/juce_audio_processors/giada-juce_audio_processors.o: src/deps/juce/juce_audio_processors/juce_audio_processors.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/deps/juce/juce_audio_processors/giada-juce_audio_processors.o -MD -MP -MF src/deps/juce/juce_audio_processors/$(DEPDIR)/giada-juce_audio_processors.Tpo -c -o src/deps/juce/juce_audio_processors/giada-juce_audio_processors.o `test -f 'src/deps/juce/juce_audio_processors/juce_audio_processors.cpp' || echo '$(srcdir)/'`src/deps/juce/juce_audio_processors/juce_audio_processors.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/deps/juce/juce_audio_processors/$(DEPDIR)/giada-juce_audio_processors.Tpo src/deps/juce/juce_audio_processors/$(DEPDIR)/giada-juce_audio_processors.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/deps/juce/juce_audio_processors/juce_audio_processors.cpp' object='src/deps/juce/juce_audio_processors/giada-juce_audio_processors.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/deps/juce/juce_audio_processors/giada-juce_audio_processors.o `test -f 'src/deps/juce/juce_audio_processors/juce_audio_processors.cpp' || echo '$(srcdir)/'`src/deps/juce/juce_audio_processors/juce_audio_processors.cpp

src/deps/juce/juce_audio_processors/giada-juce_audio_processors.obj: src/deps/juce/juce_audio_processors/juce_audio_processors.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/deps/juce/juce_audio_processors/giada-juce_audio_processors.obj -MD -MP -MF src/deps/juce/juce_audio_processors/$(DEPDIR)/giada-juce_audio_processors.Tpo -c -o src/deps/juce/juce_audio_processors/giada-juce_audio_processors.obj `if test -f 'src/deps/juce/juce_audio_processors/juce_audio_processors.cpp'; then $(CYGPATH_W) 'src/deps/juce/juce_audio_processors/juce_audio_processors.cpp'; else $(CYGPATH_W) '$(srcdir)/src/deps/juce/juce_audio_processors/juce_audio_processors.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/deps/juce/juce_audio_processors/$(DEPDIR)/giada-juce_audio_processors.Tpo src/deps/juce/juce_audio_processors/$(DEPDIR)/giada-juce_audio_processors.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/deps/juce/juce_audio_processors/juce_audio_processors.cpp' object='src/deps/juce/juce_audio_processors/giada-juce_audio_processors.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/deps/juce/juce_audio_processors/giada-juce_audio_processors.obj `if test -f 'src/deps/juce/juce_audio_processors/juce_audio_processors.cpp'; then $(CYGPATH_W) 'src/deps/juce/juce_audio_processors/juce_audio_processors.cpp'; else $(CYGPATH_W) '$(srcdir)/src/deps/juce/juce_audio_processors/juce_audio_processors.cpp'; fi`

src/deps/juce/juce_core/giada-juce_core.o: src/deps/juce/juce_core/juce_core.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/deps/juce/juce_core/giada-juce_core.o -MD -MP -MF src/deps/juce/juce_core/$(DEPDIR)/giada-juce_core.Tpo -c -o src/deps/juce/juce_core/giada-juce_core.o `test -f 'src/deps/juce/juce_core/juce_core.cpp' || echo '$(srcdir)/'`src/deps/juce/juce_core/juce_core.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/deps/juce/juce_core/$(DEPDIR)/giada-juce_core.Tpo src/deps/juce/juce_core/$(DEPDIR)/giada-juce_core.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/deps/juce/juce_core/juce_core.cpp' object='src/deps/juce/juce_core/giada-juce_core.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/deps/juce/juce_core/giada-juce_core.o `test -f 'src/deps/juce/juce_core/juce_core.cpp' || echo '$(srcdir)/'`src/deps/juce/juce_core/juce_core.cpp

src/deps/juce/juce_core/giada-juce_core.obj: src/deps/juce/juce_core/juce_core.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/deps/juce/juce_core/giada-juce_core.obj -MD -MP -MF src/deps/juce/juce_core/$(DEPDIR)/giada-juce_core.Tpo -c -o src/deps/juce/juce_core/giada-juce_core.obj `if test -f 'src/deps/juce/juce_core/juce_core.cpp'; then $(CYGPATH_W) 'src/deps/juce/juce_core/juce_core.cpp'; else $(CYGPATH_W) '$(srcdir)/src/deps/juce/juce_core/juce_core.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/deps/juce/juce_core/$(DEPDIR)/giada-juce_core.Tpo src/deps/juce/juce_core/$(DEPDIR)/giada-juce_core.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/deps/juce/juce_core/juce_core.cpp' object='src/deps/juce/juce_core/giada-juce_core.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/deps/juce/juce_core/giada-juce_core.obj `if test -f 'src/deps/juce/juce_core/juce_core.cpp'; then $(CYGPATH_W) 'src/deps/juce/juce_core/juce_core.cpp'; else $(CYGPATH_W) '$(srcdir)/src/deps/juce/juce_core/juce_core.cpp'; fi`

src/deps/juce/juce_data_structures/giada-juce_data_structures.o: src/deps/juce/juce_data_structures/juce_data_structures.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/deps/juce/juce_data_structures/giada-juce_data_structures.o -MD -MP -MF src/deps/juce/juce_data_structures/$(DEPDIR)/giada-juce_data_structures.Tpo -c -o src/deps/juce/juce_data_structures/giada-juce_data_structures.o `test -f 'src/deps/juce/juce_data_structures/juce_data_structures.cpp' || echo '$(srcdir)/'`src/deps/juce/juce_data_structures/juce_data_structures.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/deps/juce/juce_data_structures/$(DEPDIR)/giada-juce_data_structures.Tpo src/deps/juce/juce_data_structures/$(DEPDIR)/giada-juce_data_structures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/deps/juce/juce_data_structures/juce_data_structures.cpp' object='src/deps/juce/juce_data_structures/giada-juce_data_structures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/deps/juce/juce_data_structures/giada-juce_data_structures.o `test -f 'src/deps/juce/juce_data_structures/juce_data_structures.cpp' || echo '$(srcdir)/'`src/deps/juce/juce_data_structures/juce_data_structures.cpp

src/deps/juce/juce_data_structures/giada-juce_data_structures.obj: src/deps/juce/juce_data_structures/juce_data_structures.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/deps/juce/juce_data_structures/giada-juce_data_structures.obj -MD -MP -MF src/deps/juce/juce_data_structures/$(DEPDIR)/giada-juce_data_structures.Tpo -c -o src/deps/juce/juce_data_structures/giada-juce_data_structures.obj `if test -f 'src/deps/juce/juce_data_structures/juce_data_structures.cpp'; then $(CYGPATH_W) 'src/deps/juce/juce_data_structures/juce_data_structures.cpp'; else $(CYGPATH_W) '$(srcdir)/src/deps/juce/juce_data_structures/juce_data_structures.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/deps/juce/juce_data_structures/$(DEPDIR)/giada-juce_data_structures.Tpo src/deps/juce/juce_data_structures/$(DEPDIR)/giada-juce_data_structures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/deps/juce/juce_data_structures/juce_data_structures.cpp' object='src/deps/juce/juce_data_structures/giada-juce_data_structures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/deps/juce/juce_data_structures/giada-juce_data_structures.obj `if test -f 'src/deps/juce/juce_data_structures/juce_data_structures.cpp'; then $(CYGPATH_W) 'src/deps/juce/juce_data_structures/juce_data_structures.cpp'; else $(CYGPATH_W) '$(srcdir)/src/deps/juce/juce_data_structures/juce_data_structures.cpp'; fi`

src/deps/juce/juce_events/giada-juce_events.o: src/deps/juce/juce_events/juce_events.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/deps/juce/juce_events/giada-juce_events.o -MD -MP -MF src/deps/juce/juce_events/$(DEPDIR)/giada-juce_events.Tpo -c -o src/deps/juce/juce_events/giada-juce_events.o `test -f 'src/deps/juce/juce_events/juce_events.cpp' || echo '$(srcdir)/'`src/deps/juce/juce_events/juce_events.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/deps/juce/juce_events/$(DEPDIR)/giada-juce_events.Tpo src/deps/juce/juce_events/$(DEPDIR)/giada-juce_events.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/deps/juce/juce_events/juce_events.cpp' object='src/deps/juce/juce_events/giada-juce_events.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/deps/juce/juce_events/giada-juce_events.o `test -f 'src/deps/juce/juce_events/juce_events.cpp' || echo '$(srcdir)/'`src/deps/juce/juce_events/juce_events.cpp

src/deps/juce/juce_events/giada-juce_events.obj: src/deps/juce/juce_events/juce_events.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/deps/juce/juce_events/giada-juce_events.obj -MD -MP -MF src/deps/juce/juce_events/$(DEPDIR)/giada-juce_events.Tpo -c -o src/deps/juce/juce_events/giada-juce_events.obj `if test -f 'src/deps/juce/juce_events/juce_events.cpp'; then $(CYGPATH_W) 'src/deps/juce/juce_events/juce_events.cpp'; else $(CYGPATH_W) '$(srcdir)/src/deps/juce/juce_events/juce_events.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/deps/juce/juce_events/$(DEPDIR)/giada-juce_events.Tpo src/deps/juce/juce_events/$(DEPDIR)/giada-juce_events.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/deps/juce/juce_events/juce_events.cpp' object='src/deps/juce/juce_events/giada-juce_events.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/deps/juce/juce_events/giada-juce_events.obj `if test -f 'src/deps/juce/juce_events/juce_events.cpp'; then $(CYGPATH_W) 'src/deps/juce/juce_events/juce_events.cpp'; else $(CYGPATH_W) '$(srcdir)/src/deps/juce/juce_events/juce_events.cpp'; fi`

src/deps/juce/juce_graphics/giada-juce_graphics.o: src/deps/juce/juce_graphics/juce_graphics.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/deps/juce/juce_graphics/giada-juce_graphics.o -MD -MP -MF src/deps/juce/juce_graphics/$(DEPDIR)/giada-juce_graphics.Tpo -c -o src/deps/juce/juce_graphics/giada-juce_graphics.o `test -f 'src/deps/juce/juce_graphics/juce_graphics.cpp' || echo '$(srcdir)/'`src/deps/juce/juce_graphics/juce_graphics.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/deps/juce/juce_graphics/$(DEPDIR)/giada-juce_graphics.Tpo src/deps/juce/juce_graphics/$(DEPDIR)/giada-juce_graphics.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/deps/juce/juce_graphics/juce_graphics.cpp' object='src/deps/juce/juce_graphics/giada-juce_graphics.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/deps/juce/juce_graphics/giada-juce_graphics.o `test -f 'src/deps/juce/juce_graphics/juce_graphics.cpp' || echo '$(srcdir)/'`src/deps/juce/juce_graphics/juce_graphics.cpp

src/deps/juce/juce_graphics/giada-juce_graphics.obj: src/deps/juce/juce_graphics/juce_graphics.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/deps/juce/juce_graphics/giada-juce_graphics.obj -MD -MP -MF src/deps/juce/juce_graphics/$(DEPDIR)/giada-juce_graphics.Tpo -c -o src/deps/juce/juce_graphics/giada-juce_graphics.obj `if test -f 'src/deps/juce/juce_graphics/juce_graphics.cpp'; then $(CYGPATH_W) 'src/deps/juce/juce_graphics/juce_graphics.cpp'; else $(CYGPATH_W) '$(srcdir)/src/deps/juce/juce_graphics/juce_graphics.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/deps/juce/juce_graphics/$(DEPDIR)/giada-juce_graphics.Tpo src/deps/juce/juce_graphics/$(DEPDIR)/giada-juce_graphics.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/deps/juce/juce_graphics/juce_graphics.cpp' object='src/deps/juce/juce_graphics/giada-juce_graphics.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/deps/juce/juce_graphics/giada-juce_graphics.obj `if test -f 'src/deps/juce/juce_graphics/juce_graphics.cpp'; then $(CYGPATH_W) 'src/deps/juce/juce_graphics/juce_graphics.cpp'; else $(CYGPATH_W) '$(srcdir)/src/deps/juce/juce_graphics/juce_graphics.cpp'; fi`

src/deps/juce/juce_gui_basics/giada-juce_gui_basics.o: src/deps/juce/juce_gui_basics/juce_gui_basics.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/deps/juce/juce_gui_basics/giada-juce_gui_basics.o -MD -MP -MF src/deps/juce/juce_gui_basics/$(DEPDIR)/giada-juce_gui_basics.Tpo -c -o src/deps/juce/juce_gui_basics/giada-juce_gui_basics.o `test -f 'src/deps/juce/juce_gui_basics/juce_gui_basics.cpp' || echo '$(srcdir)/'`src/deps/juce/juce_gui_basics/juce_gui_basics.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/deps/juce/juce_gui_basics/$(DEPDIR)/giada-juce_gui_basics.Tpo src/deps/juce/juce_gui_basics/$(DEPDIR)/giada-juce_gui_basics.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/deps/juce/juce_gui_basics/juce_gui_basics.cpp' object='src/deps/juce/juce_gui_basics/giada-juce_gui_basics.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/deps/juce/juce_gui_basics/giada-juce_gui_basics.o `test -f 'src/deps/juce/juce_gui_basics/juce_gui_basics.cpp' || echo '$(srcdir)/'`src/deps/juce/juce_gui_basics/juce_gui_basics.cpp

src/deps/juce/juce_gui_basics/giada-juce_gui_basics.obj: src/deps/juce/juce_gui_basics/juce_gui_basics.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/deps/juce/juce_gui_basics/giada-juce_gui_basics.obj -MD -MP -MF src/deps/juce/juce_gui_basics/$(DEPDIR)/giada-juce_gui_basics.Tpo -c -o src/deps/juce/juce_gui_basics/giada-juce_gui_basics.obj `if test -f 'src/deps/juce/juce_gui_basics/juce_gui_basics.cpp'; then $(CYGPATH_W) 'src/deps/juce/juce_gui_basics/juce_gui_basics.cpp'; else $(CYGPATH_W) '$(srcdir)/src/deps/juce/juce_gui_basics/juce_gui_basics.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/deps/juce/juce_gui_basics/$(DEPDIR)/giada-juce_gui_basics.Tpo src/deps/juce/juce_gui_basics/$(DEPDIR)/giada-juce_gui_basics.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/deps/juce/juce_gui_basics/juce_gui_basics.cpp' object='src/deps/juce/juce_gui_basics/giada-juce_gui_basics.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/deps/juce/juce_gui_basics/giada-juce_gui_basics.obj `if test -f 'src/deps/juce/juce_gui_basics/juce_gui_basics.cpp'; then $(CYGPATH_W) 'src/deps/juce/juce_gui_basics/juce_gui_basics.cpp'; else $(CYGPATH_W) '$(srcdir)/src/deps/juce/juce_gui_basics/juce_gui_basics.cpp'; fi`

src/deps/juce/juce_gui_extra/giada-juce_gui_extra.o: src/deps/juce/juce_gui_extra/juce_gui_extra.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/deps/juce/juce_gui_extra/giada-juce_gui_extra.o -MD -MP -MF src/deps/juce/juce_gui_extra/$(DEPDIR)/giada-juce_gui_extra.Tpo -c -o src/deps/juce/juce_gui_extra/giada-juce_gui_extra.o `test -f 'src/deps/juce/juce_gui_extra/juce_gui_extra.cpp' || echo '$(srcdir)/'`src/deps/juce/juce_gui_extra/juce_gui_extra.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/deps/juce/juce_gui_extra/$(DEPDIR)/giada-juce_gui_extra.Tpo src/deps/juce/juce_gui_extra/$(DEPDIR)/giada-juce_gui_extra.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/deps/juce/juce_gui_extra/juce_gui_extra.cpp' object='src/deps/juce/juce_gui_extra/giada-juce_gui_extra.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/deps/juce/juce_gui_extra/giada-juce_gui_extra.o `test -f 'src/deps/juce/juce_gui_extra/juce_gui_extra.cpp' || echo '$(srcdir)/'`src/deps/juce/juce_gui_extra/juce_gui_extra.cpp

src/deps/juce/juce_gui_extra/giada-juce_gui_extra.obj: src/deps/juce/juce_gui_extra/juce_gui_extra.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -MT src/deps/juce/juce_gui_extra/giada-juce_gui_extra.obj -MD -MP -MF src/deps/juce/juce_gui_extra/$(DEPDIR)/giada-juce_gui_extra.Tpo -c -o src/deps/juce/juce_gui_extra/giada-juce_gui_extra.obj `if test -f 'src/deps/juce/juce_gui_extra/juce_gui_extra.cpp'; then $(CYGPATH_W) 'src/deps/juce/juce_gui_extra/juce_gui_extra.cpp'; else $(CYGPATH_W) '$(srcdir)/src/deps/juce/juce_gui_extra/juce_gui_extra.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/deps/juce/juce_gui_extra/$(DEPDIR)/giada-juce_gui_extra.Tpo src/deps/juce/juce_gui_extra/$(DEPDIR)/giada-juce_gui_extra.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/deps/juce/juce_gui_extra/juce_gui_extra.cpp' object='src/deps/juce/juce_gui_extra/giada-juce_gui_extra.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(giada_CXXFLAGS) $(CXXFLAGS) -c -o src/deps/juce/juce_gui_extra/giada-juce_gui_extra.obj `if test -f 'src/deps/juce/juce_gui_extra/juce_gui_extra.cpp'; then $(CYGPATH_W) 'src/deps/juce/juce_gui_extra/juce_gui_extra.cpp'; else $(CYGPATH_W) '$(srcdir)/src/deps/juce/juce_gui_extra/juce_gui_extra.cpp'; fi`

tests/giada_tests-main.o: tests/main.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT tests/giada_tests-main.o -MD -MP -MF tests/$(DEPDIR)/giada_tests-main.Tpo -c -o tests/giada_tests-main.o `test -f 'tests/main.cpp' || echo '$(srcdir)/'`tests/main.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/giada_tests-main.Tpo tests/$(DEPDIR)/giada_tests-main.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tests/main.cpp' object='tests/giada_tests-main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o tests/giada_tests-main.o `test -f 'tests/main.cpp' || echo '$(srcdir)/'`tests/main.cpp

tests/giada_tests-main.obj: tests/main.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT tests/giada_tests-main.obj -MD -MP -MF tests/$(DEPDIR)/giada_tests-main.Tpo -c -o tests/giada_tests-main.obj `if test -f 'tests/main.cpp'; then $(CYGPATH_W) 'tests/main.cpp'; else $(CYGPATH_W) '$(srcdir)/tests/main.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/giada_tests-main.Tpo tests/$(DEPDIR)/giada_tests-main.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tests/main.cpp' object='tests/giada_tests-main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o tests/giada_tests-main.obj `if test -f 'tests/main.cpp'; then $(CYGPATH_W) 'tests/main.cpp'; else $(CYGPATH_W) '$(srcdir)/tests/main.cpp'; fi`

tests/giada_tests-conf.o: tests/conf.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT tests/giada_tests-conf.o -MD -MP -MF tests/$(DEPDIR)/giada_tests-conf.Tpo -c -o tests/giada_tests-conf.o `test -f 'tests/conf.cpp' || echo '$(srcdir)/'`tests/conf.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/giada_tests-conf.Tpo tests/$(DEPDIR)/giada_tests-conf.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tests/conf.cpp' object='tests/giada_tests-conf.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o tests/giada_tests-conf.o `test -f 'tests/conf.cpp' || echo '$(srcdir)/'`tests/conf.cpp

tests/giada_tests-conf.obj: tests/conf.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT tests/giada_tests-conf.obj -MD -MP -MF tests/$(DEPDIR)/giada_tests-conf.Tpo -c -o tests/giada_tests-conf.obj `if test -f 'tests/conf.cpp'; then $(CYGPATH_W) 'tests/conf.cpp'; else $(CYGPATH_W) '$(srcdir)/tests/conf.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/giada_tests-conf.Tpo tests/$(DEPDIR)/giada_tests-conf.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tests/conf.cpp' object='tests/giada_tests-conf.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o tests/giada_tests-conf.obj `if test -f 'tests/conf.cpp'; then $(CYGPATH_W) 'tests/conf.cpp'; else $(CYGPATH_W) '$(srcdir)/tests/conf.cpp'; fi`

tests/giada_tests-wave.o: tests/wave.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT tests/giada_tests-wave.o -MD -MP -MF tests/$(DEPDIR)/giada_tests-wave.Tpo -c -o tests/giada_tests-wave.o `test -f 'tests/wave.cpp' || echo '$(srcdir)/'`tests/wave.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/giada_tests-wave.Tpo tests/$(DEPDIR)/giada_tests-wave.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tests/wave.cpp' object='tests/giada_tests-wave.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o tests/giada_tests-wave.o `test -f 'tests/wave.cpp' || echo '$(srcdir)/'`tests/wave.cpp

tests/giada_tests-wave.obj: tests/wave.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT tests/giada_tests-wave.obj -MD -MP -MF tests/$(DEPDIR)/giada_tests-wave.Tpo -c -o tests/giada_tests-wave.obj `if test -f 'tests/wave.cpp'; then $(CYGPATH_W) 'tests/wave.cpp'; else $(CYGPATH_W) '$(srcdir)/tests/wave.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/giada_tests-wave.Tpo tests/$(DEPDIR)/giada_tests-wave.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tests/wave.cpp' object='tests/giada_tests-wave.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o tests/giada_tests-wave.obj `if test -f 'tests/wave.cpp'; then $(CYGPATH_W) 'tests/wave.cpp'; else $(CYGPATH_W) '$(srcdir)/tests/wave.cpp'; fi`

tests/giada_tests-patch.o: tests/patch.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT tests/giada_tests-patch.o -MD -MP -MF tests/$(DEPDIR)/giada_tests-patch.Tpo -c -o tests/giada_tests-patch.o `test -f 'tests/patch.cpp' || echo '$(srcdir)/'`tests/patch.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/giada_tests-patch.Tpo tests/$(DEPDIR)/giada_tests-patch.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tests/patch.cpp' object='tests/giada_tests-patch.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o tests/giada_tests-patch.o `test -f 'tests/patch.cpp' || echo '$(srcdir)/'`tests/patch.cpp

tests/giada_tests-patch.obj: tests/patch.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT tests/giada_tests-patch.obj -MD -MP -MF tests/$(DEPDIR)/giada_tests-patch.Tpo -c -o tests/giada_tests-patch.obj `if test -f 'tests/patch.cpp'; then $(CYGPATH_W) 'tests/patch.cpp'; else $(CYGPATH_W) '$(srcdir)/tests/patch.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/giada_tests-patch.Tpo tests/$(DEPDIR)/giada_tests-patch.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tests/patch.cpp' object='tests/giada_tests-patch.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o tests/giada_tests-patch.obj `if test -f 'tests/patch.cpp'; then $(CYGPATH_W) 'tests/patch.cpp'; else $(CYGPATH_W) '$(srcdir)/tests/patch.cpp'; fi`

tests/giada_tests-midiMapConf.o: tests/midiMapConf.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT tests/giada_tests-midiMapConf.o -MD -MP -MF tests/$(DEPDIR)/giada_tests-midiMapConf.Tpo -c -o tests/giada_tests-midiMapConf.o `test -f 'tests/midiMapConf.cpp' || echo '$(srcdir)/'`tests/midiMapConf.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/giada_tests-midiMapConf.Tpo tests/$(DEPDIR)/giada_tests-midiMapConf.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tests/midiMapConf.cpp' object='tests/giada_tests-midiMapConf.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o tests/giada_tests-midiMapConf.o `test -f 'tests/midiMapConf.cpp' || echo '$(srcdir)/'`tests/midiMapConf.cpp

tests/giada_tests-midiMapConf.obj: tests/midiMapConf.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT tests/giada_tests-midiMapConf.obj -MD -MP -MF tests/$(DEPDIR)/giada_tests-midiMapConf.Tpo -c -o tests/giada_tests-midiMapConf.obj `if test -f 'tests/midiMapConf.cpp'; then $(CYGPATH_W) 'tests/midiMapConf.cpp'; else $(CYGPATH_W) '$(srcdir)/tests/midiMapConf.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/giada_tests-midiMapConf.Tpo tests/$(DEPDIR)/giada_tests-midiMapConf.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tests/midiMapConf.cpp' object='tests/giada_tests-midiMapConf.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o tests/giada_tests-midiMapConf.obj `if test -f 'tests/midiMapConf.cpp'; then $(CYGPATH_W) 'tests/midiMapConf.cpp'; else $(CYGPATH_W) '$(srcdir)/tests/midiMapConf.cpp'; fi`

tests/giada_tests-pluginHost.o: tests/pluginHost.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT tests/giada_tests-pluginHost.o -MD -MP -MF tests/$(DEPDIR)/giada_tests-pluginHost.Tpo -c -o tests/giada_tests-pluginHost.o `test -f 'tests/pluginHost.cpp' || echo '$(srcdir)/'`tests/pluginHost.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/giada_tests-pluginHost.Tpo tests/$(DEPDIR)/giada_tests-pluginHost.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tests/pluginHost.cpp' object='tests/giada_tests-pluginHost.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o tests/giada_tests-pluginHost.o `test -f 'tests/pluginHost.cpp' || echo '$(srcdir)/'`tests/pluginHost.cpp

tests/giada_tests-pluginHost.obj: tests/pluginHost.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT tests/giada_tests-pluginHost.obj -MD -MP -MF tests/$(DEPDIR)/giada_tests-pluginHost.Tpo -c -o tests/giada_tests-pluginHost.obj `if test -f 'tests/pluginHost.cpp'; then $(CYGPATH_W) 'tests/pluginHost.cpp'; else $(CYGPATH_W) '$(srcdir)/tests/pluginHost.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/giada_tests-pluginHost.Tpo tests/$(DEPDIR)/giada_tests-pluginHost.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tests/pluginHost.cpp' object='tests/giada_tests-pluginHost.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o tests/giada_tests-pluginHost.obj `if test -f 'tests/pluginHost.cpp'; then $(CYGPATH_W) 'tests/pluginHost.cpp'; else $(CYGPATH_W) '$(srcdir)/tests/pluginHost.cpp'; fi`

tests/giada_tests-utils.o: tests/utils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT tests/giada_tests-utils.o -MD -MP -MF tests/$(DEPDIR)/giada_tests-utils.Tpo -c -o tests/giada_tests-utils.o `test -f 'tests/utils.cpp' || echo '$(srcdir)/'`tests/utils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/giada_tests-utils.Tpo tests/$(DEPDIR)/giada_tests-utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tests/utils.cpp' object='tests/giada_tests-utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o tests/giada_tests-utils.o `test -f 'tests/utils.cpp' || echo '$(srcdir)/'`tests/utils.cpp

tests/giada_tests-utils.obj: tests/utils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT tests/giada_tests-utils.obj -MD -MP -MF tests/$(DEPDIR)/giada_tests-utils.Tpo -c -o tests/giada_tests-utils.obj `if test -f 'tests/utils.cpp'; then $(CYGPATH_W) 'tests/utils.cpp'; else $(CYGPATH_W) '$(srcdir)/tests/utils.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) tests/$(DEPDIR)/giada_tests-utils.Tpo tests/$(DEPDIR)/giada_tests-utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tests/utils.cpp' object='tests/giada_tests-utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o tests/giada_tests-utils.obj `if test -f 'tests/utils.cpp'; then $(CYGPATH_W) 'tests/utils.cpp'; else $(CYGPATH_W) '$(srcdir)/tests/utils.cpp'; fi`

src/core/giada_tests-conf.o: src/core/conf.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada_tests-conf.o -MD -MP -MF src/core/$(DEPDIR)/giada_tests-conf.Tpo -c -o src/core/giada_tests-conf.o `test -f 'src/core/conf.cpp' || echo '$(srcdir)/'`src/core/conf.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada_tests-conf.Tpo src/core/$(DEPDIR)/giada_tests-conf.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/conf.cpp' object='src/core/giada_tests-conf.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada_tests-conf.o `test -f 'src/core/conf.cpp' || echo '$(srcdir)/'`src/core/conf.cpp

src/core/giada_tests-conf.obj: src/core/conf.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada_tests-conf.obj -MD -MP -MF src/core/$(DEPDIR)/giada_tests-conf.Tpo -c -o src/core/giada_tests-conf.obj `if test -f 'src/core/conf.cpp'; then $(CYGPATH_W) 'src/core/conf.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/conf.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada_tests-conf.Tpo src/core/$(DEPDIR)/giada_tests-conf.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/conf.cpp' object='src/core/giada_tests-conf.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada_tests-conf.obj `if test -f 'src/core/conf.cpp'; then $(CYGPATH_W) 'src/core/conf.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/conf.cpp'; fi`

src/core/giada_tests-wave.o: src/core/wave.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada_tests-wave.o -MD -MP -MF src/core/$(DEPDIR)/giada_tests-wave.Tpo -c -o src/core/giada_tests-wave.o `test -f 'src/core/wave.cpp' || echo '$(srcdir)/'`src/core/wave.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada_tests-wave.Tpo src/core/$(DEPDIR)/giada_tests-wave.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/wave.cpp' object='src/core/giada_tests-wave.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada_tests-wave.o `test -f 'src/core/wave.cpp' || echo '$(srcdir)/'`src/core/wave.cpp

src/core/giada_tests-wave.obj: src/core/wave.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada_tests-wave.obj -MD -MP -MF src/core/$(DEPDIR)/giada_tests-wave.Tpo -c -o src/core/giada_tests-wave.obj `if test -f 'src/core/wave.cpp'; then $(CYGPATH_W) 'src/core/wave.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/wave.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada_tests-wave.Tpo src/core/$(DEPDIR)/giada_tests-wave.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/wave.cpp' object='src/core/giada_tests-wave.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada_tests-wave.obj `if test -f 'src/core/wave.cpp'; then $(CYGPATH_W) 'src/core/wave.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/wave.cpp'; fi`

src/core/giada_tests-midiMapConf.o: src/core/midiMapConf.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada_tests-midiMapConf.o -MD -MP -MF src/core/$(DEPDIR)/giada_tests-midiMapConf.Tpo -c -o src/core/giada_tests-midiMapConf.o `test -f 'src/core/midiMapConf.cpp' || echo '$(srcdir)/'`src/core/midiMapConf.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada_tests-midiMapConf.Tpo src/core/$(DEPDIR)/giada_tests-midiMapConf.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/midiMapConf.cpp' object='src/core/giada_tests-midiMapConf.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada_tests-midiMapConf.o `test -f 'src/core/midiMapConf.cpp' || echo '$(srcdir)/'`src/core/midiMapConf.cpp

src/core/giada_tests-midiMapConf.obj: src/core/midiMapConf.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada_tests-midiMapConf.obj -MD -MP -MF src/core/$(DEPDIR)/giada_tests-midiMapConf.Tpo -c -o src/core/giada_tests-midiMapConf.obj `if test -f 'src/core/midiMapConf.cpp'; then $(CYGPATH_W) 'src/core/midiMapConf.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/midiMapConf.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada_tests-midiMapConf.Tpo src/core/$(DEPDIR)/giada_tests-midiMapConf.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/midiMapConf.cpp' object='src/core/giada_tests-midiMapConf.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada_tests-midiMapConf.obj `if test -f 'src/core/midiMapConf.cpp'; then $(CYGPATH_W) 'src/core/midiMapConf.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/midiMapConf.cpp'; fi`

src/core/giada_tests-patch.o: src/core/patch.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada_tests-patch.o -MD -MP -MF src/core/$(DEPDIR)/giada_tests-patch.Tpo -c -o src/core/giada_tests-patch.o `test -f 'src/core/patch.cpp' || echo '$(srcdir)/'`src/core/patch.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada_tests-patch.Tpo src/core/$(DEPDIR)/giada_tests-patch.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/patch.cpp' object='src/core/giada_tests-patch.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada_tests-patch.o `test -f 'src/core/patch.cpp' || echo '$(srcdir)/'`src/core/patch.cpp

src/core/giada_tests-patch.obj: src/core/patch.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada_tests-patch.obj -MD -MP -MF src/core/$(DEPDIR)/giada_tests-patch.Tpo -c -o src/core/giada_tests-patch.obj `if test -f 'src/core/patch.cpp'; then $(CYGPATH_W) 'src/core/patch.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/patch.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada_tests-patch.Tpo src/core/$(DEPDIR)/giada_tests-patch.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/patch.cpp' object='src/core/giada_tests-patch.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada_tests-patch.obj `if test -f 'src/core/patch.cpp'; then $(CYGPATH_W) 'src/core/patch.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/patch.cpp'; fi`

src/core/giada_tests-plugin.o: src/core/plugin.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada_tests-plugin.o -MD -MP -MF src/core/$(DEPDIR)/giada_tests-plugin.Tpo -c -o src/core/giada_tests-plugin.o `test -f 'src/core/plugin.cpp' || echo '$(srcdir)/'`src/core/plugin.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada_tests-plugin.Tpo src/core/$(DEPDIR)/giada_tests-plugin.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/plugin.cpp' object='src/core/giada_tests-plugin.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada_tests-plugin.o `test -f 'src/core/plugin.cpp' || echo '$(srcdir)/'`src/core/plugin.cpp

src/core/giada_tests-plugin.obj: src/core/plugin.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada_tests-plugin.obj -MD -MP -MF src/core/$(DEPDIR)/giada_tests-plugin.Tpo -c -o src/core/giada_tests-plugin.obj `if test -f 'src/core/plugin.cpp'; then $(CYGPATH_W) 'src/core/plugin.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/plugin.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada_tests-plugin.Tpo src/core/$(DEPDIR)/giada_tests-plugin.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/plugin.cpp' object='src/core/giada_tests-plugin.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada_tests-plugin.obj `if test -f 'src/core/plugin.cpp'; then $(CYGPATH_W) 'src/core/plugin.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/plugin.cpp'; fi`

src/core/giada_tests-dataStorageIni.o: src/core/dataStorageIni.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada_tests-dataStorageIni.o -MD -MP -MF src/core/$(DEPDIR)/giada_tests-dataStorageIni.Tpo -c -o src/core/giada_tests-dataStorageIni.o `test -f 'src/core/dataStorageIni.cpp' || echo '$(srcdir)/'`src/core/dataStorageIni.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada_tests-dataStorageIni.Tpo src/core/$(DEPDIR)/giada_tests-dataStorageIni.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/dataStorageIni.cpp' object='src/core/giada_tests-dataStorageIni.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada_tests-dataStorageIni.o `test -f 'src/core/dataStorageIni.cpp' || echo '$(srcdir)/'`src/core/dataStorageIni.cpp

src/core/giada_tests-dataStorageIni.obj: src/core/dataStorageIni.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada_tests-dataStorageIni.obj -MD -MP -MF src/core/$(DEPDIR)/giada_tests-dataStorageIni.Tpo -c -o src/core/giada_tests-dataStorageIni.obj `if test -f 'src/core/dataStorageIni.cpp'; then $(CYGPATH_W) 'src/core/dataStorageIni.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/dataStorageIni.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada_tests-dataStorageIni.Tpo src/core/$(DEPDIR)/giada_tests-dataStorageIni.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/dataStorageIni.cpp' object='src/core/giada_tests-dataStorageIni.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada_tests-dataStorageIni.obj `if test -f 'src/core/dataStorageIni.cpp'; then $(CYGPATH_W) 'src/core/dataStorageIni.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/dataStorageIni.cpp'; fi`

src/core/giada_tests-dataStorageJson.o: src/core/dataStorageJson.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada_tests-dataStorageJson.o -MD -MP -MF src/core/$(DEPDIR)/giada_tests-dataStorageJson.Tpo -c -o src/core/giada_tests-dataStorageJson.o `test -f 'src/core/dataStorageJson.cpp' || echo '$(srcdir)/'`src/core/dataStorageJson.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada_tests-dataStorageJson.Tpo src/core/$(DEPDIR)/giada_tests-dataStorageJson.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/dataStorageJson.cpp' object='src/core/giada_tests-dataStorageJson.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada_tests-dataStorageJson.o `test -f 'src/core/dataStorageJson.cpp' || echo '$(srcdir)/'`src/core/dataStorageJson.cpp

src/core/giada_tests-dataStorageJson.obj: src/core/dataStorageJson.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT src/core/giada_tests-dataStorageJson.obj -MD -MP -MF src/core/$(DEPDIR)/giada_tests-dataStorageJson.Tpo -c -o src/core/giada_tests-dataStorageJson.obj `if test -f 'src/core/dataStorageJson.cpp'; then $(CYGPATH_W) 'src/core/dataStorageJson.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/dataStorageJson.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/core/$(DEPDIR)/giada_tests-dataStorageJson.Tpo src/core/$(DEPDIR)/giada_tests-dataStorageJson.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/core/dataStorageJson.cpp' object='src/core/giada_tests-dataStorageJson.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o src/core/giada_tests-dataStorageJson.obj `if test -f 'src/core/dataStorageJson.cpp'; then $(CYGPATH_W) 'src/core/dataStorageJson.cpp'; else $(CYGPATH_W) '$(srcdir)/src/core/dataStorageJson.cpp'; fi`

src/utils/giada_tests-utils.o: src/utils/utils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT src/utils/giada_tests-utils.o -MD -MP -MF src/utils/$(DEPDIR)/giada_tests-utils.Tpo -c -o src/utils/giada_tests-utils.o `test -f 'src/utils/utils.cpp' || echo '$(srcdir)/'`src/utils/utils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/utils/$(DEPDIR)/giada_tests-utils.Tpo src/utils/$(DEPDIR)/giada_tests-utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/utils/utils.cpp' object='src/utils/giada_tests-utils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o src/utils/giada_tests-utils.o `test -f 'src/utils/utils.cpp' || echo '$(srcdir)/'`src/utils/utils.cpp

src/utils/giada_tests-utils.obj: src/utils/utils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT src/utils/giada_tests-utils.obj -MD -MP -MF src/utils/$(DEPDIR)/giada_tests-utils.Tpo -c -o src/utils/giada_tests-utils.obj `if test -f 'src/utils/utils.cpp'; then $(CYGPATH_W) 'src/utils/utils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/utils/utils.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/utils/$(DEPDIR)/giada_tests-utils.Tpo src/utils/$(DEPDIR)/giada_tests-utils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/utils/utils.cpp' object='src/utils/giada_tests-utils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o src/utils/giada_tests-utils.obj `if test -f 'src/utils/utils.cpp'; then $(CYGPATH_W) 'src/utils/utils.cpp'; else $(CYGPATH_W) '$(srcdir)/src/utils/utils.cpp'; fi`

src/utils/giada_tests-log.o: src/utils/log.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT src/utils/giada_tests-log.o -MD -MP -MF src/utils/$(DEPDIR)/giada_tests-log.Tpo -c -o src/utils/giada_tests-log.o `test -f 'src/utils/log.cpp' || echo '$(srcdir)/'`src/utils/log.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/utils/$(DEPDIR)/giada_tests-log.Tpo src/utils/$(DEPDIR)/giada_tests-log.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/utils/log.cpp' object='src/utils/giada_tests-log.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o src/utils/giada_tests-log.o `test -f 'src/utils/log.cpp' || echo '$(srcdir)/'`src/utils/log.cpp

src/utils/giada_tests-log.obj: src/utils/log.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT src/utils/giada_tests-log.obj -MD -MP -MF src/utils/$(DEPDIR)/giada_tests-log.Tpo -c -o src/utils/giada_tests-log.obj `if test -f 'src/utils/log.cpp'; then $(CYGPATH_W) 'src/utils/log.cpp'; else $(CYGPATH_W) '$(srcdir)/src/utils/log.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/utils/$(DEPDIR)/giada_tests-log.Tpo src/utils/$(DEPDIR)/giada_tests-log.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/utils/log.cpp' object='src/utils/giada_tests-log.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o src/utils/giada_tests-log.obj `if test -f 'src/utils/log.cpp'; then $(CYGPATH_W) 'src/utils/log.cpp'; else $(CYGPATH_W) '$(srcdir)/src/utils/log.cpp'; fi`

src/deps/juce/juce_audio_basics/giada_tests-juce_audio_basics.o: src/deps/juce/juce_audio_basics/juce_audio_basics.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT src/deps/juce/juce_audio_basics/giada_tests-juce_audio_basics.o -MD -MP -MF src/deps/juce/juce_audio_basics/$(DEPDIR)/giada_tests-juce_audio_basics.Tpo -c -o src/deps/juce/juce_audio_basics/giada_tests-juce_audio_basics.o `test -f 'src/deps/juce/juce_audio_basics/juce_audio_basics.cpp' || echo '$(srcdir)/'`src/deps/juce/juce_audio_basics/juce_audio_basics.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/deps/juce/juce_audio_basics/$(DEPDIR)/giada_tests-juce_audio_basics.Tpo src/deps/juce/juce_audio_basics/$(DEPDIR)/giada_tests-juce_audio_basics.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/deps/juce/juce_audio_basics/juce_audio_basics.cpp' object='src/deps/juce/juce_audio_basics/giada_tests-juce_audio_basics.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o src/deps/juce/juce_audio_basics/giada_tests-juce_audio_basics.o `test -f 'src/deps/juce/juce_audio_basics/juce_audio_basics.cpp' || echo '$(srcdir)/'`src/deps/juce/juce_audio_basics/juce_audio_basics.cpp

src/deps/juce/juce_audio_basics/giada_tests-juce_audio_basics.obj: src/deps/juce/juce_audio_basics/juce_audio_basics.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT src/deps/juce/juce_audio_basics/giada_tests-juce_audio_basics.obj -MD -MP -MF src/deps/juce/juce_audio_basics/$(DEPDIR)/giada_tests-juce_audio_basics.Tpo -c -o src/deps/juce/juce_audio_basics/giada_tests-juce_audio_basics.obj `if test -f 'src/deps/juce/juce_audio_basics/juce_audio_basics.cpp'; then $(CYGPATH_W) 'src/deps/juce/juce_audio_basics/juce_audio_basics.cpp'; else $(CYGPATH_W) '$(srcdir)/src/deps/juce/juce_audio_basics/juce_audio_basics.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/deps/juce/juce_audio_basics/$(DEPDIR)/giada_tests-juce_audio_basics.Tpo src/deps/juce/juce_audio_basics/$(DEPDIR)/giada_tests-juce_audio_basics.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/deps/juce/juce_audio_basics/juce_audio_basics.cpp' object='src/deps/juce/juce_audio_basics/giada_tests-juce_audio_basics.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o src/deps/juce/juce_audio_basics/giada_tests-juce_audio_basics.obj `if test -f 'src/deps/juce/juce_audio_basics/juce_audio_basics.cpp'; then $(CYGPATH_W) 'src/deps/juce/juce_audio_basics/juce_audio_basics.cpp'; else $(CYGPATH_W) '$(srcdir)/src/deps/juce/juce_audio_basics/juce_audio_basics.cpp'; fi`

src/deps/juce/juce_audio_processors/giada_tests-juce_audio_processors.o: src/deps/juce/juce_audio_processors/juce_audio_processors.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT src/deps/juce/juce_audio_processors/giada_tests-juce_audio_processors.o -MD -MP -MF src/deps/juce/juce_audio_processors/$(DEPDIR)/giada_tests-juce_audio_processors.Tpo -c -o src/deps/juce/juce_audio_processors/giada_tests-juce_audio_processors.o `test -f 'src/deps/juce/juce_audio_processors/juce_audio_processors.cpp' || echo '$(srcdir)/'`src/deps/juce/juce_audio_processors/juce_audio_processors.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/deps/juce/juce_audio_processors/$(DEPDIR)/giada_tests-juce_audio_processors.Tpo src/deps/juce/juce_audio_processors/$(DEPDIR)/giada_tests-juce_audio_processors.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/deps/juce/juce_audio_processors/juce_audio_processors.cpp' object='src/deps/juce/juce_audio_processors/giada_tests-juce_audio_processors.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o src/deps/juce/juce_audio_processors/giada_tests-juce_audio_processors.o `test -f 'src/deps/juce/juce_audio_processors/juce_audio_processors.cpp' || echo '$(srcdir)/'`src/deps/juce/juce_audio_processors/juce_audio_processors.cpp

src/deps/juce/juce_audio_processors/giada_tests-juce_audio_processors.obj: src/deps/juce/juce_audio_processors/juce_audio_processors.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT src/deps/juce/juce_audio_processors/giada_tests-juce_audio_processors.obj -MD -MP -MF src/deps/juce/juce_audio_processors/$(DEPDIR)/giada_tests-juce_audio_processors.Tpo -c -o src/deps/juce/juce_audio_processors/giada_tests-juce_audio_processors.obj `if test -f 'src/deps/juce/juce_audio_processors/juce_audio_processors.cpp'; then $(CYGPATH_W) 'src/deps/juce/juce_audio_processors/juce_audio_processors.cpp'; else $(CYGPATH_W) '$(srcdir)/src/deps/juce/juce_audio_processors/juce_audio_processors.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/deps/juce/juce_audio_processors/$(DEPDIR)/giada_tests-juce_audio_processors.Tpo src/deps/juce/juce_audio_processors/$(DEPDIR)/giada_tests-juce_audio_processors.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/deps/juce/juce_audio_processors/juce_audio_processors.cpp' object='src/deps/juce/juce_audio_processors/giada_tests-juce_audio_processors.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o src/deps/juce/juce_audio_processors/giada_tests-juce_audio_processors.obj `if test -f 'src/deps/juce/juce_audio_processors/juce_audio_processors.cpp'; then $(CYGPATH_W) 'src/deps/juce/juce_audio_processors/juce_audio_processors.cpp'; else $(CYGPATH_W) '$(srcdir)/src/deps/juce/juce_audio_processors/juce_audio_processors.cpp'; fi`

src/deps/juce/juce_core/giada_tests-juce_core.o: src/deps/juce/juce_core/juce_core.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT src/deps/juce/juce_core/giada_tests-juce_core.o -MD -MP -MF src/deps/juce/juce_core/$(DEPDIR)/giada_tests-juce_core.Tpo -c -o src/deps/juce/juce_core/giada_tests-juce_core.o `test -f 'src/deps/juce/juce_core/juce_core.cpp' || echo '$(srcdir)/'`src/deps/juce/juce_core/juce_core.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/deps/juce/juce_core/$(DEPDIR)/giada_tests-juce_core.Tpo src/deps/juce/juce_core/$(DEPDIR)/giada_tests-juce_core.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/deps/juce/juce_core/juce_core.cpp' object='src/deps/juce/juce_core/giada_tests-juce_core.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o src/deps/juce/juce_core/giada_tests-juce_core.o `test -f 'src/deps/juce/juce_core/juce_core.cpp' || echo '$(srcdir)/'`src/deps/juce/juce_core/juce_core.cpp

src/deps/juce/juce_core/giada_tests-juce_core.obj: src/deps/juce/juce_core/juce_core.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT src/deps/juce/juce_core/giada_tests-juce_core.obj -MD -MP -MF src/deps/juce/juce_core/$(DEPDIR)/giada_tests-juce_core.Tpo -c -o src/deps/juce/juce_core/giada_tests-juce_core.obj `if test -f 'src/deps/juce/juce_core/juce_core.cpp'; then $(CYGPATH_W) 'src/deps/juce/juce_core/juce_core.cpp'; else $(CYGPATH_W) '$(srcdir)/src/deps/juce/juce_core/juce_core.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/deps/juce/juce_core/$(DEPDIR)/giada_tests-juce_core.Tpo src/deps/juce/juce_core/$(DEPDIR)/giada_tests-juce_core.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/deps/juce/juce_core/juce_core.cpp' object='src/deps/juce/juce_core/giada_tests-juce_core.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o src/deps/juce/juce_core/giada_tests-juce_core.obj `if test -f 'src/deps/juce/juce_core/juce_core.cpp'; then $(CYGPATH_W) 'src/deps/juce/juce_core/juce_core.cpp'; else $(CYGPATH_W) '$(srcdir)/src/deps/juce/juce_core/juce_core.cpp'; fi`

src/deps/juce/juce_data_structures/giada_tests-juce_data_structures.o: src/deps/juce/juce_data_structures/juce_data_structures.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT src/deps/juce/juce_data_structures/giada_tests-juce_data_structures.o -MD -MP -MF src/deps/juce/juce_data_structures/$(DEPDIR)/giada_tests-juce_data_structures.Tpo -c -o src/deps/juce/juce_data_structures/giada_tests-juce_data_structures.o `test -f 'src/deps/juce/juce_data_structures/juce_data_structures.cpp' || echo '$(srcdir)/'`src/deps/juce/juce_data_structures/juce_data_structures.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/deps/juce/juce_data_structures/$(DEPDIR)/giada_tests-juce_data_structures.Tpo src/deps/juce/juce_data_structures/$(DEPDIR)/giada_tests-juce_data_structures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/deps/juce/juce_data_structures/juce_data_structures.cpp' object='src/deps/juce/juce_data_structures/giada_tests-juce_data_structures.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o src/deps/juce/juce_data_structures/giada_tests-juce_data_structures.o `test -f 'src/deps/juce/juce_data_structures/juce_data_structures.cpp' || echo '$(srcdir)/'`src/deps/juce/juce_data_structures/juce_data_structures.cpp

src/deps/juce/juce_data_structures/giada_tests-juce_data_structures.obj: src/deps/juce/juce_data_structures/juce_data_structures.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT src/deps/juce/juce_data_structures/giada_tests-juce_data_structures.obj -MD -MP -MF src/deps/juce/juce_data_structures/$(DEPDIR)/giada_tests-juce_data_structures.Tpo -c -o src/deps/juce/juce_data_structures/giada_tests-juce_data_structures.obj `if test -f 'src/deps/juce/juce_data_structures/juce_data_structures.cpp'; then $(CYGPATH_W) 'src/deps/juce/juce_data_structures/juce_data_structures.cpp'; else $(CYGPATH_W) '$(srcdir)/src/deps/juce/juce_data_structures/juce_data_structures.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/deps/juce/juce_data_structures/$(DEPDIR)/giada_tests-juce_data_structures.Tpo src/deps/juce/juce_data_structures/$(DEPDIR)/giada_tests-juce_data_structures.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/deps/juce/juce_data_structures/juce_data_structures.cpp' object='src/deps/juce/juce_data_structures/giada_tests-juce_data_structures.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o src/deps/juce/juce_data_structures/giada_tests-juce_data_structures.obj `if test -f 'src/deps/juce/juce_data_structures/juce_data_structures.cpp'; then $(CYGPATH_W) 'src/deps/juce/juce_data_structures/juce_data_structures.cpp'; else $(CYGPATH_W) '$(srcdir)/src/deps/juce/juce_data_structures/juce_data_structures.cpp'; fi`

src/deps/juce/juce_events/giada_tests-juce_events.o: src/deps/juce/juce_events/juce_events.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT src/deps/juce/juce_events/giada_tests-juce_events.o -MD -MP -MF src/deps/juce/juce_events/$(DEPDIR)/giada_tests-juce_events.Tpo -c -o src/deps/juce/juce_events/giada_tests-juce_events.o `test -f 'src/deps/juce/juce_events/juce_events.cpp' || echo '$(srcdir)/'`src/deps/juce/juce_events/juce_events.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/deps/juce/juce_events/$(DEPDIR)/giada_tests-juce_events.Tpo src/deps/juce/juce_events/$(DEPDIR)/giada_tests-juce_events.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/deps/juce/juce_events/juce_events.cpp' object='src/deps/juce/juce_events/giada_tests-juce_events.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o src/deps/juce/juce_events/giada_tests-juce_events.o `test -f 'src/deps/juce/juce_events/juce_events.cpp' || echo '$(srcdir)/'`src/deps/juce/juce_events/juce_events.cpp

src/deps/juce/juce_events/giada_tests-juce_events.obj: src/deps/juce/juce_events/juce_events.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT src/deps/juce/juce_events/giada_tests-juce_events.obj -MD -MP -MF src/deps/juce/juce_events/$(DEPDIR)/giada_tests-juce_events.Tpo -c -o src/deps/juce/juce_events/giada_tests-juce_events.obj `if test -f 'src/deps/juce/juce_events/juce_events.cpp'; then $(CYGPATH_W) 'src/deps/juce/juce_events/juce_events.cpp'; else $(CYGPATH_W) '$(srcdir)/src/deps/juce/juce_events/juce_events.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/deps/juce/juce_events/$(DEPDIR)/giada_tests-juce_events.Tpo src/deps/juce/juce_events/$(DEPDIR)/giada_tests-juce_events.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/deps/juce/juce_events/juce_events.cpp' object='src/deps/juce/juce_events/giada_tests-juce_events.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o src/deps/juce/juce_events/giada_tests-juce_events.obj `if test -f 'src/deps/juce/juce_events/juce_events.cpp'; then $(CYGPATH_W) 'src/deps/juce/juce_events/juce_events.cpp'; else $(CYGPATH_W) '$(srcdir)/src/deps/juce/juce_events/juce_events.cpp'; fi`

src/deps/juce/juce_graphics/giada_tests-juce_graphics.o: src/deps/juce/juce_graphics/juce_graphics.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT src/deps/juce/juce_graphics/giada_tests-juce_graphics.o -MD -MP -MF src/deps/juce/juce_graphics/$(DEPDIR)/giada_tests-juce_graphics.Tpo -c -o src/deps/juce/juce_graphics/giada_tests-juce_graphics.o `test -f 'src/deps/juce/juce_graphics/juce_graphics.cpp' || echo '$(srcdir)/'`src/deps/juce/juce_graphics/juce_graphics.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/deps/juce/juce_graphics/$(DEPDIR)/giada_tests-juce_graphics.Tpo src/deps/juce/juce_graphics/$(DEPDIR)/giada_tests-juce_graphics.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/deps/juce/juce_graphics/juce_graphics.cpp' object='src/deps/juce/juce_graphics/giada_tests-juce_graphics.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o src/deps/juce/juce_graphics/giada_tests-juce_graphics.o `test -f 'src/deps/juce/juce_graphics/juce_graphics.cpp' || echo '$(srcdir)/'`src/deps/juce/juce_graphics/juce_graphics.cpp

src/deps/juce/juce_graphics/giada_tests-juce_graphics.obj: src/deps/juce/juce_graphics/juce_graphics.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT src/deps/juce/juce_graphics/giada_tests-juce_graphics.obj -MD -MP -MF src/deps/juce/juce_graphics/$(DEPDIR)/giada_tests-juce_graphics.Tpo -c -o src/deps/juce/juce_graphics/giada_tests-juce_graphics.obj `if test -f 'src/deps/juce/juce_graphics/juce_graphics.cpp'; then $(CYGPATH_W) 'src/deps/juce/juce_graphics/juce_graphics.cpp'; else $(CYGPATH_W) '$(srcdir)/src/deps/juce/juce_graphics/juce_graphics.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/deps/juce/juce_graphics/$(DEPDIR)/giada_tests-juce_graphics.Tpo src/deps/juce/juce_graphics/$(DEPDIR)/giada_tests-juce_graphics.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/deps/juce/juce_graphics/juce_graphics.cpp' object='src/deps/juce/juce_graphics/giada_tests-juce_graphics.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o src/deps/juce/juce_graphics/giada_tests-juce_graphics.obj `if test -f 'src/deps/juce/juce_graphics/juce_graphics.cpp'; then $(CYGPATH_W) 'src/deps/juce/juce_graphics/juce_graphics.cpp'; else $(CYGPATH_W) '$(srcdir)/src/deps/juce/juce_graphics/juce_graphics.cpp'; fi`

src/deps/juce/juce_gui_basics/giada_tests-juce_gui_basics.o: src/deps/juce/juce_gui_basics/juce_gui_basics.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT src/deps/juce/juce_gui_basics/giada_tests-juce_gui_basics.o -MD -MP -MF src/deps/juce/juce_gui_basics/$(DEPDIR)/giada_tests-juce_gui_basics.Tpo -c -o src/deps/juce/juce_gui_basics/giada_tests-juce_gui_basics.o `test -f 'src/deps/juce/juce_gui_basics/juce_gui_basics.cpp' || echo '$(srcdir)/'`src/deps/juce/juce_gui_basics/juce_gui_basics.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/deps/juce/juce_gui_basics/$(DEPDIR)/giada_tests-juce_gui_basics.Tpo src/deps/juce/juce_gui_basics/$(DEPDIR)/giada_tests-juce_gui_basics.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/deps/juce/juce_gui_basics/juce_gui_basics.cpp' object='src/deps/juce/juce_gui_basics/giada_tests-juce_gui_basics.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o src/deps/juce/juce_gui_basics/giada_tests-juce_gui_basics.o `test -f 'src/deps/juce/juce_gui_basics/juce_gui_basics.cpp' || echo '$(srcdir)/'`src/deps/juce/juce_gui_basics/juce_gui_basics.cpp

src/deps/juce/juce_gui_basics/giada_tests-juce_gui_basics.obj: src/deps/juce/juce_gui_basics/juce_gui_basics.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT src/deps/juce/juce_gui_basics/giada_tests-juce_gui_basics.obj -MD -MP -MF src/deps/juce/juce_gui_basics/$(DEPDIR)/giada_tests-juce_gui_basics.Tpo -c -o src/deps/juce/juce_gui_basics/giada_tests-juce_gui_basics.obj `if test -f 'src/deps/juce/juce_gui_basics/juce_gui_basics.cpp'; then $(CYGPATH_W) 'src/deps/juce/juce_gui_basics/juce_gui_basics.cpp'; else $(CYGPATH_W) '$(srcdir)/src/deps/juce/juce_gui_basics/juce_gui_basics.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/deps/juce/juce_gui_basics/$(DEPDIR)/giada_tests-juce_gui_basics.Tpo src/deps/juce/juce_gui_basics/$(DEPDIR)/giada_tests-juce_gui_basics.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/deps/juce/juce_gui_basics/juce_gui_basics.cpp' object='src/deps/juce/juce_gui_basics/giada_tests-juce_gui_basics.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o src/deps/juce/juce_gui_basics/giada_tests-juce_gui_basics.obj `if test -f 'src/deps/juce/juce_gui_basics/juce_gui_basics.cpp'; then $(CYGPATH_W) 'src/deps/juce/juce_gui_basics/juce_gui_basics.cpp'; else $(CYGPATH_W) '$(srcdir)/src/deps/juce/juce_gui_basics/juce_gui_basics.cpp'; fi`

src/deps/juce/juce_gui_extra/giada_tests-juce_gui_extra.o: src/deps/juce/juce_gui_extra/juce_gui_extra.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT src/deps/juce/juce_gui_extra/giada_tests-juce_gui_extra.o -MD -MP -MF src/deps/juce/juce_gui_extra/$(DEPDIR)/giada_tests-juce_gui_extra.Tpo -c -o src/deps/juce/juce_gui_extra/giada_tests-juce_gui_extra.o `test -f 'src/deps/juce/juce_gui_extra/juce_gui_extra.cpp' || echo '$(srcdir)/'`src/deps/juce/juce_gui_extra/juce_gui_extra.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/deps/juce/juce_gui_extra/$(DEPDIR)/giada_tests-juce_gui_extra.Tpo src/deps/juce/juce_gui_extra/$(DEPDIR)/giada_tests-juce_gui_extra.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/deps/juce/juce_gui_extra/juce_gui_extra.cpp' object='src/deps/juce/juce_gui_extra/giada_tests-juce_gui_extra.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o src/deps/juce/juce_gui_extra/giada_tests-juce_gui_extra.o `test -f 'src/deps/juce/juce_gui_extra/juce_gui_extra.cpp' || echo '$(srcdir)/'`src/deps/juce/juce_gui_extra/juce_gui_extra.cpp

src/deps/juce/juce_gui_extra/giada_tests-juce_gui_extra.obj: src/deps/juce/juce_gui_extra/juce_gui_extra.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -MT src/deps/juce/juce_gui_extra/giada_tests-juce_gui_extra.obj -MD -MP -MF src/deps/juce/juce_gui_extra/$(DEPDIR)/giada_tests-juce_gui_extra.Tpo -c -o src/deps/juce/juce_gui_extra/giada_tests-juce_gui_extra.obj `if test -f 'src/deps/juce/juce_gui_extra/juce_gui_extra.cpp'; then $(CYGPATH_W) 'src/deps/juce/juce_gui_extra/juce_gui_extra.cpp'; else $(CYGPATH_W) '$(srcdir)/src/deps/juce/juce_gui_extra/juce_gui_extra.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) src/deps/juce/juce_gui_extra/$(DEPDIR)/giada_tests-juce_gui_extra.Tpo src/deps/juce/juce_gui_extra/$(DEPDIR)/giada_tests-juce_gui_extra.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='src/deps/juce/juce_gui_extra/juce_gui_extra.cpp' object='src/deps/juce/juce_gui_extra/giada_tests-juce_gui_extra.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_tests_CPPFLAGS) $(CPPFLAGS) $(giada_tests_CXXFLAGS) $(CXXFLAGS) -c -o src/deps/juce/juce_gui_extra/giada_tests-juce_gui_extra.obj `if test -f 'src/deps/juce/juce_gui_extra/juce_gui_extra.cpp'; then $(CYGPATH_W) 'src/deps/juce/juce_gui_extra/juce_gui_extra.cpp'; else $(CYGPATH_W) '$(srcdir)/src/deps/juce/juce_gui_extra/juce_gui_extra.cpp'; fi`

.mm.o:
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepOBJCXX_TRUE@	$(OBJCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepOBJCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXXCOMPILE) -c -o $@ $<

.mm.obj:
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepOBJCXX_TRUE@	$(OBJCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepOBJCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

src/utils/giada-cocoa.o: src/utils/cocoa.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT src/utils/giada-cocoa.o -MD -MP -MF src/utils/$(DEPDIR)/giada-cocoa.Tpo -c -o src/utils/giada-cocoa.o `test -f 'src/utils/cocoa.mm' || echo '$(srcdir)/'`src/utils/cocoa.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) src/utils/$(DEPDIR)/giada-cocoa.Tpo src/utils/$(DEPDIR)/giada-cocoa.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='src/utils/cocoa.mm' object='src/utils/giada-cocoa.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o src/utils/giada-cocoa.o `test -f 'src/utils/cocoa.mm' || echo '$(srcdir)/'`src/utils/cocoa.mm

src/utils/giada-cocoa.obj: src/utils/cocoa.mm
@am__fastdepOBJCXX_TRUE@	$(AM_V_OBJCXX)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -MT src/utils/giada-cocoa.obj -MD -MP -MF src/utils/$(DEPDIR)/giada-cocoa.Tpo -c -o src/utils/giada-cocoa.obj `if test -f 'src/utils/cocoa.mm'; then $(CYGPATH_W) 'src/utils/cocoa.mm'; else $(CYGPATH_W) '$(srcdir)/src/utils/cocoa.mm'; fi`
@am__fastdepOBJCXX_TRUE@	$(AM_V_at)$(am__mv) src/utils/$(DEPDIR)/giada-cocoa.Tpo src/utils/$(DEPDIR)/giada-cocoa.Po
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX)source='src/utils/cocoa.mm' object='src/utils/giada-cocoa.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepOBJCXX_FALSE@	DEPDIR=$(DEPDIR) $(OBJCXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepOBJCXX_FALSE@	$(AM_V_OBJCXX@am__nodep@)$(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(giada_CPPFLAGS) $(CPPFLAGS) $(AM_OBJCXXFLAGS) $(OBJCXXFLAGS) -c -o src/utils/giada-cocoa.obj `if test -f 'src/utils/cocoa.mm'; then $(CYGPATH_W) 'src/utils/cocoa.mm'; else $(CYGPATH_W) '$(srcdir)/src/utils/cocoa.mm'; fi`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	else \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
giada_tests.log: giada_tests$(EXEEXT)
	@p='giada_tests$(EXEEXT)'; \
	b='giada_tests'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f src/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/$(am__dirstamp)
	-rm -f src/core/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/core/$(am__dirstamp)
	-rm -f src/deps/juce/juce_audio_basics/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/deps/juce/juce_audio_basics/$(am__dirstamp)
	-rm -f src/deps/juce/juce_audio_processors/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/deps/juce/juce_audio_processors/$(am__dirstamp)
	-rm -f src/deps/juce/juce_core/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/deps/juce/juce_core/$(am__dirstamp)
	-rm -f src/deps/juce/juce_data_structures/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/deps/juce/juce_data_structures/$(am__dirstamp)
	-rm -f src/deps/juce/juce_events/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/deps/juce/juce_events/$(am__dirstamp)
	-rm -f src/deps/juce/juce_graphics/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/deps/juce/juce_graphics/$(am__dirstamp)
	-rm -f src/deps/juce/juce_gui_basics/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/deps/juce/juce_gui_basics/$(am__dirstamp)
	-rm -f src/deps/juce/juce_gui_extra/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/deps/juce/juce_gui_extra/$(am__dirstamp)
	-rm -f src/glue/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/glue/$(am__dirstamp)
	-rm -f src/gui/dialogs/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/gui/dialogs/$(am__dirstamp)
	-rm -f src/gui/elems/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/gui/elems/$(am__dirstamp)
	-rm -f src/utils/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/utils/$(am__dirstamp)
	-rm -f tests/$(DEPDIR)/$(am__dirstamp)
	-rm -f tests/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf src/$(DEPDIR) src/core/$(DEPDIR) src/deps/juce/juce_audio_basics/$(DEPDIR) src/deps/juce/juce_audio_processors/$(DEPDIR) src/deps/juce/juce_core/$(DEPDIR) src/deps/juce/juce_data_structures/$(DEPDIR) src/deps/juce/juce_events/$(DEPDIR) src/deps/juce/juce_graphics/$(DEPDIR) src/deps/juce/juce_gui_basics/$(DEPDIR) src/deps/juce/juce_gui_extra/$(DEPDIR) src/glue/$(DEPDIR) src/gui/dialogs/$(DEPDIR) src/gui/elems/$(DEPDIR) src/utils/$(DEPDIR) tests/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf src/$(DEPDIR) src/core/$(DEPDIR) src/deps/juce/juce_audio_basics/$(DEPDIR) src/deps/juce/juce_audio_processors/$(DEPDIR) src/deps/juce/juce_core/$(DEPDIR) src/deps/juce/juce_data_structures/$(DEPDIR) src/deps/juce/juce_events/$(DEPDIR) src/deps/juce/juce_graphics/$(DEPDIR) src/deps/juce/juce_gui_basics/$(DEPDIR) src/deps/juce/juce_gui_extra/$(DEPDIR) src/glue/$(DEPDIR) src/gui/dialogs/$(DEPDIR) src/gui/elems/$(DEPDIR) src/utils/$(DEPDIR) tests/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--refresh check check-TESTS \
	check-am clean clean-binPROGRAMS clean-checkPROGRAMS \
	clean-cscope clean-generic cscope cscopelist-am ctags ctags-am \
	dist dist-all dist-bzip2 dist-gzip dist-lzip dist-shar \
	dist-tarZ dist-xz dist-zip distcheck distclean \
	distclean-compile distclean-generic distclean-tags \
	distcleancheck distdir distuninstallcheck dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am recheck tags tags-am \
	uninstall uninstall-am uninstall-binPROGRAMS


# used only under MinGW to compile the resource.rc file (program icon)

resource.o:
	windres src/ext/resource.rc -o resource.o

# custom rtaudio

src/deps/rtaudio-mod/librtaudio.a:
	@cd src/deps/rtaudio-mod; echo "Building RtAudio for Linux..."; \
	./configure --with-jack --with-alsa; \
	make;

# make rename ------------------------------------------------------------------

@LINUX_TRUE@rename:
@LINUX_TRUE@	mv giada giada_lin
@WINDOWS_TRUE@rename:
@WINDOWS_TRUE@	mv giada giada_win.exe
@OSX_TRUE@rename:
@OSX_TRUE@	mv giada giada_osx

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
